<!DOCTYPE html>
<html lang="{{@site.locale}}" class="is-color-{{#match @custom.color_combinations "Onyx"}}onyx{{else match @custom.color_combinations "Rust"}}rust{{else match @custom.color_combinations "Fossil"}}fossil{{else match @custom.color_combinations "Mint"}}mint{{else match @custom.color_combinations "Ember"}}ember{{else match @custom.color_combinations "Ice"}}ice{{else match @custom.color_combinations "Maelstrom"}}maelstrom{{else}}default{{/match}}">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{meta_title}}</title>

    {{!-- Preload main styles and scripts for better performance --}}
    <link rel="preload" as="style" href="{{asset "built/screen.css"}}">
    <link rel="preload" as="script" href="{{asset "built/main.min.js"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "built/screen.css"}}">
	<link href="https://cdn.zenbooker.com/widget/latest/zenbooker.css" rel="stylesheet">
	<script src="https://cdn.zenbooker.com/widget/latest/zenbooker.js" type="text/javascript"></script>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
  const steps = [
    { name: 'message', placeholder: 'Any Question? Ask Me Anything...', type: 'text' },
    { name: 'name',    placeholder: 'Your name...',    type: 'text' },
    { name: 'email',   placeholder: 'Your email...',   type: 'email' }
  ];

  const form    = document.getElementById('formspree-inline');
  const wrapper = form.querySelector('.inline-field-wrapper');
  const nextBtn = document.getElementById('inline-next');
  const data    = {};
  let   step    = 0, input;

function renderStep() {
  const old = input;
  stepBtnState(); // update Next/Submit text early

  if (old) {
    // animate old field out
    old.classList.add('fade-out');
    old.disabled = true;
    setTimeout(() => replaceField(), 200);
  } else {
    replaceField();
  }

  function replaceField() {
    wrapper.innerHTML = '';
    // create new field
    input = document.createElement('input');
    Object.assign(input, {
      name:        steps[step].name,
      type:        steps[step].type,
      placeholder: steps[step].placeholder,
      required:    true
    });
    input.classList.add('fade-in');
    wrapper.appendChild(input);
    // trigger fade-in
    requestAnimationFrame(() => input.classList.remove('fade-in'));
    input.focus();
  }

  function stepBtnState() {
    nextBtn.textContent = (step < steps.length - 1) ? 'Next' : 'Submit';
  }
}

  function advance() {
    const val = input.value.trim();
    if (!val) return;
    data[steps[step].name] = val;
    step++;
    if (step < steps.length) {
      renderStep();
    } else {
      // append hidden fields then submit
      Object.entries(data).forEach(([k,v]) => {
        const h = document.createElement('input');
        h.type  = 'hidden';
        h.name  = k;
        h.value = v;
        form.appendChild(h);
      });
      form.submit();
    }
  }

  form.addEventListener('keydown', e => {
    if (e.key === 'Enter') {
      e.preventDefault();
      advance();
    }
  });
  nextBtn.addEventListener('click', advance);
  

  renderStep();
});
        // Function to set the theme
        function setTheme(theme) {
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('theme', theme);
            updateThemeToggleIcon(theme);
        }

        // Function to get the user's color scheme preference
        function getColorScheme() {
            return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        }

        // Function to update theme toggle icon
        function updateThemeToggleIcon(theme) {
            const toggle = document.querySelector('.gh-theme-toggle');
            if (toggle) {
                toggle.setAttribute('data-theme', theme);
            }
        }

        // Function to toggle theme
        function toggleTheme() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            setTheme(newTheme);
        }

        // Get the theme setting from Ghost
        var themeSetting = '{{@custom.appearance}}';
        var savedTheme = localStorage.getItem('theme');

        // Initialize theme based on settings
        if (themeSetting === 'user') {
            // Use saved preference if available, otherwise system preference
            if (savedTheme) {
                setTheme(savedTheme);
            } else {
                setTheme(getColorScheme());
            }
        } else if (themeSetting === 'light') {
            setTheme('light');
        } else if (themeSetting === 'dark') {
            setTheme('dark');
        } else if (themeSetting === 'system') {
            setTheme(getColorScheme());
        }

        // Add click handler to theme toggles
        document.addEventListener('DOMContentLoaded', function() {
            const themeToggles = document.querySelectorAll('.gh-theme-toggle');
            themeToggles.forEach(toggle => {
                toggle.addEventListener('click', function() {
                    if (themeSetting === 'user') {
                        toggleTheme();
                    }
                });
            });
        });

        // Listen for changes in system color scheme
        if (themeSetting === 'system') {
            window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {
                setTheme(e.matches ? 'dark' : 'light');
            });
        }
    </script>
    <script src="https://js.stripe.com/v3/"></script>
    <script src="https://code.jquery.com/jquery-latest.min.js"></script>
    {{ghost_head}}
</head>

<body class="{{body_class}}{{block "body_class"}}">
    <div class="is-color-{{#match @custom.color_combinations "Onyx"}}onyx{{else match @custom.color_combinations "Rust"}}rust{{else match @custom.color_combinations "Fossil"}}rossil{{else match @custom.color_combinations "Mint"}}mint{{else match @custom.color_combinations "Ember"}}ember{{else match @custom.color_combinations "Ice"}}ice{{else match @custom.color_combinations "Maelstrom"}}maelstrom{{else}}default{{/match}}">
        <div class="site">
            <header id="gh-head" class="gh-outer">
                <div class="head-inner {{#unless @site.logo}}no-profile{{/unless}}">
                    <div class="gh-head-nav">
                        <div class="gh-head-brand">
                            <div class="gh-head-brand-wrapper">
                                <div class="gh-head-logo-text">
                                    {{#if @site.logo }}
                                        <a href="{{@site.url}}">
                                            <figure class="gh-head-logo-wrapper">
                                                <img
                                                    srcset="{{img_url @site.logo size="s" format="webp"}} 400w"
                                                    sizes="480px"
                                                    src="{{img_url @site.logo size="s"}}"
                                                    alt="{{@site.title}}"
                                                    loading="lazy"
                                                    class="u-object-fit"
                                                >
                                            </figure>
                                        </a>
                                    {{/if}}
                                </div>
                                <div class="gh-head-text-wrapper">
                                    <a class="h4 gh-head-title" href="{{@site.url}}">
                                        {{@site.title}}
                                    </a>
                                    {{#if @custom.tagline_text }}
                                        <div class="sub-heading tagline">
                                            {{@custom.tagline_text}}
                                        </div>
                                    {{/if}}
                                </div>
                            </div>
                            {{> "components/theme-toggle"}}
                            <button class="gh-search gh-icon-btn" aria-label="Search this site" data-ghost-search>{{> "icons/search"}}</button>
                            <button class="gh-burger"></button>
                        </div>

                        <div class="head-action-social">
                            <a class="header-search-bar u-header-search-bar"
                                href="#"
                            aria-label="Search"
                            data-ghost-search >
                                <span class="social-item">
                                    {{> icons/search}}
                                </span>
                                <span class="search-help-text">âŒ˜K</span>
                            </a>
                            {{> "components/theme-toggle" isDesktopOnly=true}}
                        </div>
                        
                        <nav class="head-menu{{#unless @custom.show_navigation_icons}} no-icons{{/unless}}">
                            {{navigation}}
                        </nav>

                    </div>
                    {{#match @custom.navigation_buttons "!=" "Off"}}    
                        <div class="head-member-actions">
                            <div class="gh-head-members">
                                {{#match @custom.navigation_buttons "Subscription"}}
                                    {{#unless @member}}
                                        {{#unless @site.members_invite_only}}
                                            <!-- Zenbooker inline popup button begin -->
										
										<a class="gh-head-link button button-primary button-head" id="cieg-trigger"   onclick="Zenbooker.showPopupWidget('https://widget.zenbooker.com/book/1746111848718x728354147005624300?embed=true');return false;">Book Online</a>
										<!-- Zenbooker inline popup button end -->

                                            <a class="gh-head-link" href="#/portal/signin" data-portal="signin">{{t 'Sign in' }}</a>
                                        {{else}}
                                            <a class="button button-primary button-head" href="#/portal/signin" data-portal="signin">{{t 'Sign in' }}</a>
                                        {{/unless}}
                                    {{else}}
                                        <a class="button button-primary button-head" href="#/portal/account" data-portal="account">{{t 'Account' }}</a>
                                          <!-- Zenbooker inline popup button begin -->
								
										<a class="gh-head-link button button-primary button-head" id="cieg-trigger" onclick="Zenbooker.showPopupWidget('https://widget.zenbooker.com/book/1746111848718x728354147005624300?embed=true');return false;">Book Online</a>
										<!-- Zenbooker inline popup button end -->
                                    {{/unless}}
                                {{else}}
                                    <a class="button button-primary button-head" href="{{@custom.navigation_buttons_link}}">{{@custom.navigation_buttons_text}}</a>
                                {{/match}}
                            </div>
                        </div>
                    {{/match}}
                </div>
            </header>

            <div class="site-content">
                {{{body}}}
                {{> footer}}
            </div>
        </div>
    </div>

    {{#is "post, page"}}
        {{> "pswp"}}
    {{/is}}

    {{!-- {{> "pswp"}} --}}

    <script src="{{asset "built/main.min.js"}}"></script>
    <script src="{{asset "built/lightbox.min.js"}}"></script>
    <script src="{{asset "js/prism.js"}}"></script>

    {{!-- TOC --}}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.10.0/tocbot.min.js"></script>
    <script>
        tocbot.init({
            tocSelector: '.toc',
            contentSelector: '.single-content',
            headingSelector: 'h2, h3',
            hasInnerContainers: true,
            ignoreSelector: '.kg-card h2, .kg-card h3, .kg-card h4, .kg-card h5, .kg-card h6, .toc-sidebar h4'
        });
    </script>
    {{!-- TOC --}}

    {{ghost_foot}}

</body>
</html>