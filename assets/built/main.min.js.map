{"version":3,"sources":["dropdown.js","lightbox.js","pagination.js","vendor/imagesloaded.pkgd.min.js","vendor/photoswipe-ui-default.min.js","vendor/photoswipe.min.js","vendor/reframe.min.js","main.js","tiny-slider.js"],"names":["dropdown","mediaQuery","window","matchMedia","menu","document","querySelector","nav","logo","navHTML","innerHTML","matches","querySelectorAll","forEach","item","index","style","transitionDelay","makeDropdown","submenuItems","offsetWidth","lastElementChild","unshift","remove","length","toggle","createElement","wrapper","setAttribute","body","classList","add","gridTemplateRows","Math","ceil","child","appendChild","addEventListener","e","contains","target","imagesLoaded","setTimeout","lightbox","trigger","trig","onThumbnailsClick","preventDefault","reachedCurrentItem","items","prevSibling","closest","previousElementSibling","prevItems","push","src","getAttribute","msrc","w","h","el","concat","nextSibling","nextElementSibling","pswpElement","PhotoSwipe","PhotoSwipeUI_Default","bgOpacity","closeOnScroll","fullscreenEl","history","shareEl","zoomEl","getThumbBoundsFn","thumbnail","pageYScroll","pageYOffset","documentElement","scrollTop","rect","getBoundingClientRect","x","left","y","top","width","init","pagination","isInfinite","done","isMasonry","feedElement","let","loading","async","loadNextPage","nextElement","html","await","fetch","href","text","doc","DOMParser","parseFromString","postElements","fragment","createDocumentFragment","elems","post","clonedItem","importNode","visibility","loadNextWithCheck","resNextElement","buttonElement","parentElement","innerHeight","observer","IntersectionObserver","entries","isIntersecting","disconnect","observe","loadMoreElement","children","newIds","allItems","masonryContainer","highestId","Array","from","reduce","max","currentId","parseInt","dataset","id","toString","originalOrder","map","join","initMasonryLayout","images","elem","loadedImages","totalImages","imageLoaded","img","complete","once","console","error","t","module","exports","EvEmitter","this","prototype","on","s","i","_events","includes","_onceEvents","off","indexOf","splice","emitEvent","slice","n","apply","allOff","require","jQuery","o","r","elements","isArray","options","Object","assign","getImages","jqDeferred","Deferred","check","bind","create","addElementImages","nodeName","addImage","background","addElementBackgroundImages","nodeType","d","url","element","Image","getComputedStyle","exec","backgroundImage","addBackground","progressedCount","hasAnyBroken","progress","isLoaded","notify","debug","log","isComplete","getIsImageComplete","confirm","naturalWidth","proxyImage","crossOrigin","currentSrc","handleEvent","type","onload","unbindEvents","onerror","removeEventListener","makeJQueryPlugin","fn","promise","a","b","define","amd","A","event","q","timeToIdle","mouseUsed","k","K","c","f","srcElement","g","S","onTap","name","stopPropagation","features","isOldAndroid","D","getNumItemsFn","p","C","E","F","removeClass","addClass","H","shareButtons","getImageURLForShare","getPageURLForShare","getTextForShare","replace","encodeURIComponent","download","label","parseShareButtonOut","onclick","G","I","closeElClasses","hasClass","clearTimeout","u","J","v","setIdle","L","relatedTarget","toElement","timeToIdleOutside","O","m","P","vGap","likelyTouchDevice","screen","fitControlsWidth","barsSize","captionEl","bottom","createEl","insertBefore","addCaptionHTMLFn","clientHeight","T","className","option","onInit","getChildByClass","j","l","z","loadingIndicatorDelay","title","closeEl","counterEl","arrowEl","preloaderEl","tapToClose","tapToToggleControls","clickToCloseNonZoomable","currItem","location","indexIndicatorSep","shout","hasAttribute","open","round","toggleDesktopZoom","close","prev","next","isFullscreen","exit","enter","extend","scrollWrap","listen","hideControls","showControls","update","initialZoomLevel","getZoomLevel","zoomTo","getDoubleTapZoom","test","tagName","prevent","onGlobalTap","onMouseOver","clearInterval","unbind","eventK","updateFullscreen","hideAnimationDuration","removeChild","showAnimationDuration","setInterval","getFullscreenAPI","template","allowProgressiveImg","updateIndexIndicator","setScrollOffset","getScrollY","getCurrentIndex","detail","pointerType","fitRatio","releasePoint","supportsFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","enterK","exitK","elementK","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","split","RegExp","firstChild","arraySearch","hasOwnProperty","easing","sine","out","sin","PI","inOut","cos","cubic","detectFeatures","oldIE","all","touch","requestAnimationFrame","raf","caf","cancelAnimationFrame","pointerEvent","PointerEvent","navigator","msPointerEnabled","userAgent","platform","appVersion","match","isOldIOSPhone","parseFloat","androidVersion","isMobileOpera","charAt","toUpperCase","toLowerCase","Date","getTime","svg","createElementNS","createSVGRect","call","allowPanToNext","spacing","loop","pinchToClose","closeOnVerticalDrag","verticalDragRange","showHideOpacity","focus","escKey","arrowKeys","mainScrollEndFriction","panEndFriction","isClickableElement","maxSpreadZoom","modal","scaleMode","ma","za","publicMethods","wa","Aa","ac","Ca","Ba","Va","initialPosition","La","min","Xa","keyCode","ctrlKey","altKey","shiftKey","metaKey","returnValue","Ya","Y","X","fa","Za","Ob","button","$b","U","Eb","Da","mb","pointerId","pageX","pageY","Mb","_","cb","V","ha","ka","ia","$","W","ga","Ma","oa","pa","na","kb","lb","nb","ta","ra","ob","Q","Ea","Sa","zb","Ab","aa","hb","ib","Gb","vb","ub","abs","ca","yb","Pb","tb","gb","Rb","N","4","2","3","changedTouches","sb","R","Sb","calculateSwipeSpeed","Ib","ja","db","Fa","Ha","Ub","Wb","Tb","B","M","Z","da","ea","la","qa","sa","ua","va","xa","ya","arguments","shift","bg","opacity","Ga","mc","Ia","container","Ja","Ka","Na","Oa","Pa","ic","Ta","Ua","$a","_a","ab","bb","eb","viewportSize","isMainScrollAnimating","isDragging","isZooming","applyZoomPan","framework","transform","itemHolders","wrap","display","perspective","height","resize","updateSize","orientationchange","clientWidth","scroll","keydown","click","animationName","ui","isNaN","_b","position","mainClass","setContent","updateCurrItem","cc","destroy","Xb","panTo","goTo","updateCurrZoomItem","bounds","center","invalidateCurrItems","needsUpdate","pop","innerWidth","cleanSlide","fb","jb","pb","qb","rb","wb","sqrt","Qb","Bb","Cb","parentNode","Db","Fb","identifier","Hb","Jb","Kb","Lb","touches","Nb","Vb","lastFlickOffset","lastFlickDist","lastFlickSpeed","slowDownRatio","slowDownRatioReverse","speedDecelerationRatio","speedDecelerationRatioAbs","distanceOffset","backAnimDestination","backAnimStarted","calculateOverBoundsAnimOffset","calculateAnimOffset","timeDiff","panAnimLoop","zoomPan","now","lastNow","initGestures","maxTouchPoints","msMaxTouchPoints","mousedown","mousemove","mouseup","kc","loaded","loadComplete","loadError","lc","errorMsg","nc","ec","holder","jc","baseDiv","clearPlaceholder","Yb","Zb","removeAttribute","initialLayout","miniImg","webkitBackfaceVisibility","dc","fc","forceProgressiveLoading","preload","gc","hc","imageAppended","placeholder","lastChild","lazyLoadItem","initController","getItemAt","preloader","qc","createEvent","origEvent","initCustomEvent","dispatchEvent","oc","rc","pc","initTap","onTapStart","onTapRelease","initDesktopZoom","setupDesktopZoom","handleMouseWheel","mouseZoomedIn","deltaY","deltaMode","deltaX","wheelDeltaX","wheelDeltaY","wheelDelta","Gc","sc","uc","Hc","Fc","galleryPIDs","pid","tc","vc","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","galleryUID","hash","substring","Ic","initHistory","updateURL","onHashChange","back","pushState","pathname","search","globalThis","self","reframe","offsetHeight","paddingTop","burger","timeout","tns","win","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","win$1","mozCancelAnimationFrame","obj","copy","undefined","checkStorageValue","value","JSON","parse","setLocalStorage","storage","key","access","setItem","getBody","fake","docElement","setFakeBody","docOverflow","overflow","resetFakeBody","addCSSRule","sheet","selector","rules","insertRule","addRule","getCssRulesLength","cssRules","arr","callback","scope","classListSupport","str","hasAttr","attr","getAttr","isNodeList","setAttrs","els","attrs","removeAttrs","attrLength","arrayFromNodeList","nl","hideElement","forceHide","showElement","isVisible","whichProperty","props","Props","substr","prefix","prop","getEndProperty","propIn","propOut","endProp","supportsPassive","opts","defineProperty","get","passiveOption","passive","addEvents","preventScrolling","removeEvents","Events","topics","eventName","emit","data","keys","object","mode","axis","gutter","edgePadding","fixedWidth","autoWidth","viewportMax","slideBy","controls","controlsPosition","controlsText","controlsContainer","prevButton","nextButton","navPosition","navContainer","navAsThumbnails","speed","autoplay","autoplayPosition","autoplayTimeout","autoplayDirection","autoplayText","autoplayHoverPause","autoplayButton","autoplayButtonOutput","autoplayResetOnVisibility","animateIn","animateOut","animateNormal","animateDelay","rewind","autoHeight","responsive","lazyload","lazyloadSelector","mouseDrag","swipeAngle","nested","preventActionWhenRunning","preventScrollOnTouch","freezable","useLocalStorage","nonce","KEYS","ENTER","SPACE","LEFT","RIGHT","tnsStorage","localStorageAccess","browserInfo","uid","localStorage","getItem","removeItem","div","rule","CALC","result","val","vals","PERCENTAGELAYOUT","outer","supported","count","CSSMQ","msMatchMedia","styleSheet","cssText","createTextNode","currentStyle","TRANSFORM","HAS3DTRANSFORMS","tf","cssTF","has3d","getPropertyValue","TRANSITIONDURATION","TRANSITIONDELAY","ANIMATIONDURATION","ANIMATIONDELAY","TRANSITIONEND","ANIMATIONEND","supportConsoleWarn","warn","tnsList","optionsElements","carousel","responsiveTem","updateOptions","middleWrapper","breakpointZone","slidePositions","imgsComplete","liveregionCurrent","controlsContainerHTML","prevButtonHTML","nextButtonHTML","prevIsButton","nextIsButton","navContainerHTML","navItems","pages","pagesCached","navClicked","navCurrentIndex","navCurrentIndexCached","navActiveClass","navStr","navStrCurrent","autoplayButtonHTML","autoplayHtmlStrings","autoplayTimer","animating","autoplayHoverPaused","autoplayUserPaused","autoplayVisibilityPaused","initPosition","lastPosition","translateInit","panStart","rafIndex","getDist","horizontal","outerWrapper","innerWrapper","containerParent","containerHTML","outerHTML","slideItems","slideCount","windowWidth","getWindowWidth","isOn","setBreakpointZone","getOption","viewport","getViewportWidth","floor","fixedWidthViewportWidth","media","slideItemsOut","cloneCount","itemsMax","bp","tem","hasOption","slideCountNew","hasRightDeadZone","rightBoundary","getRightBoundary","updateIndexBeforeTransform","transformAttr","transformPrefix","transformPostfix","getIndexMax","getStartIndex","indexCached","indexMin","getCurrentSlide","indexMax","moveDirectionExpected","running","events","newContainerClasses","slideId","tnsId","disable","disabled","freeze","getFreeze","frozen","controlsEvents","onControlsClick","getEvent","keyIndex","navEvents","onTransitionEnd","getTarget","navIndex","targetIndexBase","Number","stopAutoplay","curElement","activeElement","setFocus","hoverEvents","mouseover","stopAutoplayTimer","mouseout","setAutoplayTimer","visibilityEvent","visibilitychange","hidden","docmentKeydownEvent","touchEvents","touchstart","onPanStart","touchmove","onPanMove","touchend","onPanEnd","touchcancel","dragEvents","mouseleave","hasControls","hasNav","hasAutoplay","hasTouch","hasMouseDrag","slideActiveClass","slideClonedClass","imgCompleteClass","imgEvents","load","imgLoaded","imgFailed","imgCompleted","preventScroll","getPages","getCurrentNavIndex","resetVariblesWhenDisable","aria-hidden","tabindex","fragmentBefore","fragmentAfter","num","cloneFirst","cloneNode","cloneLast","fontSize","slide","marginLeft","getTransitionDurationStyle","getInnerWrapperStyles","getContainerWidth","getSlideWidthStyle","getSlideGutterStyle","getAnimationDurationStyle","middleWrapperStr","innerWrapperStr","containerStr","slideStr","itemsBP","fixedWidthBP","speedBP","edgePaddingBP","autoHeightBP","gutterBP","initSliderTransform","updateIndex","leftEdge","rightEdge","transformCore","postfix","to","duration","tick","unit","positionTick","resetDuration","doContainerTransform","getContainerTransformValue","moveElement","updateContentWrapperHeight","eve","animateSlide","version","getInfo","info","play","startAutoplay","pause","updateSliderHeight","updateInnerWrapperHeight","refresh","ownerNode","onResize","toggleAutoplay","htmlList","prevEl","parentEl","firstElementChild","rebuild","condition","ind","getAbsIndex","absIndex","getInsertPosition","pos","gap","getClientWidth","right","ww","edgePaddingTem","gutterTem","fixedWidthTem","speedTem","gutterTemUnit","itemsTem","dividend","getCSSPrefix","imgs","imgsLoadedCheck","getImageArray","initSliderTransformStyleCheck","doContainerTransformSilent","initTools","initEvents","stylesApplicationCheck","initSliderTransformCore","setSlidePositions","updateSlideStatus","insertAdjacentHTML","getLiveRegionStr","txt","data-action","aria-label","data-nav","aria-controls","navHtml","hiddenStr","updateNavVisibility","data-controls","isButton","updateControlsStatus","disableUI","resizeTasks","doAutoHeight","doLazyLoad","disableSlider","freezeSlider","additionalUpdates","bpChanged","breakpointZoneTem","needContainerTransform","itemsChanged","autoHeightTem","controlsTextTem","centerTem","autoplayTextTem","disableTem","freezeTem","arrowKeysTem","controlsTem","navTem","touchTem","mouseDragTem","autoplayTem","autoplayHoverPauseTem","autoplayResetOnVisibilityTem","indexTem","classN","enableUI","margin","len","indChanged","updateLiveRegion","deleteRule","removeRule","vp","getVisibleSlideRange","start","end","rangestart","rangeend","point","cell","arg","srcset","imgSelector","navPrev","navCurrent","getMaxSlideHeight","slideStart","slideRange","heights","maxHeight","wp","attr2","base","range","getLowerCaseNodeName","isAriaDisabled","disEnableElement","prevDisabled","nextDisabled","disablePrev","disableNext","getCenterGap","denominator","number","classOut","classIn","isOut","render","sliderMoved","strTrans","propertyName","targetIndex","indexGap","factor","dir","passEventObject","targetIn","updateAutoplayButton","action","isTouchEvent","preventDefaultBehavior","getMoveDirectionExpected","angle","atan2","direction","clientX","clientY","panUpdate","err","dist","cancelable","preventClick","indexMoved","moved","rough","displayIndex","st","initializeDOMFeatures","hasFeed","isIndexPage","paginationInitialized","setupFootnotes","setMasonryAnimationDelay","categoryNav","portalButton","readyState","navigationIcons","home","blog","work","author","course","faq","about","contact","books","bookmarks","podcasts","newsletters","tools","gallery","instagram","twitter","linkedin","facebook","github","shop","youtube","homepage","main-page","home-page","dashboard","current","now-page","updates","whats-new","status","courses","learning","tutorials","lessons","education","online-courses","about-me","biography","introduction","about-us","faqs","help","questions","help-center","support","favorites","saved","reading-list","saved-items","collections","audio","episodes","shows","podcast-episodes","broadcasts","digest","email-updates","subscription","mailing-list","photos","portfolio","photo-gallery","image-gallery","showcase","albums","posts","articles","writing","journal","latest-posts","my-blog","diary","thoughts","notes","writing-archive","profile","bio","library","reading","my-library","bookshelf","book-notes","book-reviews","recommended-books","literature","publications","projects","my-work","case-studies","experience","my-projects","achievements","career","work-history","social","connect","resources","utilities","my-tools","software","applications","tool-kit","gear","equipment","useful-tools","resource-library","default","NavigationManager","constructor","icons","HEADER_PREFIX","initialized","originalItems","pendingIcons","Map","navIcons","setIcon","slug","svgContent","updateIcons","set","initializeNavigation","initialize","getIcon","force","groups","headMenu","size","clear","processMenuItems","renderGroups","acc","link","textContent","trim","currentGroup","startsWith","header","getNavSlug","classNames","icon","find","cls","group","createGroupWithHeader","createGroupWithoutHeader","createNavList","scrollY","featured","feed","0","768","992","darkPage","isDark","footerGroup","footerNav","childNodes","h6","ul","li","append","currentPageURL","currentItems","computedStyle","columnCount","columns","column","columnIndex","existingWrapper","replaceChild","initLightbox","navigationManager","resizeTimeout","masonryImages","image","original","small","naturalHeight","resetPhotoSwipe","counter","handleImageClick","currentIndex","findIndex","contentElement","htmlContent","regexPattern","footnoteList","footnoteWrapper","p1","brick","animationDelay"],"mappings":"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","file":"main.min.js","sourcesContent":["function dropdown() {\n    const mediaQuery = window.matchMedia('(max-width: 767px)');\n\n    const menu = document.querySelector('.gh-head-menu');\n    const nav = menu?.querySelector('.nav');\n    if (!nav) return;\n\n    const logo = document.querySelector('.gh-head-logo');\n    const navHTML = nav.innerHTML;\n\n    if (mediaQuery.matches) {\n        const items = nav.querySelectorAll('li');\n        items.forEach(function (item, index) {\n            item.style.transitionDelay = `${0.03 * (index + 1)}s`;\n        });\n    }\n\n    const makeDropdown = function () {\n        if (mediaQuery.matches) return;\n        const submenuItems = [];\n\n        while ((nav.offsetWidth + 64) > menu.offsetWidth) {\n            if (nav.lastElementChild) {\n                submenuItems.unshift(nav.lastElementChild);\n                nav.lastElementChild.remove();\n            } else {\n                break;\n            }\n        }\n\n        if (!submenuItems.length) {\n            document.body.classList.add('is-dropdown-loaded');\n            return;\n        }\n\n        const toggle = document.createElement('button');\n        toggle.setAttribute('class', 'nav-more-toggle gh-icon-btn');\n        toggle.setAttribute('aria-label', 'More');\n        toggle.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\"><path d=\"M21.333 16c0-1.473 1.194-2.667 2.667-2.667v0c1.473 0 2.667 1.194 2.667 2.667v0c0 1.473-1.194 2.667-2.667 2.667v0c-1.473 0-2.667-1.194-2.667-2.667v0zM13.333 16c0-1.473 1.194-2.667 2.667-2.667v0c1.473 0 2.667 1.194 2.667 2.667v0c0 1.473-1.194 2.667-2.667 2.667v0c-1.473 0-2.667-1.194-2.667-2.667v0zM5.333 16c0-1.473 1.194-2.667 2.667-2.667v0c1.473 0 2.667 1.194 2.667 2.667v0c0 1.473-1.194 2.667-2.667 2.667v0c-1.473 0-2.667-1.194-2.667-2.667v0z\"></path></svg>';\n\n        const wrapper = document.createElement('div');\n        wrapper.setAttribute('class', 'gh-dropdown');\n\n        if (submenuItems.length >= 10) {\n            document.body.classList.add('is-dropdown-mega');\n            wrapper.style.gridTemplateRows = `repeat(${Math.ceil(submenuItems.length / 2)}, 1fr)`;\n        } else {\n            document.body.classList.remove('is-dropdown-mega');\n        }\n\n        submenuItems.forEach(function (child) {\n            wrapper.appendChild(child);\n        });\n\n        toggle.appendChild(wrapper);\n        nav.appendChild(toggle);\n\n        document.body.classList.add('is-dropdown-loaded');\n\n        window.addEventListener('click', function (e) {\n            if (document.body.classList.contains('is-dropdown-open')) {\n                document.body.classList.remove('is-dropdown-open');\n            } else if (toggle.contains(e.target)) {\n                document.body.classList.add('is-dropdown-open');\n            }\n        });\n    }\n\n    imagesLoaded(logo, function () {\n        makeDropdown();\n    });\n\n    window.addEventListener('load', function () {\n        if (!logo) {\n            makeDropdown();\n        }\n    });\n\n    window.addEventListener('resize', function () {\n        setTimeout(() => {\n            nav.innerHTML = navHTML;\n            makeDropdown();\n        }, 1);\n    });\n}\n","function lightbox(trigger) {\n    var onThumbnailsClick = function (e) {\n        e.preventDefault();\n\n        var items = [];\n        var index = 0;\n\n        var prevSibling = e.target.closest('.kg-card').previousElementSibling;\n\n        while (prevSibling && (prevSibling.classList.contains('kg-image-card') || prevSibling.classList.contains('kg-gallery-card'))) {\n            var prevItems = [];\n\n            prevSibling.querySelectorAll('img').forEach(function (item) {\n                prevItems.push({\n                    src: item.getAttribute('src'),\n                    msrc: item.getAttribute('src'),\n                    w: item.getAttribute('width'),\n                    h: item.getAttribute('height'),\n                    el: item,\n                })\n\n                index += 1;\n            });\n            prevSibling = prevSibling.previousElementSibling;\n\n            items = prevItems.concat(items);\n        }\n\n        if (e.target.classList.contains('kg-image')) {\n            items.push({\n                src: e.target.getAttribute('src'),\n                msrc: e.target.getAttribute('src'),\n                w: e.target.getAttribute('width'),\n                h: e.target.getAttribute('height'),\n                el: e.target,\n            });\n        } else {\n            var reachedCurrentItem = false;\n\n            e.target.closest('.kg-gallery-card').querySelectorAll('img').forEach(function (item) {\n                items.push({\n                    src: item.getAttribute('src'),\n                    msrc: item.getAttribute('src'),\n                    w: item.getAttribute('width'),\n                    h: item.getAttribute('height'),\n                    el: item,\n                });\n\n                if (!reachedCurrentItem && item !== e.target) {\n                    index += 1;\n                } else {\n                    reachedCurrentItem = true;\n                }\n            });\n        }\n\n        var nextSibling = e.target.closest('.kg-card').nextElementSibling;\n\n        while (nextSibling && (nextSibling.classList.contains('kg-image-card') || nextSibling.classList.contains('kg-gallery-card'))) {\n            nextSibling.querySelectorAll('img').forEach(function (item) {\n                items.push({\n                    src: item.getAttribute('src'),\n                    msrc: item.getAttribute('src'),\n                    w: item.getAttribute('width'),\n                    h: item.getAttribute('height'),\n                    el: item,\n                })\n            });\n            nextSibling = nextSibling.nextElementSibling;\n        }\n\n        var pswpElement = document.querySelectorAll('.pswp')[0];\n\n        var options = {\n            bgOpacity: 0.9,\n            closeOnScroll: true,\n            fullscreenEl: false,\n            history: false,\n            index: index,\n            shareEl: false,\n            zoomEl: false,\n            getThumbBoundsFn: function(index) {\n                var thumbnail = items[index].el,\n                    pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                    rect = thumbnail.getBoundingClientRect();\n\n                return {x:rect.left, y:rect.top + pageYScroll, w:rect.width};\n            }\n        }\n\n        var gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        return false;\n    };\n\n    var triggers = document.querySelectorAll(trigger);\n    triggers.forEach(function (trig) {\n        trig.addEventListener('click', function (e) {\n            onThumbnailsClick(e);\n        });\n    });\n}\n","function pagination(isInfinite, done, isMasonry = false) {\n    const feedElement = document.querySelector('.gh-feed');\n    if (!feedElement) {\n        // If no feed, remove pagination elements and return\n        document.querySelector('.load-more')?.remove();\n        document.querySelector('.gh-loadmore')?.remove();\n        return;\n    }\n\n    let loading = false;\n    const target = feedElement.nextElementSibling || feedElement.parentElement.nextElementSibling || document.querySelector('.gh-foot');\n    const loadMoreElement = document.querySelector('.load-more');\n    const buttonElement = document.querySelector('.gh-loadmore');\n\n    // Check for next page and hide load-more elements if no pagination is needed\n    // Also check if current page has fewer items than posts_per_page\n    if (!document.querySelector('link[rel=next]') || feedElement.children.length === 0) {\n        loadMoreElement?.remove();\n        buttonElement?.remove();\n        return;\n    }\n\n    const loadNextPage = async function () {\n        const nextElement = document.querySelector('link[rel=next]');\n        if (!nextElement) {\n            loadMoreElement?.remove();\n            buttonElement?.remove();\n            return;\n        }\n\n        try {\n            const res = await fetch(nextElement.href);\n            const html = await res.text();\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(html, 'text/html');\n\n            let postElements;\n            if (isMasonry) {\n                postElements = doc.querySelectorAll('.masonry-brick');\n            } else {\n                postElements = doc.querySelectorAll('.gh-feed:not(.gh-featured):not(.gh-related) > *');\n            }\n\n            const elems = [];\n\n            if (isMasonry) {\n                const masonryContainer = document.querySelector('.masonry-container');\n                \n                // Get all current items and find the highest data-id\n                const currentItems = Array.from(document.querySelectorAll('.masonry-brick'));\n                const highestId = currentItems.reduce((max, item) => {\n                    const currentId = parseInt(item.dataset.id) || 0;\n                    return currentId > max ? currentId : max;\n                }, 0);\n\n                postElements.forEach(function (post, index) {\n                    const clonedItem = document.importNode(post, true);\n                    // Start numbering from the highest existing ID + 1\n                    clonedItem.dataset.id = (highestId + index + 1).toString();\n                    masonryContainer.appendChild(clonedItem);\n                    elems.push(clonedItem);\n                });\n\n                // Update container's original order\n                if (!masonryContainer.dataset.originalOrder) {\n                    const allItems = Array.from(document.querySelectorAll('.masonry-brick'));\n                    masonryContainer.dataset.originalOrder = allItems.map(item => \n                        item.dataset.id\n                    ).join(',');\n                } else {\n                    // Append new IDs to existing order\n                    const newIds = elems.map(item => item.dataset.id);\n                    masonryContainer.dataset.originalOrder += ',' + newIds.join(',');\n                }\n\n                // Call initMasonryLayout immediately to start layout process\n                initMasonryLayout();\n\n                // Handle image loading separately\n                const images = elems.map(elem => elem.querySelector('img'));\n                let loadedImages = 0;\n                const totalImages = images.length;\n\n                const imageLoaded = () => {\n                    loadedImages++;\n                    if (loadedImages === totalImages) {\n                        // Re-run masonry layout after all images are loaded\n                        initMasonryLayout();\n                    }\n                };\n\n                images.forEach(img => {\n                    if (img && img.complete) {\n                        imageLoaded();\n                    } else if (img) {\n                        img.addEventListener('load', imageLoaded, { once: true });\n                        img.addEventListener('error', imageLoaded, { once: true });\n                    }\n                });\n            } else {\n                const fragment = document.createDocumentFragment();\n                postElements.forEach(function (post) {\n                    const clonedItem = document.importNode(post, true);\n                    fragment.appendChild(clonedItem);\n                    elems.push(clonedItem);\n                });\n                feedElement.appendChild(fragment);\n            }\n\n            if (done) {\n                done(elems, loadNextWithCheck);\n            }\n\n            const resNextElement = doc.querySelector('link[rel=next]');\n            if (resNextElement && resNextElement.href) {\n                nextElement.href = resNextElement.href;\n            } else {\n                nextElement.remove();\n                loadMoreElement?.remove();\n                buttonElement?.remove();\n            }\n        } catch (e) {\n            console.error('Pagination error:', e);\n            nextElement.remove();\n            loadMoreElement?.remove();\n            buttonElement?.remove();\n            throw e;\n        }\n    };\n\n    const loadNextWithCheck = async function () {\n        if (target.getBoundingClientRect().top <= window.innerHeight && document.querySelector('link[rel=next]')) {\n            await loadNextPage();\n        }\n    }\n\n    const callback = async function (entries) {\n        if (loading) return;\n\n        loading = true;\n\n        if (entries[0].isIntersecting) {\n            await loadNextPage();\n        }\n\n        loading = false;\n\n        if (!document.querySelector('link[rel=next]')) {\n            observer.disconnect();\n            loadMoreElement?.remove();\n        }\n    };\n\n    const observer = new IntersectionObserver(callback);\n\n    if (isInfinite) {\n        observer.observe(target);\n    } else {\n        buttonElement?.addEventListener('click', loadNextPage);\n    }\n}\n\n// Export the pagination function\nif (typeof window !== 'undefined') {\n    window.pagination = pagination;\n}","/*!\n * imagesLoaded PACKAGED v5.0.0\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n!function(t,e){\"object\"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}(\"undefined\"!=typeof window?window:this,(function(){function t(){}let e=t.prototype;return e.on=function(t,e){if(!t||!e)return this;let i=this._events=this._events||{},s=i[t]=i[t]||[];return s.includes(e)||s.push(e),this},e.once=function(t,e){if(!t||!e)return this;this.on(t,e);let i=this._onceEvents=this._onceEvents||{};return(i[t]=i[t]||{})[e]=!0,this},e.off=function(t,e){let i=this._events&&this._events[t];if(!i||!i.length)return this;let s=i.indexOf(e);return-1!=s&&i.splice(s,1),this},e.emitEvent=function(t,e){let i=this._events&&this._events[t];if(!i||!i.length)return this;i=i.slice(0),e=e||[];let s=this._onceEvents&&this._onceEvents[t];for(let n of i){s&&s[n]&&(this.off(t,n),delete s[n]),n.apply(this,e)}return this},e.allOff=function(){return delete this._events,delete this._onceEvents,this},t})),\n/*!\n * imagesLoaded v5.0.0\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\nfunction(t,e){\"object\"==typeof module&&module.exports?module.exports=e(t,require(\"ev-emitter\")):t.imagesLoaded=e(t,t.EvEmitter)}(\"undefined\"!=typeof window?window:this,(function(t,e){let i=t.jQuery,s=t.console;function n(t,e,o){if(!(this instanceof n))return new n(t,e,o);let r=t;var h;(\"string\"==typeof t&&(r=document.querySelectorAll(t)),r)?(this.elements=(h=r,Array.isArray(h)?h:\"object\"==typeof h&&\"number\"==typeof h.length?[...h]:[h]),this.options={},\"function\"==typeof e?o=e:Object.assign(this.options,e),o&&this.on(\"always\",o),this.getImages(),i&&(this.jqDeferred=new i.Deferred),setTimeout(this.check.bind(this))):s.error(`Bad element for imagesLoaded ${r||t}`)}n.prototype=Object.create(e.prototype),n.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this)};const o=[1,9,11];n.prototype.addElementImages=function(t){\"IMG\"===t.nodeName&&this.addImage(t),!0===this.options.background&&this.addElementBackgroundImages(t);let{nodeType:e}=t;if(!e||!o.includes(e))return;let i=t.querySelectorAll(\"img\");for(let t of i)this.addImage(t);if(\"string\"==typeof this.options.background){let e=t.querySelectorAll(this.options.background);for(let t of e)this.addElementBackgroundImages(t)}};const r=/url\\((['\"])?(.*?)\\1\\)/gi;function h(t){this.img=t}function d(t,e){this.url=t,this.element=e,this.img=new Image}return n.prototype.addElementBackgroundImages=function(t){let e=getComputedStyle(t);if(!e)return;let i=r.exec(e.backgroundImage);for(;null!==i;){let s=i&&i[2];s&&this.addBackground(s,t),i=r.exec(e.backgroundImage)}},n.prototype.addImage=function(t){let e=new h(t);this.images.push(e)},n.prototype.addBackground=function(t,e){let i=new d(t,e);this.images.push(i)},n.prototype.check=function(){if(this.progressedCount=0,this.hasAnyBroken=!1,!this.images.length)return void this.complete();let t=(t,e,i)=>{setTimeout((()=>{this.progress(t,e,i)}))};this.images.forEach((function(e){e.once(\"progress\",t),e.check()}))},n.prototype.progress=function(t,e,i){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!t.isLoaded,this.emitEvent(\"progress\",[this,t,e]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,t),this.progressedCount===this.images.length&&this.complete(),this.options.debug&&s&&s.log(`progress: ${i}`,t,e)},n.prototype.complete=function(){let t=this.hasAnyBroken?\"fail\":\"done\";if(this.isComplete=!0,this.emitEvent(t,[this]),this.emitEvent(\"always\",[this]),this.jqDeferred){let t=this.hasAnyBroken?\"reject\":\"resolve\";this.jqDeferred[t](this)}},h.prototype=Object.create(e.prototype),h.prototype.check=function(){this.getIsImageComplete()?this.confirm(0!==this.img.naturalWidth,\"naturalWidth\"):(this.proxyImage=new Image,this.img.crossOrigin&&(this.proxyImage.crossOrigin=this.img.crossOrigin),this.proxyImage.addEventListener(\"load\",this),this.proxyImage.addEventListener(\"error\",this),this.img.addEventListener(\"load\",this),this.img.addEventListener(\"error\",this),this.proxyImage.src=this.img.currentSrc||this.img.src)},h.prototype.getIsImageComplete=function(){return this.img.complete&&this.img.naturalWidth},h.prototype.confirm=function(t,e){this.isLoaded=t;let{parentNode:i}=this.img,s=\"PICTURE\"===i.nodeName?i:this.img;this.emitEvent(\"progress\",[this,s,e])},h.prototype.handleEvent=function(t){let e=\"on\"+t.type;this[e]&&this[e](t)},h.prototype.onload=function(){this.confirm(!0,\"onload\"),this.unbindEvents()},h.prototype.onerror=function(){this.confirm(!1,\"onerror\"),this.unbindEvents()},h.prototype.unbindEvents=function(){this.proxyImage.removeEventListener(\"load\",this),this.proxyImage.removeEventListener(\"error\",this),this.img.removeEventListener(\"load\",this),this.img.removeEventListener(\"error\",this)},d.prototype=Object.create(h.prototype),d.prototype.check=function(){this.img.addEventListener(\"load\",this),this.img.addEventListener(\"error\",this),this.img.src=this.url,this.getIsImageComplete()&&(this.confirm(0!==this.img.naturalWidth,\"naturalWidth\"),this.unbindEvents())},d.prototype.unbindEvents=function(){this.img.removeEventListener(\"load\",this),this.img.removeEventListener(\"error\",this)},d.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent(\"progress\",[this,this.element,e])},n.makeJQueryPlugin=function(e){(e=e||t.jQuery)&&(i=e,i.fn.imagesLoaded=function(t,e){return new n(this,t,e).jqDeferred.promise(i(this))})},n.makeJQueryPlugin(),n}));","/*! PhotoSwipe Default UI - 4.1.3 - 2019-01-08\n* http://photoswipe.com\n* Copyright (c) 2019 Dmitry Semenov; */\n!function(a,b){\"function\"==typeof define&&define.amd?define(b):\"object\"==typeof exports?module.exports=b():a.PhotoSwipeUI_Default=b()}(this,function(){\"use strict\";var a=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=this,w=!1,x=!0,y=!0,z={barsSize:{top:44,bottom:\"auto\"},closeElClasses:[\"item\",\"caption\",\"zoom-wrap\",\"ui\",\"top-bar\"],timeToIdle:4e3,timeToIdleOutside:1e3,loadingIndicatorDelay:1e3,addCaptionHTMLFn:function(a,b){return a.title?(b.children[0].innerHTML=a.title,!0):(b.children[0].innerHTML=\"\",!1)},closeEl:!0,captionEl:!0,fullscreenEl:!0,zoomEl:!0,shareEl:!0,counterEl:!0,arrowEl:!0,preloaderEl:!0,tapToClose:!1,tapToToggleControls:!0,clickToCloseNonZoomable:!0,shareButtons:[{id:\"facebook\",label:\"Share on Facebook\",url:\"https://www.facebook.com/sharer/sharer.php?u={{url}}\"},{id:\"twitter\",label:\"Tweet\",url:\"https://twitter.com/intent/tweet?text={{text}}&url={{url}}\"},{id:\"pinterest\",label:\"Pin it\",url:\"http://www.pinterest.com/pin/create/button/?url={{url}}&media={{image_url}}&description={{text}}\"},{id:\"download\",label:\"Download image\",url:\"{{raw_image_url}}\",download:!0}],getImageURLForShare:function(){return a.currItem.src||\"\"},getPageURLForShare:function(){return window.location.href},getTextForShare:function(){return a.currItem.title||\"\"},indexIndicatorSep:\" / \",fitControlsWidth:1200},A=function(a){if(r)return!0;a=a||window.event,q.timeToIdle&&q.mouseUsed&&!k&&K();for(var c,d,e=a.target||a.srcElement,f=e.getAttribute(\"class\")||\"\",g=0;g<S.length;g++)c=S[g],c.onTap&&f.indexOf(\"pswp__\"+c.name)>-1&&(c.onTap(),d=!0);if(d){a.stopPropagation&&a.stopPropagation(),r=!0;var h=b.features.isOldAndroid?600:30;s=setTimeout(function(){r=!1},h)}},B=function(){return!a.likelyTouchDevice||q.mouseUsed||screen.width>q.fitControlsWidth},C=function(a,c,d){b[(d?\"add\":\"remove\")+\"Class\"](a,\"pswp__\"+c)},D=function(){var a=1===q.getNumItemsFn();a!==p&&(C(d,\"ui--one-slide\",a),p=a)},E=function(){C(i,\"share-modal--hidden\",y)},F=function(){return y=!y,y?(b.removeClass(i,\"pswp__share-modal--fade-in\"),setTimeout(function(){y&&E()},300)):(E(),setTimeout(function(){y||b.addClass(i,\"pswp__share-modal--fade-in\")},30)),y||H(),!1},G=function(b){b=b||window.event;var c=b.target||b.srcElement;return a.shout(\"shareLinkClick\",b,c),!!c.href&&(!!c.hasAttribute(\"download\")||(window.open(c.href,\"pswp_share\",\"scrollbars=yes,resizable=yes,toolbar=no,location=yes,width=550,height=420,top=100,left=\"+(window.screen?Math.round(screen.width/2-275):100)),y||F(),!1))},H=function(){for(var a,b,c,d,e,f=\"\",g=0;g<q.shareButtons.length;g++)a=q.shareButtons[g],c=q.getImageURLForShare(a),d=q.getPageURLForShare(a),e=q.getTextForShare(a),b=a.url.replace(\"{{url}}\",encodeURIComponent(d)).replace(\"{{image_url}}\",encodeURIComponent(c)).replace(\"{{raw_image_url}}\",c).replace(\"{{text}}\",encodeURIComponent(e)),f+='<a href=\"'+b+'\" target=\"_blank\" class=\"pswp__share--'+a.id+'\"'+(a.download?\"download\":\"\")+\">\"+a.label+\"</a>\",q.parseShareButtonOut&&(f=q.parseShareButtonOut(a,f));i.children[0].innerHTML=f,i.children[0].onclick=G},I=function(a){for(var c=0;c<q.closeElClasses.length;c++)if(b.hasClass(a,\"pswp__\"+q.closeElClasses[c]))return!0},J=0,K=function(){clearTimeout(u),J=0,k&&v.setIdle(!1)},L=function(a){a=a?a:window.event;var b=a.relatedTarget||a.toElement;b&&\"HTML\"!==b.nodeName||(clearTimeout(u),u=setTimeout(function(){v.setIdle(!0)},q.timeToIdleOutside))},M=function(){q.fullscreenEl&&!b.features.isOldAndroid&&(c||(c=v.getFullscreenAPI()),c?(b.bind(document,c.eventK,v.updateFullscreen),v.updateFullscreen(),b.addClass(a.template,\"pswp--supports-fs\")):b.removeClass(a.template,\"pswp--supports-fs\"))},N=function(){q.preloaderEl&&(O(!0),l(\"beforeChange\",function(){clearTimeout(o),o=setTimeout(function(){a.currItem&&a.currItem.loading?(!a.allowProgressiveImg()||a.currItem.img&&!a.currItem.img.naturalWidth)&&O(!1):O(!0)},q.loadingIndicatorDelay)}),l(\"imageLoadComplete\",function(b,c){a.currItem===c&&O(!0)}))},O=function(a){n!==a&&(C(m,\"preloader--active\",!a),n=a)},P=function(a){var c=a.vGap;if(B()){var g=q.barsSize;if(q.captionEl&&\"auto\"===g.bottom)if(f||(f=b.createEl(\"pswp__caption pswp__caption--fake\"),f.appendChild(b.createEl(\"pswp__caption__center\")),d.insertBefore(f,e),b.addClass(d,\"pswp__ui--fit\")),q.addCaptionHTMLFn(a,f,!0)){var h=f.clientHeight;c.bottom=parseInt(h,10)||44}else c.bottom=g.top;else c.bottom=\"auto\"===g.bottom?0:g.bottom;c.top=g.top}else c.top=c.bottom=0},Q=function(){q.timeToIdle&&l(\"mouseUsed\",function(){b.bind(document,\"mousemove\",K),b.bind(document,\"mouseout\",L),t=setInterval(function(){J++,2===J&&v.setIdle(!0)},q.timeToIdle/2)})},R=function(){l(\"onVerticalDrag\",function(a){x&&a<.95?v.hideControls():!x&&a>=.95&&v.showControls()});var a;l(\"onPinchClose\",function(b){x&&b<.9?(v.hideControls(),a=!0):a&&!x&&b>.9&&v.showControls()}),l(\"zoomGestureEnded\",function(){a=!1,a&&!x&&v.showControls()})},S=[{name:\"caption\",option:\"captionEl\",onInit:function(a){e=a}},{name:\"share-modal\",option:\"shareEl\",onInit:function(a){i=a},onTap:function(){F()}},{name:\"button--share\",option:\"shareEl\",onInit:function(a){h=a},onTap:function(){F()}},{name:\"button--zoom\",option:\"zoomEl\",onTap:a.toggleDesktopZoom},{name:\"counter\",option:\"counterEl\",onInit:function(a){g=a}},{name:\"button--close\",option:\"closeEl\",onTap:a.close},{name:\"button--arrow--left\",option:\"arrowEl\",onTap:a.prev},{name:\"button--arrow--right\",option:\"arrowEl\",onTap:a.next},{name:\"button--fs\",option:\"fullscreenEl\",onTap:function(){c.isFullscreen()?c.exit():c.enter()}},{name:\"preloader\",option:\"preloaderEl\",onInit:function(a){m=a}}],T=function(){var a,c,e,f=function(d){if(d)for(var f=d.length,g=0;g<f;g++){a=d[g],c=a.className;for(var h=0;h<S.length;h++)e=S[h],c.indexOf(\"pswp__\"+e.name)>-1&&(q[e.option]?(b.removeClass(a,\"pswp__element--disabled\"),e.onInit&&e.onInit(a)):b.addClass(a,\"pswp__element--disabled\"))}};f(d.children);var g=b.getChildByClass(d,\"pswp__top-bar\");g&&f(g.children)};v.init=function(){b.extend(a.options,z,!0),q=a.options,d=b.getChildByClass(a.scrollWrap,\"pswp__ui\"),l=a.listen,R(),l(\"beforeChange\",v.update),l(\"doubleTap\",function(b){var c=a.currItem.initialZoomLevel;a.getZoomLevel()!==c?a.zoomTo(c,b,333):a.zoomTo(q.getDoubleTapZoom(!1,a.currItem),b,333)}),l(\"preventDragEvent\",function(a,b,c){var d=a.target||a.srcElement;d&&d.getAttribute(\"class\")&&a.type.indexOf(\"mouse\")>-1&&(d.getAttribute(\"class\").indexOf(\"__caption\")>0||/(SMALL|STRONG|EM)/i.test(d.tagName))&&(c.prevent=!1)}),l(\"bindEvents\",function(){b.bind(d,\"pswpTap click\",A),b.bind(a.scrollWrap,\"pswpTap\",v.onGlobalTap),a.likelyTouchDevice||b.bind(a.scrollWrap,\"mouseover\",v.onMouseOver)}),l(\"unbindEvents\",function(){y||F(),t&&clearInterval(t),b.unbind(document,\"mouseout\",L),b.unbind(document,\"mousemove\",K),b.unbind(d,\"pswpTap click\",A),b.unbind(a.scrollWrap,\"pswpTap\",v.onGlobalTap),b.unbind(a.scrollWrap,\"mouseover\",v.onMouseOver),c&&(b.unbind(document,c.eventK,v.updateFullscreen),c.isFullscreen()&&(q.hideAnimationDuration=0,c.exit()),c=null)}),l(\"destroy\",function(){q.captionEl&&(f&&d.removeChild(f),b.removeClass(e,\"pswp__caption--empty\")),i&&(i.children[0].onclick=null),b.removeClass(d,\"pswp__ui--over-close\"),b.addClass(d,\"pswp__ui--hidden\"),v.setIdle(!1)}),q.showAnimationDuration||b.removeClass(d,\"pswp__ui--hidden\"),l(\"initialZoomIn\",function(){q.showAnimationDuration&&b.removeClass(d,\"pswp__ui--hidden\")}),l(\"initialZoomOut\",function(){b.addClass(d,\"pswp__ui--hidden\")}),l(\"parseVerticalMargin\",P),T(),q.shareEl&&h&&i&&(y=!0),D(),Q(),M(),N()},v.setIdle=function(a){k=a,C(d,\"ui--idle\",a)},v.update=function(){x&&a.currItem?(v.updateIndexIndicator(),q.captionEl&&(q.addCaptionHTMLFn(a.currItem,e),C(e,\"caption--empty\",!a.currItem.title)),w=!0):w=!1,y||F(),D()},v.updateFullscreen=function(d){d&&setTimeout(function(){a.setScrollOffset(0,b.getScrollY())},50),b[(c.isFullscreen()?\"add\":\"remove\")+\"Class\"](a.template,\"pswp--fs\")},v.updateIndexIndicator=function(){q.counterEl&&(g.innerHTML=a.getCurrentIndex()+1+q.indexIndicatorSep+q.getNumItemsFn())},v.onGlobalTap=function(c){c=c||window.event;var d=c.target||c.srcElement;if(!r)if(c.detail&&\"mouse\"===c.detail.pointerType){if(I(d))return void a.close();b.hasClass(d,\"pswp__img\")&&(1===a.getZoomLevel()&&a.getZoomLevel()<=a.currItem.fitRatio?q.clickToCloseNonZoomable&&a.close():a.toggleDesktopZoom(c.detail.releasePoint))}else if(q.tapToToggleControls&&(x?v.hideControls():v.showControls()),q.tapToClose&&(b.hasClass(d,\"pswp__img\")||I(d)))return void a.close()},v.onMouseOver=function(a){a=a||window.event;var b=a.target||a.srcElement;C(d,\"ui--over-close\",I(b))},v.hideControls=function(){b.addClass(d,\"pswp__ui--hidden\"),x=!1},v.showControls=function(){x=!0,w||v.update(),b.removeClass(d,\"pswp__ui--hidden\")},v.supportsFullscreen=function(){var a=document;return!!(a.exitFullscreen||a.mozCancelFullScreen||a.webkitExitFullscreen||a.msExitFullscreen)},v.getFullscreenAPI=function(){var b,c=document.documentElement,d=\"fullscreenchange\";return c.requestFullscreen?b={enterK:\"requestFullscreen\",exitK:\"exitFullscreen\",elementK:\"fullscreenElement\",eventK:d}:c.mozRequestFullScreen?b={enterK:\"mozRequestFullScreen\",exitK:\"mozCancelFullScreen\",elementK:\"mozFullScreenElement\",eventK:\"moz\"+d}:c.webkitRequestFullscreen?b={enterK:\"webkitRequestFullscreen\",exitK:\"webkitExitFullscreen\",elementK:\"webkitFullscreenElement\",eventK:\"webkit\"+d}:c.msRequestFullscreen&&(b={enterK:\"msRequestFullscreen\",exitK:\"msExitFullscreen\",elementK:\"msFullscreenElement\",eventK:\"MSFullscreenChange\"}),b&&(b.enter=function(){return j=q.closeOnScroll,q.closeOnScroll=!1,\"webkitRequestFullscreen\"!==this.enterK?a.template[this.enterK]():void a.template[this.enterK](Element.ALLOW_KEYBOARD_INPUT)},b.exit=function(){return q.closeOnScroll=j,document[this.exitK]()},b.isFullscreen=function(){return document[this.elementK]}),b}};return a});","/*! PhotoSwipe - v4.1.3 - 2019-01-08\n* http://photoswipe.com\n* Copyright (c) 2019 Dmitry Semenov; */\n!function(a,b){\"function\"==typeof define&&define.amd?define(b):\"object\"==typeof exports?module.exports=b():a.PhotoSwipe=b()}(this,function(){\"use strict\";var a=function(a,b,c,d){var e={features:null,bind:function(a,b,c,d){var e=(d?\"remove\":\"add\")+\"EventListener\";b=b.split(\" \");for(var f=0;f<b.length;f++)b[f]&&a[e](b[f],c,!1)},isArray:function(a){return a instanceof Array},createEl:function(a,b){var c=document.createElement(b||\"div\");return a&&(c.className=a),c},getScrollY:function(){var a=window.pageYOffset;return void 0!==a?a:document.documentElement.scrollTop},unbind:function(a,b,c){e.bind(a,b,c,!0)},removeClass:function(a,b){var c=new RegExp(\"(\\\\s|^)\"+b+\"(\\\\s|$)\");a.className=a.className.replace(c,\" \").replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\")},addClass:function(a,b){e.hasClass(a,b)||(a.className+=(a.className?\" \":\"\")+b)},hasClass:function(a,b){return a.className&&new RegExp(\"(^|\\\\s)\"+b+\"(\\\\s|$)\").test(a.className)},getChildByClass:function(a,b){for(var c=a.firstChild;c;){if(e.hasClass(c,b))return c;c=c.nextSibling}},arraySearch:function(a,b,c){for(var d=a.length;d--;)if(a[d][c]===b)return d;return-1},extend:function(a,b,c){for(var d in b)if(b.hasOwnProperty(d)){if(c&&a.hasOwnProperty(d))continue;a[d]=b[d]}},easing:{sine:{out:function(a){return Math.sin(a*(Math.PI/2))},inOut:function(a){return-(Math.cos(Math.PI*a)-1)/2}},cubic:{out:function(a){return--a*a*a+1}}},detectFeatures:function(){if(e.features)return e.features;var a=e.createEl(),b=a.style,c=\"\",d={};if(d.oldIE=document.all&&!document.addEventListener,d.touch=\"ontouchstart\"in window,window.requestAnimationFrame&&(d.raf=window.requestAnimationFrame,d.caf=window.cancelAnimationFrame),d.pointerEvent=!!window.PointerEvent||navigator.msPointerEnabled,!d.pointerEvent){var f=navigator.userAgent;if(/iP(hone|od)/.test(navigator.platform)){var g=navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);g&&g.length>0&&(g=parseInt(g[1],10),g>=1&&g<8&&(d.isOldIOSPhone=!0))}var h=f.match(/Android\\s([0-9\\.]*)/),i=h?h[1]:0;i=parseFloat(i),i>=1&&(i<4.4&&(d.isOldAndroid=!0),d.androidVersion=i),d.isMobileOpera=/opera mini|opera mobi/i.test(f)}for(var j,k,l=[\"transform\",\"perspective\",\"animationName\"],m=[\"\",\"webkit\",\"Moz\",\"ms\",\"O\"],n=0;n<4;n++){c=m[n];for(var o=0;o<3;o++)j=l[o],k=c+(c?j.charAt(0).toUpperCase()+j.slice(1):j),!d[j]&&k in b&&(d[j]=k);c&&!d.raf&&(c=c.toLowerCase(),d.raf=window[c+\"RequestAnimationFrame\"],d.raf&&(d.caf=window[c+\"CancelAnimationFrame\"]||window[c+\"CancelRequestAnimationFrame\"]))}if(!d.raf){var p=0;d.raf=function(a){var b=(new Date).getTime(),c=Math.max(0,16-(b-p)),d=window.setTimeout(function(){a(b+c)},c);return p=b+c,d},d.caf=function(a){clearTimeout(a)}}return d.svg=!!document.createElementNS&&!!document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\").createSVGRect,e.features=d,d}};e.detectFeatures(),e.features.oldIE&&(e.bind=function(a,b,c,d){b=b.split(\" \");for(var e,f=(d?\"detach\":\"attach\")+\"Event\",g=function(){c.handleEvent.call(c)},h=0;h<b.length;h++)if(e=b[h])if(\"object\"==typeof c&&c.handleEvent){if(d){if(!c[\"oldIE\"+e])return!1}else c[\"oldIE\"+e]=g;a[f](\"on\"+e,c[\"oldIE\"+e])}else a[f](\"on\"+e,c)});var f=this,g=25,h=3,i={allowPanToNext:!0,spacing:.12,bgOpacity:1,mouseUsed:!1,loop:!0,pinchToClose:!0,closeOnScroll:!0,closeOnVerticalDrag:!0,verticalDragRange:.75,hideAnimationDuration:333,showAnimationDuration:333,showHideOpacity:!1,focus:!0,escKey:!0,arrowKeys:!0,mainScrollEndFriction:.35,panEndFriction:.35,isClickableElement:function(a){return\"A\"===a.tagName},getDoubleTapZoom:function(a,b){return a?1:b.initialZoomLevel<.7?1:1.33},maxSpreadZoom:1.33,modal:!0,scaleMode:\"fit\"};e.extend(i,d);var j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma=function(){return{x:0,y:0}},na=ma(),oa=ma(),pa=ma(),qa={},ra=0,sa={},ta=ma(),ua=0,va=!0,wa=[],xa={},ya=!1,za=function(a,b){e.extend(f,b.publicMethods),wa.push(a)},Aa=function(a){var b=ac();return a>b-1?a-b:a<0?b+a:a},Ba={},Ca=function(a,b){return Ba[a]||(Ba[a]=[]),Ba[a].push(b)},Da=function(a){var b=Ba[a];if(b){var c=Array.prototype.slice.call(arguments);c.shift();for(var d=0;d<b.length;d++)b[d].apply(f,c)}},Ea=function(){return(new Date).getTime()},Fa=function(a){ja=a,f.bg.style.opacity=a*i.bgOpacity},Ga=function(a,b,c,d,e){(!ya||e&&e!==f.currItem)&&(d/=e?e.fitRatio:f.currItem.fitRatio),a[E]=u+b+\"px, \"+c+\"px\"+v+\" scale(\"+d+\")\"},Ha=function(a){ea&&(a&&(s>f.currItem.fitRatio?ya||(mc(f.currItem,!1,!0),ya=!0):ya&&(mc(f.currItem),ya=!1)),Ga(ea,pa.x,pa.y,s))},Ia=function(a){a.container&&Ga(a.container.style,a.initialPosition.x,a.initialPosition.y,a.initialZoomLevel,a)},Ja=function(a,b){b[E]=u+a+\"px, 0px\"+v},Ka=function(a,b){if(!i.loop&&b){var c=m+(ta.x*ra-a)/ta.x,d=Math.round(a-tb.x);(c<0&&d>0||c>=ac()-1&&d<0)&&(a=tb.x+d*i.mainScrollEndFriction)}tb.x=a,Ja(a,n)},La=function(a,b){var c=ub[a]-sa[a];return oa[a]+na[a]+c-c*(b/t)},Ma=function(a,b){a.x=b.x,a.y=b.y,b.id&&(a.id=b.id)},Na=function(a){a.x=Math.round(a.x),a.y=Math.round(a.y)},Oa=null,Pa=function(){Oa&&(e.unbind(document,\"mousemove\",Pa),e.addClass(a,\"pswp--has_mouse\"),i.mouseUsed=!0,Da(\"mouseUsed\")),Oa=setTimeout(function(){Oa=null},100)},Qa=function(){e.bind(document,\"keydown\",f),N.transform&&e.bind(f.scrollWrap,\"click\",f),i.mouseUsed||e.bind(document,\"mousemove\",Pa),e.bind(window,\"resize scroll orientationchange\",f),Da(\"bindEvents\")},Ra=function(){e.unbind(window,\"resize scroll orientationchange\",f),e.unbind(window,\"scroll\",r.scroll),e.unbind(document,\"keydown\",f),e.unbind(document,\"mousemove\",Pa),N.transform&&e.unbind(f.scrollWrap,\"click\",f),V&&e.unbind(window,p,f),clearTimeout(O),Da(\"unbindEvents\")},Sa=function(a,b){var c=ic(f.currItem,qa,a);return b&&(da=c),c},Ta=function(a){return a||(a=f.currItem),a.initialZoomLevel},Ua=function(a){return a||(a=f.currItem),a.w>0?i.maxSpreadZoom:1},Va=function(a,b,c,d){return d===f.currItem.initialZoomLevel?(c[a]=f.currItem.initialPosition[a],!0):(c[a]=La(a,d),c[a]>b.min[a]?(c[a]=b.min[a],!0):c[a]<b.max[a]&&(c[a]=b.max[a],!0))},Wa=function(){if(E){var b=N.perspective&&!G;return u=\"translate\"+(b?\"3d(\":\"(\"),void(v=N.perspective?\", 0px)\":\")\")}E=\"left\",e.addClass(a,\"pswp--ie\"),Ja=function(a,b){b.left=a+\"px\"},Ia=function(a){var b=a.fitRatio>1?1:a.fitRatio,c=a.container.style,d=b*a.w,e=b*a.h;c.width=d+\"px\",c.height=e+\"px\",c.left=a.initialPosition.x+\"px\",c.top=a.initialPosition.y+\"px\"},Ha=function(){if(ea){var a=ea,b=f.currItem,c=b.fitRatio>1?1:b.fitRatio,d=c*b.w,e=c*b.h;a.width=d+\"px\",a.height=e+\"px\",a.left=pa.x+\"px\",a.top=pa.y+\"px\"}}},Xa=function(a){var b=\"\";i.escKey&&27===a.keyCode?b=\"close\":i.arrowKeys&&(37===a.keyCode?b=\"prev\":39===a.keyCode&&(b=\"next\")),b&&(a.ctrlKey||a.altKey||a.shiftKey||a.metaKey||(a.preventDefault?a.preventDefault():a.returnValue=!1,f[b]()))},Ya=function(a){a&&(Y||X||fa||T)&&(a.preventDefault(),a.stopPropagation())},Za=function(){f.setScrollOffset(0,e.getScrollY())},$a={},_a=0,ab=function(a){$a[a]&&($a[a].raf&&I($a[a].raf),_a--,delete $a[a])},bb=function(a){$a[a]&&ab(a),$a[a]||(_a++,$a[a]={})},cb=function(){for(var a in $a)$a.hasOwnProperty(a)&&ab(a)},db=function(a,b,c,d,e,f,g){var h,i=Ea();bb(a);var j=function(){if($a[a]){if(h=Ea()-i,h>=d)return ab(a),f(c),void(g&&g());f((c-b)*e(h/d)+b),$a[a].raf=H(j)}};j()},eb={shout:Da,listen:Ca,viewportSize:qa,options:i,isMainScrollAnimating:function(){return fa},getZoomLevel:function(){return s},getCurrentIndex:function(){return m},isDragging:function(){return V},isZooming:function(){return aa},setScrollOffset:function(a,b){sa.x=a,M=sa.y=b,Da(\"updateScrollOffset\",sa)},applyZoomPan:function(a,b,c,d){pa.x=b,pa.y=c,s=a,Ha(d)},init:function(){if(!j&&!k){var c;f.framework=e,f.template=a,f.bg=e.getChildByClass(a,\"pswp__bg\"),J=a.className,j=!0,N=e.detectFeatures(),H=N.raf,I=N.caf,E=N.transform,L=N.oldIE,f.scrollWrap=e.getChildByClass(a,\"pswp__scroll-wrap\"),f.container=e.getChildByClass(f.scrollWrap,\"pswp__container\"),n=f.container.style,f.itemHolders=y=[{el:f.container.children[0],wrap:0,index:-1},{el:f.container.children[1],wrap:0,index:-1},{el:f.container.children[2],wrap:0,index:-1}],y[0].el.style.display=y[2].el.style.display=\"none\",Wa(),r={resize:f.updateSize,orientationchange:function(){clearTimeout(O),O=setTimeout(function(){qa.x!==f.scrollWrap.clientWidth&&f.updateSize()},500)},scroll:Za,keydown:Xa,click:Ya};var d=N.isOldIOSPhone||N.isOldAndroid||N.isMobileOpera;for(N.animationName&&N.transform&&!d||(i.showAnimationDuration=i.hideAnimationDuration=0),c=0;c<wa.length;c++)f[\"init\"+wa[c]]();if(b){var g=f.ui=new b(f,e);g.init()}Da(\"firstUpdate\"),m=m||i.index||0,(isNaN(m)||m<0||m>=ac())&&(m=0),f.currItem=_b(m),(N.isOldIOSPhone||N.isOldAndroid)&&(va=!1),a.setAttribute(\"aria-hidden\",\"false\"),i.modal&&(va?a.style.position=\"fixed\":(a.style.position=\"absolute\",a.style.top=e.getScrollY()+\"px\")),void 0===M&&(Da(\"initialLayout\"),M=K=e.getScrollY());var l=\"pswp--open \";for(i.mainClass&&(l+=i.mainClass+\" \"),i.showHideOpacity&&(l+=\"pswp--animate_opacity \"),l+=G?\"pswp--touch\":\"pswp--notouch\",l+=N.animationName?\" pswp--css_animation\":\"\",l+=N.svg?\" pswp--svg\":\"\",e.addClass(a,l),f.updateSize(),o=-1,ua=null,c=0;c<h;c++)Ja((c+o)*ta.x,y[c].el.style);L||e.bind(f.scrollWrap,q,f),Ca(\"initialZoomInEnd\",function(){f.setContent(y[0],m-1),f.setContent(y[2],m+1),y[0].el.style.display=y[2].el.style.display=\"block\",i.focus&&a.focus(),Qa()}),f.setContent(y[1],m),f.updateCurrItem(),Da(\"afterInit\"),va||(w=setInterval(function(){_a||V||aa||s!==f.currItem.initialZoomLevel||f.updateSize()},1e3)),e.addClass(a,\"pswp--visible\")}},close:function(){j&&(j=!1,k=!0,Da(\"close\"),Ra(),cc(f.currItem,null,!0,f.destroy))},destroy:function(){Da(\"destroy\"),Xb&&clearTimeout(Xb),a.setAttribute(\"aria-hidden\",\"true\"),a.className=J,w&&clearInterval(w),e.unbind(f.scrollWrap,q,f),e.unbind(window,\"scroll\",f),zb(),cb(),Ba=null},panTo:function(a,b,c){c||(a>da.min.x?a=da.min.x:a<da.max.x&&(a=da.max.x),b>da.min.y?b=da.min.y:b<da.max.y&&(b=da.max.y)),pa.x=a,pa.y=b,Ha()},handleEvent:function(a){a=a||window.event,r[a.type]&&r[a.type](a)},goTo:function(a){a=Aa(a);var b=a-m;ua=b,m=a,f.currItem=_b(m),ra-=b,Ka(ta.x*ra),cb(),fa=!1,f.updateCurrItem()},next:function(){f.goTo(m+1)},prev:function(){f.goTo(m-1)},updateCurrZoomItem:function(a){if(a&&Da(\"beforeChange\",0),y[1].el.children.length){var b=y[1].el.children[0];ea=e.hasClass(b,\"pswp__zoom-wrap\")?b.style:null}else ea=null;da=f.currItem.bounds,t=s=f.currItem.initialZoomLevel,pa.x=da.center.x,pa.y=da.center.y,a&&Da(\"afterChange\")},invalidateCurrItems:function(){x=!0;for(var a=0;a<h;a++)y[a].item&&(y[a].item.needsUpdate=!0)},updateCurrItem:function(a){if(0!==ua){var b,c=Math.abs(ua);if(!(a&&c<2)){f.currItem=_b(m),ya=!1,Da(\"beforeChange\",ua),c>=h&&(o+=ua+(ua>0?-h:h),c=h);for(var d=0;d<c;d++)ua>0?(b=y.shift(),y[h-1]=b,o++,Ja((o+2)*ta.x,b.el.style),f.setContent(b,m-c+d+1+1)):(b=y.pop(),y.unshift(b),o--,Ja(o*ta.x,b.el.style),f.setContent(b,m+c-d-1-1));if(ea&&1===Math.abs(ua)){var e=_b(z);e.initialZoomLevel!==s&&(ic(e,qa),mc(e),Ia(e))}ua=0,f.updateCurrZoomItem(),z=m,Da(\"afterChange\")}}},updateSize:function(b){if(!va&&i.modal){var c=e.getScrollY();if(M!==c&&(a.style.top=c+\"px\",M=c),!b&&xa.x===window.innerWidth&&xa.y===window.innerHeight)return;xa.x=window.innerWidth,xa.y=window.innerHeight,a.style.height=xa.y+\"px\"}if(qa.x=f.scrollWrap.clientWidth,qa.y=f.scrollWrap.clientHeight,Za(),ta.x=qa.x+Math.round(qa.x*i.spacing),ta.y=qa.y,Ka(ta.x*ra),Da(\"beforeResize\"),void 0!==o){for(var d,g,j,k=0;k<h;k++)d=y[k],Ja((k+o)*ta.x,d.el.style),j=m+k-1,i.loop&&ac()>2&&(j=Aa(j)),g=_b(j),g&&(x||g.needsUpdate||!g.bounds)?(f.cleanSlide(g),f.setContent(d,j),1===k&&(f.currItem=g,f.updateCurrZoomItem(!0)),g.needsUpdate=!1):d.index===-1&&j>=0&&f.setContent(d,j),g&&g.container&&(ic(g,qa),mc(g),Ia(g));x=!1}t=s=f.currItem.initialZoomLevel,da=f.currItem.bounds,da&&(pa.x=da.center.x,pa.y=da.center.y,Ha(!0)),Da(\"resize\")},zoomTo:function(a,b,c,d,f){b&&(t=s,ub.x=Math.abs(b.x)-pa.x,ub.y=Math.abs(b.y)-pa.y,Ma(oa,pa));var g=Sa(a,!1),h={};Va(\"x\",g,h,a),Va(\"y\",g,h,a);var i=s,j={x:pa.x,y:pa.y};Na(h);var k=function(b){1===b?(s=a,pa.x=h.x,pa.y=h.y):(s=(a-i)*b+i,pa.x=(h.x-j.x)*b+j.x,pa.y=(h.y-j.y)*b+j.y),f&&f(b),Ha(1===b)};c?db(\"customZoomTo\",0,1,c,d||e.easing.sine.inOut,k):k(1)}},fb=30,gb=10,hb={},ib={},jb={},kb={},lb={},mb=[],nb={},ob=[],pb={},qb=0,rb=ma(),sb=0,tb=ma(),ub=ma(),vb=ma(),wb=function(a,b){return a.x===b.x&&a.y===b.y},xb=function(a,b){return Math.abs(a.x-b.x)<g&&Math.abs(a.y-b.y)<g},yb=function(a,b){return pb.x=Math.abs(a.x-b.x),pb.y=Math.abs(a.y-b.y),Math.sqrt(pb.x*pb.x+pb.y*pb.y)},zb=function(){Z&&(I(Z),Z=null)},Ab=function(){V&&(Z=H(Ab),Qb())},Bb=function(){return!(\"fit\"===i.scaleMode&&s===f.currItem.initialZoomLevel)},Cb=function(a,b){return!(!a||a===document)&&(!(a.getAttribute(\"class\")&&a.getAttribute(\"class\").indexOf(\"pswp__scroll-wrap\")>-1)&&(b(a)?a:Cb(a.parentNode,b)))},Db={},Eb=function(a,b){return Db.prevent=!Cb(a.target,i.isClickableElement),Da(\"preventDragEvent\",a,b,Db),Db.prevent},Fb=function(a,b){return b.x=a.pageX,b.y=a.pageY,b.id=a.identifier,b},Gb=function(a,b,c){c.x=.5*(a.x+b.x),c.y=.5*(a.y+b.y)},Hb=function(a,b,c){if(a-Q>50){var d=ob.length>2?ob.shift():{};d.x=b,d.y=c,ob.push(d),Q=a}},Ib=function(){var a=pa.y-f.currItem.initialPosition.y;return 1-Math.abs(a/(qa.y/2))},Jb={},Kb={},Lb=[],Mb=function(a){for(;Lb.length>0;)Lb.pop();return F?(la=0,mb.forEach(function(a){0===la?Lb[0]=a:1===la&&(Lb[1]=a),la++})):a.type.indexOf(\"touch\")>-1?a.touches&&a.touches.length>0&&(Lb[0]=Fb(a.touches[0],Jb),a.touches.length>1&&(Lb[1]=Fb(a.touches[1],Kb))):(Jb.x=a.pageX,Jb.y=a.pageY,Jb.id=\"\",Lb[0]=Jb),Lb},Nb=function(a,b){var c,d,e,g,h=0,j=pa[a]+b[a],k=b[a]>0,l=tb.x+b.x,m=tb.x-nb.x;return c=j>da.min[a]||j<da.max[a]?i.panEndFriction:1,j=pa[a]+b[a]*c,!i.allowPanToNext&&s!==f.currItem.initialZoomLevel||(ea?\"h\"!==ga||\"x\"!==a||X||(k?(j>da.min[a]&&(c=i.panEndFriction,h=da.min[a]-j,d=da.min[a]-oa[a]),(d<=0||m<0)&&ac()>1?(g=l,m<0&&l>nb.x&&(g=nb.x)):da.min.x!==da.max.x&&(e=j)):(j<da.max[a]&&(c=i.panEndFriction,h=j-da.max[a],d=oa[a]-da.max[a]),(d<=0||m>0)&&ac()>1?(g=l,m>0&&l<nb.x&&(g=nb.x)):da.min.x!==da.max.x&&(e=j))):g=l,\"x\"!==a)?void(fa||$||s>f.currItem.fitRatio&&(pa[a]+=b[a]*c)):(void 0!==g&&(Ka(g,!0),$=g!==nb.x),da.min.x!==da.max.x&&(void 0!==e?pa.x=e:$||(pa.x+=b.x*c)),void 0!==g)},Ob=function(a){if(!(\"mousedown\"===a.type&&a.button>0)){if($b)return void a.preventDefault();if(!U||\"mousedown\"!==a.type){if(Eb(a,!0)&&a.preventDefault(),Da(\"pointerDown\"),F){var b=e.arraySearch(mb,a.pointerId,\"id\");b<0&&(b=mb.length),mb[b]={x:a.pageX,y:a.pageY,id:a.pointerId}}var c=Mb(a),d=c.length;_=null,cb(),V&&1!==d||(V=ha=!0,e.bind(window,p,f),S=ka=ia=T=$=Y=W=X=!1,ga=null,Da(\"firstTouchStart\",c),Ma(oa,pa),na.x=na.y=0,Ma(kb,c[0]),Ma(lb,kb),nb.x=ta.x*ra,ob=[{x:kb.x,y:kb.y}],Q=P=Ea(),Sa(s,!0),zb(),Ab()),!aa&&d>1&&!fa&&!$&&(t=s,X=!1,aa=W=!0,na.y=na.x=0,Ma(oa,pa),Ma(hb,c[0]),Ma(ib,c[1]),Gb(hb,ib,vb),ub.x=Math.abs(vb.x)-pa.x,ub.y=Math.abs(vb.y)-pa.y,ba=ca=yb(hb,ib))}}},Pb=function(a){if(a.preventDefault(),F){var b=e.arraySearch(mb,a.pointerId,\"id\");if(b>-1){var c=mb[b];c.x=a.pageX,c.y=a.pageY}}if(V){var d=Mb(a);if(ga||Y||aa)_=d;else if(tb.x!==ta.x*ra)ga=\"h\";else{var f=Math.abs(d[0].x-kb.x)-Math.abs(d[0].y-kb.y);Math.abs(f)>=gb&&(ga=f>0?\"h\":\"v\",_=d)}}},Qb=function(){if(_){var a=_.length;if(0!==a)if(Ma(hb,_[0]),jb.x=hb.x-kb.x,jb.y=hb.y-kb.y,aa&&a>1){if(kb.x=hb.x,kb.y=hb.y,!jb.x&&!jb.y&&wb(_[1],ib))return;Ma(ib,_[1]),X||(X=!0,Da(\"zoomGestureStarted\"));var b=yb(hb,ib),c=Vb(b);c>f.currItem.initialZoomLevel+f.currItem.initialZoomLevel/15&&(ka=!0);var d=1,e=Ta(),g=Ua();if(c<e)if(i.pinchToClose&&!ka&&t<=f.currItem.initialZoomLevel){var h=e-c,j=1-h/(e/1.2);Fa(j),Da(\"onPinchClose\",j),ia=!0}else d=(e-c)/e,d>1&&(d=1),c=e-d*(e/3);else c>g&&(d=(c-g)/(6*e),d>1&&(d=1),c=g+d*e);d<0&&(d=0),ba=b,Gb(hb,ib,rb),na.x+=rb.x-vb.x,na.y+=rb.y-vb.y,Ma(vb,rb),pa.x=La(\"x\",c),pa.y=La(\"y\",c),S=c>s,s=c,Ha()}else{if(!ga)return;if(ha&&(ha=!1,Math.abs(jb.x)>=gb&&(jb.x-=_[0].x-lb.x),Math.abs(jb.y)>=gb&&(jb.y-=_[0].y-lb.y)),kb.x=hb.x,kb.y=hb.y,0===jb.x&&0===jb.y)return;if(\"v\"===ga&&i.closeOnVerticalDrag&&!Bb()){na.y+=jb.y,pa.y+=jb.y;var k=Ib();return T=!0,Da(\"onVerticalDrag\",k),Fa(k),void Ha()}Hb(Ea(),hb.x,hb.y),Y=!0,da=f.currItem.bounds;var l=Nb(\"x\",jb);l||(Nb(\"y\",jb),Na(pa),Ha())}}},Rb=function(a){if(N.isOldAndroid){if(U&&\"mouseup\"===a.type)return;a.type.indexOf(\"touch\")>-1&&(clearTimeout(U),U=setTimeout(function(){U=0},600))}Da(\"pointerUp\"),Eb(a,!1)&&a.preventDefault();var b;if(F){var c=e.arraySearch(mb,a.pointerId,\"id\");if(c>-1)if(b=mb.splice(c,1)[0],navigator.msPointerEnabled){var d={4:\"mouse\",2:\"touch\",3:\"pen\"};b.type=d[a.pointerType],b.type||(b.type=a.pointerType||\"mouse\")}else b.type=a.pointerType||\"mouse\"}var g,h=Mb(a),j=h.length;if(\"mouseup\"===a.type&&(j=0),2===j)return _=null,!0;1===j&&Ma(lb,h[0]),0!==j||ga||fa||(b||(\"mouseup\"===a.type?b={x:a.pageX,y:a.pageY,type:\"mouse\"}:a.changedTouches&&a.changedTouches[0]&&(b={x:a.changedTouches[0].pageX,y:a.changedTouches[0].pageY,type:\"touch\"})),Da(\"touchRelease\",a,b));var k=-1;if(0===j&&(V=!1,e.unbind(window,p,f),zb(),aa?k=0:sb!==-1&&(k=Ea()-sb)),sb=1===j?Ea():-1,g=k!==-1&&k<150?\"zoom\":\"swipe\",aa&&j<2&&(aa=!1,1===j&&(g=\"zoomPointerUp\"),Da(\"zoomGestureEnded\")),_=null,Y||X||fa||T)if(cb(),R||(R=Sb()),R.calculateSwipeSpeed(\"x\"),T){var l=Ib();if(l<i.verticalDragRange)f.close();else{var m=pa.y,n=ja;db(\"verticalDrag\",0,1,300,e.easing.cubic.out,function(a){pa.y=(f.currItem.initialPosition.y-m)*a+m,Fa((1-n)*a+n),Ha()}),Da(\"onVerticalDrag\",1)}}else{if(($||fa)&&0===j){var o=Ub(g,R);if(o)return;g=\"zoomPointerUp\"}if(!fa)return\"swipe\"!==g?void Wb():void(!$&&s>f.currItem.fitRatio&&Tb(R))}},Sb=function(){var a,b,c={lastFlickOffset:{},lastFlickDist:{},lastFlickSpeed:{},slowDownRatio:{},slowDownRatioReverse:{},speedDecelerationRatio:{},speedDecelerationRatioAbs:{},distanceOffset:{},backAnimDestination:{},backAnimStarted:{},calculateSwipeSpeed:function(d){ob.length>1?(a=Ea()-Q+50,b=ob[ob.length-2][d]):(a=Ea()-P,b=lb[d]),c.lastFlickOffset[d]=kb[d]-b,c.lastFlickDist[d]=Math.abs(c.lastFlickOffset[d]),c.lastFlickDist[d]>20?c.lastFlickSpeed[d]=c.lastFlickOffset[d]/a:c.lastFlickSpeed[d]=0,Math.abs(c.lastFlickSpeed[d])<.1&&(c.lastFlickSpeed[d]=0),c.slowDownRatio[d]=.95,c.slowDownRatioReverse[d]=1-c.slowDownRatio[d],c.speedDecelerationRatio[d]=1},calculateOverBoundsAnimOffset:function(a,b){c.backAnimStarted[a]||(pa[a]>da.min[a]?c.backAnimDestination[a]=da.min[a]:pa[a]<da.max[a]&&(c.backAnimDestination[a]=da.max[a]),void 0!==c.backAnimDestination[a]&&(c.slowDownRatio[a]=.7,c.slowDownRatioReverse[a]=1-c.slowDownRatio[a],c.speedDecelerationRatioAbs[a]<.05&&(c.lastFlickSpeed[a]=0,c.backAnimStarted[a]=!0,db(\"bounceZoomPan\"+a,pa[a],c.backAnimDestination[a],b||300,e.easing.sine.out,function(b){pa[a]=b,Ha()}))))},calculateAnimOffset:function(a){c.backAnimStarted[a]||(c.speedDecelerationRatio[a]=c.speedDecelerationRatio[a]*(c.slowDownRatio[a]+c.slowDownRatioReverse[a]-c.slowDownRatioReverse[a]*c.timeDiff/10),c.speedDecelerationRatioAbs[a]=Math.abs(c.lastFlickSpeed[a]*c.speedDecelerationRatio[a]),c.distanceOffset[a]=c.lastFlickSpeed[a]*c.speedDecelerationRatio[a]*c.timeDiff,pa[a]+=c.distanceOffset[a])},panAnimLoop:function(){if($a.zoomPan&&($a.zoomPan.raf=H(c.panAnimLoop),c.now=Ea(),c.timeDiff=c.now-c.lastNow,c.lastNow=c.now,c.calculateAnimOffset(\"x\"),c.calculateAnimOffset(\"y\"),Ha(),c.calculateOverBoundsAnimOffset(\"x\"),c.calculateOverBoundsAnimOffset(\"y\"),c.speedDecelerationRatioAbs.x<.05&&c.speedDecelerationRatioAbs.y<.05))return pa.x=Math.round(pa.x),pa.y=Math.round(pa.y),Ha(),void ab(\"zoomPan\")}};return c},Tb=function(a){return a.calculateSwipeSpeed(\"y\"),da=f.currItem.bounds,a.backAnimDestination={},a.backAnimStarted={},Math.abs(a.lastFlickSpeed.x)<=.05&&Math.abs(a.lastFlickSpeed.y)<=.05?(a.speedDecelerationRatioAbs.x=a.speedDecelerationRatioAbs.y=0,a.calculateOverBoundsAnimOffset(\"x\"),a.calculateOverBoundsAnimOffset(\"y\"),!0):(bb(\"zoomPan\"),a.lastNow=Ea(),void a.panAnimLoop())},Ub=function(a,b){var c;fa||(qb=m);var d;if(\"swipe\"===a){var g=kb.x-lb.x,h=b.lastFlickDist.x<10;g>fb&&(h||b.lastFlickOffset.x>20)?d=-1:g<-fb&&(h||b.lastFlickOffset.x<-20)&&(d=1)}var j;d&&(m+=d,m<0?(m=i.loop?ac()-1:0,j=!0):m>=ac()&&(m=i.loop?0:ac()-1,j=!0),j&&!i.loop||(ua+=d,ra-=d,c=!0));var k,l=ta.x*ra,n=Math.abs(l-tb.x);return c||l>tb.x==b.lastFlickSpeed.x>0?(k=Math.abs(b.lastFlickSpeed.x)>0?n/Math.abs(b.lastFlickSpeed.x):333,k=Math.min(k,400),k=Math.max(k,250)):k=333,qb===m&&(c=!1),fa=!0,Da(\"mainScrollAnimStart\"),db(\"mainScroll\",tb.x,l,k,e.easing.cubic.out,Ka,function(){cb(),fa=!1,qb=-1,(c||qb!==m)&&f.updateCurrItem(),Da(\"mainScrollAnimComplete\")}),c&&f.updateCurrItem(!0),c},Vb=function(a){return 1/ca*a*t},Wb=function(){var a=s,b=Ta(),c=Ua();s<b?a=b:s>c&&(a=c);var d,g=1,h=ja;return ia&&!S&&!ka&&s<b?(f.close(),!0):(ia&&(d=function(a){Fa((g-h)*a+h)}),f.zoomTo(a,0,200,e.easing.cubic.out,d),!0)};za(\"Gestures\",{publicMethods:{initGestures:function(){var a=function(a,b,c,d,e){A=a+b,B=a+c,C=a+d,D=e?a+e:\"\"};F=N.pointerEvent,F&&N.touch&&(N.touch=!1),F?navigator.msPointerEnabled?a(\"MSPointer\",\"Down\",\"Move\",\"Up\",\"Cancel\"):a(\"pointer\",\"down\",\"move\",\"up\",\"cancel\"):N.touch?(a(\"touch\",\"start\",\"move\",\"end\",\"cancel\"),G=!0):a(\"mouse\",\"down\",\"move\",\"up\"),p=B+\" \"+C+\" \"+D,q=A,F&&!G&&(G=navigator.maxTouchPoints>1||navigator.msMaxTouchPoints>1),f.likelyTouchDevice=G,r[A]=Ob,r[B]=Pb,r[C]=Rb,D&&(r[D]=r[C]),N.touch&&(q+=\" mousedown\",p+=\" mousemove mouseup\",r.mousedown=r[A],r.mousemove=r[B],r.mouseup=r[C]),G||(i.allowPanToNext=!1)}}});var Xb,Yb,Zb,$b,_b,ac,bc,cc=function(b,c,d,g){Xb&&clearTimeout(Xb),$b=!0,Zb=!0;var h;b.initialLayout?(h=b.initialLayout,b.initialLayout=null):h=i.getThumbBoundsFn&&i.getThumbBoundsFn(m);var j=d?i.hideAnimationDuration:i.showAnimationDuration,k=function(){ab(\"initialZoom\"),d?(f.template.removeAttribute(\"style\"),f.bg.removeAttribute(\"style\")):(Fa(1),c&&(c.style.display=\"block\"),e.addClass(a,\"pswp--animated-in\"),Da(\"initialZoom\"+(d?\"OutEnd\":\"InEnd\"))),g&&g(),$b=!1};if(!j||!h||void 0===h.x)return Da(\"initialZoom\"+(d?\"Out\":\"In\")),s=b.initialZoomLevel,Ma(pa,b.initialPosition),Ha(),a.style.opacity=d?0:1,Fa(1),void(j?setTimeout(function(){k()},j):k());var n=function(){var c=l,g=!f.currItem.src||f.currItem.loadError||i.showHideOpacity;b.miniImg&&(b.miniImg.style.webkitBackfaceVisibility=\"hidden\"),d||(s=h.w/b.w,pa.x=h.x,pa.y=h.y-K,f[g?\"template\":\"bg\"].style.opacity=.001,Ha()),bb(\"initialZoom\"),d&&!c&&e.removeClass(a,\"pswp--animated-in\"),g&&(d?e[(c?\"remove\":\"add\")+\"Class\"](a,\"pswp--animate_opacity\"):setTimeout(function(){e.addClass(a,\"pswp--animate_opacity\")},30)),Xb=setTimeout(function(){if(Da(\"initialZoom\"+(d?\"Out\":\"In\")),d){var f=h.w/b.w,i={x:pa.x,y:pa.y},l=s,m=ja,n=function(b){1===b?(s=f,pa.x=h.x,pa.y=h.y-M):(s=(f-l)*b+l,pa.x=(h.x-i.x)*b+i.x,pa.y=(h.y-M-i.y)*b+i.y),Ha(),g?a.style.opacity=1-b:Fa(m-b*m)};c?db(\"initialZoom\",0,1,j,e.easing.cubic.out,n,k):(n(1),Xb=setTimeout(k,j+20))}else s=b.initialZoomLevel,Ma(pa,b.initialPosition),Ha(),Fa(1),g?a.style.opacity=1:Fa(1),Xb=setTimeout(k,j+20)},d?25:90)};n()},dc={},ec=[],fc={index:0,errorMsg:'<div class=\"pswp__error-msg\"><a href=\"%url%\" target=\"_blank\">The image</a> could not be loaded.</div>',forceProgressiveLoading:!1,preload:[1,1],getNumItemsFn:function(){return Yb.length}},gc=function(){return{center:{x:0,y:0},max:{x:0,y:0},min:{x:0,y:0}}},hc=function(a,b,c){var d=a.bounds;d.center.x=Math.round((dc.x-b)/2),d.center.y=Math.round((dc.y-c)/2)+a.vGap.top,d.max.x=b>dc.x?Math.round(dc.x-b):d.center.x,d.max.y=c>dc.y?Math.round(dc.y-c)+a.vGap.top:d.center.y,d.min.x=b>dc.x?0:d.center.x,d.min.y=c>dc.y?a.vGap.top:d.center.y},ic=function(a,b,c){if(a.src&&!a.loadError){var d=!c;if(d&&(a.vGap||(a.vGap={top:0,bottom:0}),Da(\"parseVerticalMargin\",a)),dc.x=b.x,dc.y=b.y-a.vGap.top-a.vGap.bottom,d){var e=dc.x/a.w,f=dc.y/a.h;a.fitRatio=e<f?e:f;var g=i.scaleMode;\"orig\"===g?c=1:\"fit\"===g&&(c=a.fitRatio),c>1&&(c=1),a.initialZoomLevel=c,a.bounds||(a.bounds=gc())}if(!c)return;return hc(a,a.w*c,a.h*c),d&&c===a.initialZoomLevel&&(a.initialPosition=a.bounds.center),a.bounds}return a.w=a.h=0,a.initialZoomLevel=a.fitRatio=1,a.bounds=gc(),a.initialPosition=a.bounds.center,a.bounds},jc=function(a,b,c,d,e,g){b.loadError||d&&(b.imageAppended=!0,mc(b,d,b===f.currItem&&ya),c.appendChild(d),g&&setTimeout(function(){b&&b.loaded&&b.placeholder&&(b.placeholder.style.display=\"none\",b.placeholder=null)},500))},kc=function(a){a.loading=!0,a.loaded=!1;var b=a.img=e.createEl(\"pswp__img\",\"img\"),c=function(){a.loading=!1,a.loaded=!0,a.loadComplete?a.loadComplete(a):a.img=null,b.onload=b.onerror=null,b=null};return b.onload=c,b.onerror=function(){a.loadError=!0,c()},b.src=a.src,b},lc=function(a,b){if(a.src&&a.loadError&&a.container)return b&&(a.container.innerHTML=\"\"),a.container.innerHTML=i.errorMsg.replace(\"%url%\",a.src),!0},mc=function(a,b,c){if(a.src){b||(b=a.container.lastChild);var d=c?a.w:Math.round(a.w*a.fitRatio),e=c?a.h:Math.round(a.h*a.fitRatio);a.placeholder&&!a.loaded&&(a.placeholder.style.width=d+\"px\",a.placeholder.style.height=e+\"px\"),b.style.width=d+\"px\",b.style.height=e+\"px\"}},nc=function(){if(ec.length){for(var a,b=0;b<ec.length;b++)a=ec[b],a.holder.index===a.index&&jc(a.index,a.item,a.baseDiv,a.img,!1,a.clearPlaceholder);ec=[]}};za(\"Controller\",{publicMethods:{lazyLoadItem:function(a){a=Aa(a);var b=_b(a);b&&(!b.loaded&&!b.loading||x)&&(Da(\"gettingData\",a,b),b.src&&kc(b))},initController:function(){e.extend(i,fc,!0),f.items=Yb=c,_b=f.getItemAt,ac=i.getNumItemsFn,bc=i.loop,ac()<3&&(i.loop=!1),Ca(\"beforeChange\",function(a){var b,c=i.preload,d=null===a||a>=0,e=Math.min(c[0],ac()),g=Math.min(c[1],ac());for(b=1;b<=(d?g:e);b++)f.lazyLoadItem(m+b);for(b=1;b<=(d?e:g);b++)f.lazyLoadItem(m-b)}),Ca(\"initialLayout\",function(){f.currItem.initialLayout=i.getThumbBoundsFn&&i.getThumbBoundsFn(m)}),Ca(\"mainScrollAnimComplete\",nc),Ca(\"initialZoomInEnd\",nc),Ca(\"destroy\",function(){for(var a,b=0;b<Yb.length;b++)a=Yb[b],a.container&&(a.container=null),a.placeholder&&(a.placeholder=null),a.img&&(a.img=null),a.preloader&&(a.preloader=null),a.loadError&&(a.loaded=a.loadError=!1);ec=null})},getItemAt:function(a){return a>=0&&(void 0!==Yb[a]&&Yb[a])},allowProgressiveImg:function(){return i.forceProgressiveLoading||!G||i.mouseUsed||screen.width>1200},setContent:function(a,b){i.loop&&(b=Aa(b));var c=f.getItemAt(a.index);c&&(c.container=null);var d,g=f.getItemAt(b);if(!g)return void(a.el.innerHTML=\"\");Da(\"gettingData\",b,g),a.index=b,a.item=g;var h=g.container=e.createEl(\"pswp__zoom-wrap\");if(!g.src&&g.html&&(g.html.tagName?h.appendChild(g.html):h.innerHTML=g.html),lc(g),ic(g,qa),!g.src||g.loadError||g.loaded)g.src&&!g.loadError&&(d=e.createEl(\"pswp__img\",\"img\"),d.style.opacity=1,d.src=g.src,mc(g,d),jc(b,g,h,d,!0));else{if(g.loadComplete=function(c){if(j){if(a&&a.index===b){if(lc(c,!0))return c.loadComplete=c.img=null,ic(c,qa),Ia(c),void(a.index===m&&f.updateCurrZoomItem());c.imageAppended?!$b&&c.placeholder&&(c.placeholder.style.display=\"none\",c.placeholder=null):N.transform&&(fa||$b)?ec.push({item:c,baseDiv:h,img:c.img,index:b,holder:a,clearPlaceholder:!0}):jc(b,c,h,c.img,fa||$b,!0)}c.loadComplete=null,c.img=null,Da(\"imageLoadComplete\",b,c)}},e.features.transform){var k=\"pswp__img pswp__img--placeholder\";k+=g.msrc?\"\":\" pswp__img--placeholder--blank\";var l=e.createEl(k,g.msrc?\"img\":\"\");g.msrc&&(l.src=g.msrc),mc(g,l),h.appendChild(l),g.placeholder=l}g.loading||kc(g),f.allowProgressiveImg()&&(!Zb&&N.transform?ec.push({item:g,baseDiv:h,img:g.img,index:b,holder:a}):jc(b,g,h,g.img,!0,!0))}Zb||b!==m?Ia(g):(ea=h.style,cc(g,d||g.img)),a.el.innerHTML=\"\",a.el.appendChild(h)},cleanSlide:function(a){a.img&&(a.img.onload=a.img.onerror=null),a.loaded=a.loading=a.img=a.imageAppended=!1}}});var oc,pc={},qc=function(a,b,c){var d=document.createEvent(\"CustomEvent\"),e={origEvent:a,target:a.target,releasePoint:b,pointerType:c||\"touch\"};d.initCustomEvent(\"pswpTap\",!0,!0,e),a.target.dispatchEvent(d)};za(\"Tap\",{publicMethods:{initTap:function(){Ca(\"firstTouchStart\",f.onTapStart),Ca(\"touchRelease\",f.onTapRelease),Ca(\"destroy\",function(){pc={},oc=null})},onTapStart:function(a){a.length>1&&(clearTimeout(oc),oc=null)},onTapRelease:function(a,b){if(b&&!Y&&!W&&!_a){var c=b;if(oc&&(clearTimeout(oc),oc=null,xb(c,pc)))return void Da(\"doubleTap\",c);if(\"mouse\"===b.type)return void qc(a,b,\"mouse\");var d=a.target.tagName.toUpperCase();if(\"BUTTON\"===d||e.hasClass(a.target,\"pswp__single-tap\"))return void qc(a,b);Ma(pc,c),oc=setTimeout(function(){qc(a,b),oc=null},300)}}}});var rc;za(\"DesktopZoom\",{publicMethods:{initDesktopZoom:function(){L||(G?Ca(\"mouseUsed\",function(){f.setupDesktopZoom()}):f.setupDesktopZoom(!0))},setupDesktopZoom:function(b){rc={};var c=\"wheel mousewheel DOMMouseScroll\";Ca(\"bindEvents\",function(){e.bind(a,c,f.handleMouseWheel)}),Ca(\"unbindEvents\",function(){rc&&e.unbind(a,c,f.handleMouseWheel)}),f.mouseZoomedIn=!1;var d,g=function(){f.mouseZoomedIn&&(e.removeClass(a,\"pswp--zoomed-in\"),f.mouseZoomedIn=!1),s<1?e.addClass(a,\"pswp--zoom-allowed\"):e.removeClass(a,\"pswp--zoom-allowed\"),h()},h=function(){d&&(e.removeClass(a,\"pswp--dragging\"),d=!1)};Ca(\"resize\",g),Ca(\"afterChange\",g),Ca(\"pointerDown\",function(){f.mouseZoomedIn&&(d=!0,e.addClass(a,\"pswp--dragging\"))}),Ca(\"pointerUp\",h),b||g()},handleMouseWheel:function(a){if(s<=f.currItem.fitRatio)return i.modal&&(!i.closeOnScroll||_a||V?a.preventDefault():E&&Math.abs(a.deltaY)>2&&(l=!0,f.close())),!0;if(a.stopPropagation(),rc.x=0,\"deltaX\"in a)1===a.deltaMode?(rc.x=18*a.deltaX,rc.y=18*a.deltaY):(rc.x=a.deltaX,rc.y=a.deltaY);else if(\"wheelDelta\"in a)a.wheelDeltaX&&(rc.x=-.16*a.wheelDeltaX),a.wheelDeltaY?rc.y=-.16*a.wheelDeltaY:rc.y=-.16*a.wheelDelta;else{if(!(\"detail\"in a))return;rc.y=a.detail}Sa(s,!0);var b=pa.x-rc.x,c=pa.y-rc.y;(i.modal||b<=da.min.x&&b>=da.max.x&&c<=da.min.y&&c>=da.max.y)&&a.preventDefault(),f.panTo(b,c)},toggleDesktopZoom:function(b){b=b||{x:qa.x/2+sa.x,y:qa.y/2+sa.y};var c=i.getDoubleTapZoom(!0,f.currItem),d=s===c;f.mouseZoomedIn=!d,f.zoomTo(d?f.currItem.initialZoomLevel:c,b,333),e[(d?\"remove\":\"add\")+\"Class\"](a,\"pswp--zoomed-in\")}}});var sc,tc,uc,vc,wc,xc,yc,zc,Ac,Bc,Cc,Dc,Ec={history:!0,galleryUID:1},Fc=function(){return Cc.hash.substring(1)},Gc=function(){sc&&clearTimeout(sc),uc&&clearTimeout(uc)},Hc=function(){var a=Fc(),b={};if(a.length<5)return b;var c,d=a.split(\"&\");for(c=0;c<d.length;c++)if(d[c]){var e=d[c].split(\"=\");e.length<2||(b[e[0]]=e[1])}if(i.galleryPIDs){var f=b.pid;for(b.pid=0,c=0;c<Yb.length;c++)if(Yb[c].pid===f){b.pid=c;break}}else b.pid=parseInt(b.pid,10)-1;return b.pid<0&&(b.pid=0),b},Ic=function(){if(uc&&clearTimeout(uc),_a||V)return void(uc=setTimeout(Ic,500));vc?clearTimeout(tc):vc=!0;var a=m+1,b=_b(m);b.hasOwnProperty(\"pid\")&&(a=b.pid);var c=yc+\"&gid=\"+i.galleryUID+\"&pid=\"+a;zc||Cc.hash.indexOf(c)===-1&&(Bc=!0);var d=Cc.href.split(\"#\")[0]+\"#\"+c;Dc?\"#\"+c!==window.location.hash&&history[zc?\"replaceState\":\"pushState\"](\"\",document.title,d):zc?Cc.replace(d):Cc.hash=c,zc=!0,tc=setTimeout(function(){vc=!1},60)};za(\"History\",{publicMethods:{initHistory:function(){if(e.extend(i,Ec,!0),i.history){Cc=window.location,Bc=!1,Ac=!1,zc=!1,yc=Fc(),Dc=\"pushState\"in history,yc.indexOf(\"gid=\")>-1&&(yc=yc.split(\"&gid=\")[0],yc=yc.split(\"?gid=\")[0]),Ca(\"afterChange\",f.updateURL),Ca(\"unbindEvents\",function(){e.unbind(window,\"hashchange\",f.onHashChange)});var a=function(){xc=!0,Ac||(Bc?history.back():yc?Cc.hash=yc:Dc?history.pushState(\"\",document.title,Cc.pathname+Cc.search):Cc.hash=\"\"),Gc()};Ca(\"unbindEvents\",function(){l&&a()}),Ca(\"destroy\",function(){xc||a()}),Ca(\"firstUpdate\",function(){m=Hc().pid});var b=yc.indexOf(\"pid=\");b>-1&&(yc=yc.substring(0,b),\"&\"===yc.slice(-1)&&(yc=yc.slice(0,-1))),setTimeout(function(){j&&e.bind(window,\"hashchange\",f.onHashChange)},40)}},onHashChange:function(){return Fc()===yc?(Ac=!0,void f.close()):void(vc||(wc=!0,f.goTo(Hc().pid),wc=!1))},updateURL:function(){Gc(),wc||(zc?sc=setTimeout(Ic,800):Ic())}}}),e.extend(f,eb)};return a});","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).reframe=t()}(this,function(){\"use strict\";function t(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;for(var i=Array(e),o=0,t=0;t<n;t++)for(var r=arguments[t],f=0,d=r.length;f<d;f++,o++)i[o]=r[f];return i}return function(e,s){return void 0===s&&(s=\"js-reframe\"),(\"string\"==typeof e?t(document.querySelectorAll(e)):\"length\"in e?t(e):[e]).forEach(function(e){var t,n,i,o,r,f,d,l;-1!==e.className.split(\" \").indexOf(s)||-1<e.style.width.indexOf(\"%\")||(i=e.getAttribute(\"height\")||e.offsetHeight,o=e.getAttribute(\"width\")||e.offsetWidth,r=(\"string\"==typeof i?parseInt(i):i)/(\"string\"==typeof o?parseInt(o):o)*100,(f=document.createElement(\"div\")).className=s,(d=f.style).position=\"relative\",d.width=\"100%\",d.paddingTop=r+\"%\",(l=e.style).position=\"absolute\",l.width=\"100%\",l.height=\"100%\",l.left=\"0\",l.top=\"0\",null!==(t=e.parentNode)&&void 0!==t&&t.insertBefore(f,e),null!==(n=e.parentNode)&&void 0!==n&&n.removeChild(e),f.appendChild(e))})}});\n","var html = document.documentElement;\nvar body = document.body;\nvar timeout;\nvar st = 0;\n\n// Initialize functions\ncategoryNav();\nportalButton();\n\n// Combine all DOM-ready initialization functions\nfunction initializeDOMFeatures() {\n    const hasNextPage = document.querySelector('link[rel=next]') !== null;\n    \n    // Remove pagination elements if no next page exists\n    if (!hasNextPage) {\n        document.querySelector('.load-more')?.remove();\n        document.querySelector('.gh-loadmore')?.remove();\n    } else {\n        // Initialize pagination only for non-index pages with feed\n        const isMasonry = document.querySelector('.masonry-wrapper') !== null;\n        const hasFeed = document.querySelector('.gh-feed') !== null;\n        const isIndexPage = document.body.classList.contains('home-template');\n        \n        if (hasFeed && !isIndexPage && !window.paginationInitialized) {\n            pagination(true, null, isMasonry);\n            window.paginationInitialized = true;\n        }\n    }\n\n    setupFootnotes();\n    setMasonryAnimationDelay();\n    initMasonryLayout();\n}\n\n// Call functions when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeDOMFeatures);\n} else {\n    initializeDOMFeatures();\n}\n\n// First, define the NavigationIconManager class and its dependencies\nconst navigationIcons = {\n    // Existing icons\n    home: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>`,\n    blog: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path><path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path></svg>`,\n    work: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path></svg>`,\n    author: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg>`,\n\n    // Additional icons\n    now: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"></path><line x1=\"16\" y1=\"8\" x2=\"2\" y2=\"22\"></line><line x1=\"17.5\" y1=\"15\" x2=\"9\" y2=\"15\"></line></svg>`,\n    course: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path><path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path></svg>`,\n    faq: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line></svg>`,\n    about: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg>`,\n    contact: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><path d=\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94\"></path></svg>`,\n    books: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path><path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path></svg>`,\n    bookmarks: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path></svg>`,\n    podcasts: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path><path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line></svg>`,\n    newsletters: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\"></polyline><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path></svg>`,\n    tools: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"></path></svg>`,\n    gallery: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-grid\"><rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect><rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect></svg>`,\n\n    // Social icons\n    instagram: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line></svg>`,\n    twitter: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path></svg>`,\n    linkedin: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path><rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect><circle cx=\"4\" cy=\"4\" r=\"2\"></circle></svg>`,\n    facebook: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path></svg>`,\n    github: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg>`,\n    shop: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><circle cx=\"9\" cy=\"21\" r=\"1\"></circle><circle cx=\"20\" cy=\"21\" r=\"1\"></circle><path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path></svg>`,\n    youtube: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather\"><path d=\"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z\"></path><polygon points=\"9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02\"></polygon></svg>`,\n\n    // Home icon aliases\n    homepage: function() { return this.home; },\n    'main-page': function() { return this.home; },\n    start: function() { return this.home; },\n    'home-page': function() { return this.home; },\n    dashboard: function() { return this.home; },\n\n    // Now icon aliases\n    current: function() { return this.now; },\n    'now-page': function() { return this.now; },\n    updates: function() { return this.now; },\n    'whats-new': function() { return this.now; },\n    status: function() { return this.now; },\n\n    // Course icon aliases\n    courses: function() { return this.course; },\n    learning: function() { return this.course; },\n    tutorials: function() { return this.course; },\n    lessons: function() { return this.course; },\n    education: function() { return this.course; },\n    'online-courses': function() { return this.course; },\n\n    // About icon aliases\n    'about-me': function() { return this.about; },\n    biography: function() { return this.about; },\n    info: function() { return this.about; },\n    introduction: function() { return this.about; },\n    'about-us': function() { return this.about; },\n\n    // FAQ icon aliases\n    faqs: function() { return this.faq; },\n    help: function() { return this.faq; },\n    questions: function() { return this.faq; },\n    'help-center': function() { return this.faq; },\n    support: function() { return this.faq; },\n\n    // Bookmarks icon aliases\n    favorites: function() { return this.bookmarks; },\n    saved: function() { return this.bookmarks; },\n    'reading-list': function() { return this.bookmarks; },\n    'saved-items': function() { return this.bookmarks; },\n    collections: function() { return this.bookmarks; },\n\n    // Podcasts icon aliases\n    audio: function() { return this.podcasts; },\n    episodes: function() { return this.podcasts; },\n    shows: function() { return this.podcasts; },\n    'podcast-episodes': function() { return this.podcasts; },\n    broadcasts: function() { return this.podcasts; },\n\n    // Newsletters icon aliases\n    digest: function() { return this.newsletters; },\n    updates: function() { return this.newsletters; },\n    'email-updates': function() { return this.newsletters; },\n    subscription: function() { return this.newsletters; },\n    'mailing-list': function() { return this.newsletters; },\n\n    // Gallery icon aliases\n    photos: function() { return this.gallery; },\n    images: function() { return this.gallery; },\n    portfolio: function() { return this.gallery; },\n    'photo-gallery': function() { return this.gallery; },\n    'image-gallery': function() { return this.gallery; },\n    showcase: function() { return this.gallery; },\n    albums: function() { return this.gallery; },\n\n    // Blog icon aliases\n    posts: function() { return this.blog; },\n    articles: function() { return this.blog; },\n    writing: function() { return this.blog; },\n    journal: function() { return this.blog; },\n    'latest-posts': function() { return this.blog; },\n    'my-blog': function() { return this.blog; },\n    diary: function() { return this.blog; },\n    thoughts: function() { return this.blog; },\n    notes: function() { return this.blog; },\n    'writing-archive': function() { return this.blog; },\n     \n    profile: function() { return this.author; },\n    bio: function() { return this.author; },\n     \n    // Books icon aliases\n    library: function() { return this.books; },\n    reading: function() { return this.books; },\n    'my-library': function() { return this.books; },\n    'reading-list': function() { return this.books; },\n    bookshelf: function() { return this.books; },\n    'book-notes': function() { return this.books; },\n    'book-reviews': function() { return this.books; },\n    'recommended-books': function() { return this.books; },\n    literature: function() { return this.books; },\n    publications: function() { return this.books; },\n     \n    // Work icon aliases\n    portfolio: function() { return this.work; },\n    projects: function() { return this.work; },\n    'my-work': function() { return this.work; },\n    'case-studies': function() { return this.work; },\n    experience: function() { return this.work; },\n    'my-projects': function() { return this.work; },\n    showcase: function() { return this.work; },\n    achievements: function() { return this.work; },\n    career: function() { return this.work; },\n    'work-history': function() { return this.work; },\n     \n    social: function() { return this.contact; },\n    connect: function() { return this.contact; },\n     \n    // Tools icon aliases\n    resources: function() { return this.tools; },\n    utilities: function() { return this.tools; },\n    'my-tools': function() { return this.tools; },\n    software: function() { return this.tools; },\n    applications: function() { return this.tools; },\n    'tool-kit': function() { return this.tools; },\n    gear: function() { return this.tools; },\n    equipment: function() { return this.tools; },\n    'useful-tools': function() { return this.tools; },\n    'resource-library': function() { return this.tools; },\n\n    // Twitter icon aliases\n    'x': function() { return this.twitter; },\n\n    // Default fallback icon\n    default: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-hash\"><line x1=\"4\" y1=\"9\" x2=\"20\" y2=\"9\"></line><line x1=\"4\" y1=\"15\" x2=\"20\" y2=\"15\"></line><line x1=\"10\" y1=\"3\" x2=\"8\" y2=\"21\"></line><line x1=\"16\" y1=\"3\" x2=\"14\" y2=\"21\"></line></svg>`\n};\n\nclass NavigationManager {\n    constructor() {\n        this.icons = navigationIcons;\n        this.HEADER_PREFIX = \"#\";\n        this.initialized = false;\n        this.originalItems = null;\n        this.pendingIcons = new Map(); // Store icons that are set before first initialization\n        \n        window.navIcons = {\n            setIcon: (slug, svgContent) => {\n                if (!slug || typeof svgContent !== 'string') {\n                    console.warn('Invalid icon definition:', { slug, svgContent });\n                    return;\n                }\n                \n                // If not yet initialized, store for later\n                if (!this.initialized) {\n                    this.pendingIcons.set(slug.toLowerCase(), svgContent);\n                    return;\n                }\n                \n                // If already initialized, update and re-render\n                this.icons[slug.toLowerCase()] = svgContent;\n                this.updateIcons();\n            },\n            initializeNavigation: () => {\n                this.initialize(true);\n            },\n            getIcon: (slug) => this.getIcon(slug)\n        };\n    }\n\n    initialize(force = false) {\n        if (this.initialized && !force) return;\n        \n        const headMenu = document.querySelector(\".head-menu\");\n        if (!headMenu) return;\n\n        // Apply any pending icons first\n        if (this.pendingIcons.size > 0) {\n            this.pendingIcons.forEach((svg, slug) => {\n                this.icons[slug] = svg;\n            });\n            this.pendingIcons.clear();\n        }\n\n        // Store original items on first initialization\n        if (!this.originalItems) {\n            this.originalItems = Array.from(document.querySelectorAll(\".head-menu .nav li\"));\n        }\n        \n        // Process and render\n        const groups = this.processMenuItems(this.originalItems);\n        this.renderGroups(headMenu, groups);\n        \n        this.initialized = true;\n        headMenu.classList.add('initialized');\n    }\n\n    updateIcons() {\n        const headMenu = document.querySelector(\".head-menu\");\n        if (!headMenu) return;\n\n        const groups = this.processMenuItems(this.originalItems);\n        this.renderGroups(headMenu, groups);\n    }\n\n    processMenuItems(items) {\n        return items.reduce((acc, item) => {\n            const text = item.textContent.trim();\n            const currentGroup = acc[acc.length - 1];\n            \n            if (text.startsWith(this.HEADER_PREFIX)) {\n                acc.push({\n                    header: text.slice(1),\n                    items: []\n                });\n            } else {\n                const link = item.querySelector(\"a\");\n                const slug = this.getNavSlug(item);\n                \n                if (currentGroup) {\n                    currentGroup.items.push({\n                        text,\n                        link: link.href,\n                        classNames: item.className,\n                        icon: slug ? this.getIcon(slug) : '',\n                    });\n                }\n            }\n            return acc;\n        }, [{ header: null, items: [] }]);\n    }\n\n    getNavSlug(element) {\n        return Array.from(element.classList)\n            .find(cls => cls.startsWith('nav-') && \n                        cls !== 'nav-item' && \n                        cls !== 'nav-current')\n            ?.replace('nav-', '');\n    }\n\n    getIcon(slug) {\n        if (!slug) return this.icons.default;\n        \n        const icon = this.icons[slug.toLowerCase()];\n        \n        if (typeof icon === 'function') {\n            return icon.call(this.icons); // Call the alias function with icons object as context\n        }\n        \n        return icon || this.icons.default;\n    }\n\n    renderGroups(headMenu, groups) {\n        const fragment = document.createDocumentFragment();\n        const container = document.createElement('div');\n        container.className = \"menu-item\";\n\n        groups.forEach(group => {\n            if (group.items.length === 0) return;\n\n            const div = document.createElement('div');\n            div.className = \"head-group\";\n\n            div.innerHTML = group.header \n                ? this.createGroupWithHeader(group)\n                : this.createGroupWithoutHeader(group);\n\n            container.appendChild(div);\n        });\n\n        fragment.appendChild(container);\n        headMenu.innerHTML = '';\n        headMenu.appendChild(fragment);\n    }\n\n    createGroupWithHeader(group) {\n        return `\n            <h6 class=\"head-group-header section-title\">${group.header}</h6>\n            ${this.createNavList(group.items)}\n        `;\n    }\n\n    createGroupWithoutHeader(group) {\n        return this.createNavList(group.items);\n    }\n\n    createNavList(items) {\n        return `\n            <ul class=\"nav\">${\n                items.map(item => `\n                    <li class=\"nav-item ${item.classNames}\">\n                        <a href=\"${item.link}\">\n                            ${item.icon ? `<div class=\"nav-icon\">${item.icon}</div>` : ''}\n                            ${item.text}\n                        </a>\n                    </li>\n                `).join('')\n            }</ul>\n        `;\n    }\n}\n\n// Initialize as early as possible\nwindow.navigationManager = new NavigationManager();\nwindow.navigationManager.initialize();\n\n// Backup initialization\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (!window.navigationManager.initialized) {\n        window.navigationManager.initialize();\n    }\n});\n\ndropdown(false);\n\nfunction portalButton() {\n    'use strict';\n    st = window.scrollY;\n\n    if (st > 300) {\n        body.classList.add('portal-visible');\n    } else {\n        body.classList.remove('portal-visible');\n    }\n}\n\nfunction featured() {\n    'use strict';\n    var feed = document.querySelector('.featured-feed');\n    if (!feed) return;\n\n    tns({\n        container: feed,\n        controlsText: [\n            '<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M20.547 22.107L14.44 16l6.107-6.12L18.667 8l-8 8 8 8 1.88-1.893z\"></path></svg>',\n            '<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M11.453 22.107L17.56 16l-6.107-6.12L13.333 8l8 8-8 8-1.88-1.893z\"></path></svg>',\n        ],\n        gutter: 24,\n        loop: false,\n        nav: false,\n        mouseDrag: true,\n        responsive: {\n            0: {\n                items: 2,\n            },\n            768: {\n                items: 2,\n            },\n            992: {\n                items: 2,\n            },\n        },\n    });\n}\n\nfunction darkPage() {\n    var isDark = body.classList.contains('tag-hash-dark') ? 'dark' : 'light';\n    html.classList.add(`${isDark}-page`);\n}\n\nfunction footerGroup() {\n    const footerNav = document.querySelector(\".footer-nav\");\n    if (!footerNav) return;\n    \n    const items = document.querySelectorAll(\".footer-nav .nav li\");\n\n    const groups = [];\n    let index = null;\n    items.forEach(item => {\n        const text = item.textContent.trim();\n        const PREFIXFOOTERHEADER = \"#\";\n        if (text.includes(PREFIXFOOTERHEADER)) {\n            index = index === null ? 0 : ++index;\n            groups[index] = { header: \"\", items: [] };\n            groups[index].header = text.slice(PREFIXFOOTERHEADER.length);\n        } else {\n            groups[index].items.push({ text, link: item.childNodes[0].href });\n        }\n    })\n    document.querySelector(\".footer-nav ul.nav\").remove();\n    groups.forEach((group) => {\n        const div = document.createElement('div');\n        const h6 = document.createElement('h6');\n        h6.classList.add(\"footer-group-header\", \"section-title\");\n        h6.innerHTML = group.header;\n        const ul = document.createElement(\"ul\");\n        ul.classList.add(\"nav\");\n        group.items.forEach((item) => {\n            const li = document.createElement(\"li\");\n            li.innerHTML = `<a href=\"${item.link}\">${item.text}</a>`;\n            ul.append(li);\n        })\n        div.append(h6, ul);\n        footerNav.appendChild(div);\n    });\n}\n\nfunction categoryNav() {\n    var currentPageURL = window.location.pathname;\n\n    // Get all <a> tags inside the .blog-navbar div\n    var navbarLinks = document.querySelectorAll('.blog-navbar a');\n\n    // Loop through each <a> tag\n    navbarLinks.forEach(function(link) {\n        // Check if the href attribute matches the current page URL\n        if (link.getAttribute('href') === currentPageURL) {\n            // Add the is-active class\n            link.classList.add('is-active');\n        }\n    });\n}\n\nfunction initMasonryLayout() {\n    const container = document.querySelector('.masonry-container');\n    if (!container) return;\n    \n    // Store original order if not already stored\n    if (!container.dataset.originalOrder) {\n        const items = Array.from(document.querySelectorAll('.masonry-brick'));\n        // Store just the IDs or data attributes that uniquely identify each brick\n        container.dataset.originalOrder = items.map(item => \n            item.id || item.dataset.id || item.dataset.index || items.indexOf(item)\n        ).join(',');\n    }\n    \n    // Get current items and sort them according to original order\n    const currentItems = Array.from(document.querySelectorAll('.masonry-brick'));\n    const originalOrder = container.dataset.originalOrder.split(',');\n    \n    // Sort items based on original order\n    const items = originalOrder.map(id => \n        currentItems.find(item => \n            (item.id || item.dataset.id || item.dataset.index || currentItems.indexOf(item)) == id\n        )\n    );\n    \n    if (!items.length) return;\n    \n    // Create wrapper\n    const wrapper = document.createElement('div');\n    wrapper.className = 'masonry-wrapper gh-feed';\n    \n    // Create temporary wrapper to get computed style\n    container.appendChild(wrapper);\n    const computedStyle = getComputedStyle(wrapper);\n    const columnCount = parseInt(computedStyle.getPropertyValue('--columns')) || 5;\n    container.removeChild(wrapper);\n    \n    // Create columns\n    const columns = Array.from({ length: columnCount }, () => {\n        const column = document.createElement('div');\n        column.className = 'masonry-column';\n        wrapper.appendChild(column);\n        return column;\n    });\n    \n    // Distribute items to columns horizontally\n    items.forEach((item, index) => {\n        const columnIndex = index % columnCount;\n        columns[columnIndex].appendChild(item);\n    });\n    \n    // Replace existing content\n    const existingWrapper = container.querySelector('.masonry-wrapper');\n    if (existingWrapper) {\n        container.replaceChild(wrapper, existingWrapper);\n    } else {\n        container.appendChild(wrapper);\n    }\n    \n    // Handle image loading\n    const images = document.querySelectorAll('.masonry-content img');\n    let loadedImages = 0;\n    const totalImages = images.length;\n    \n    const imageLoaded = () => {\n        loadedImages++;\n        if (loadedImages === totalImages) {\n            wrapper.classList.remove('is-loading');\n            initLightbox();\n        }\n    };\n\n    images.forEach(img => {\n        if (img.complete) {\n            imageLoaded();\n        } else {\n            img.addEventListener('load', imageLoaded, { once: true });\n            img.addEventListener('error', imageLoaded, { once: true });\n        }\n    });\n\n    if (loadedImages === totalImages) {\n        wrapper.classList.remove('is-loading');\n        initLightbox();\n    }\n}\n\n// Add resize handler with debounce\nlet resizeTimeout;\nwindow.addEventListener('resize', () => {\n    clearTimeout(resizeTimeout);\n    resizeTimeout = setTimeout(initMasonryLayout, 250);\n});\n\nfunction initLightbox() {\n    const masonryImages = document.querySelectorAll('.masonry-content .zoom-image');\n    if (!masonryImages.length) return;\n\n    const pswpElement = document.querySelector('.pswp');\n    if (!pswpElement) return;\n\n    // Function to reset PhotoSwipe DOM to initial state\n    function resetPhotoSwipe() {\n        // Remove all added classes from root element\n        pswpElement.className = 'pswp';\n        \n        // Reset container\n        const container = pswpElement.querySelector('.pswp__container');\n        container.removeAttribute('style');\n        \n        // Reset items\n        const items = container.querySelectorAll('.pswp__item');\n        items.forEach(item => {\n            item.removeAttribute('style');\n            item.innerHTML = ''; // Remove any zoom wraps and images\n        });\n        \n        // Reset UI elements\n        const uiElements = pswpElement.querySelectorAll('.pswp__button');\n        uiElements.forEach(el => {\n            el.classList.remove('pswp__element--disabled');\n        });\n        \n        // Reset counter\n        const counter = pswpElement.querySelector('.pswp__counter');\n        if (counter) counter.textContent = '';\n        \n        // Reset UI visibility\n        const ui = pswpElement.querySelector('.pswp__ui');\n        ui.className = 'pswp__ui pswp__ui--hidden';\n    }\n\n    // Remove existing click listeners and create items array once\n    const items = Array.from(masonryImages).map((image) => ({\n        src: image.dataset.original || image.src,\n        msrc: image.dataset.small,\n        w: image.naturalWidth || 0,\n        h: image.naturalHeight || 0,\n        el: image\n    }));\n\n    function handleImageClick(e) {\n        e.preventDefault();\n        resetPhotoSwipe();\n        \n        // Find current index from pre-built items array\n        const currentIndex = items.findIndex(item => item.el === e.target);\n        if (currentIndex === -1) return;\n\n        const options = {\n            index: currentIndex,\n            bgOpacity: 0.9,\n            closeOnScroll: true,\n            fullscreenEl: false,\n            history: false,\n            shareEl: false,\n            zoomEl: true,\n            getThumbBoundsFn: (index) => {\n                const thumbnail = items[index].el;\n                const rect = thumbnail.getBoundingClientRect();\n                return {\n                    x: rect.left,\n                    y: rect.top + window.scrollY,\n                    w: rect.width\n                };\n            }\n        };\n\n        const gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        \n        gallery.listen('destroy', function() {\n            gallery.close();\n            resetPhotoSwipe();\n        });\n\n        gallery.init();\n    }\n\n    // Add click listeners\n    masonryImages.forEach((img) => {\n        img.removeEventListener('click', handleImageClick);\n        img.addEventListener('click', handleImageClick);\n    });\n}\n\nfunction setupFootnotes() {\n    'use strict';\n    const contentSelector = 'article.ghost-content';\n    const contentElement = document.querySelector(contentSelector);\n    if (!contentElement) return;\n\n    let htmlContent = contentElement.innerHTML;\n    const regexPattern = /\\[\\^(.*?)\\]/g;\n    \n    // Check if there are any footnotes before proceeding\n    const matches = htmlContent.match(regexPattern);\n    if (!matches) return;\n\n    const footnoteList = document.createElement('ol');\n    footnoteList.classList.add('footnote-list');\n    footnoteList.id = 'footnotes';\n    \n    const footnoteWrapper = document.createElement('div');\n    footnoteWrapper.classList.add('kg-canvas', 'section-footnotes');\n    \n    let index = 1;\n    \n    htmlContent = htmlContent.replace(regexPattern, (match, p1) => {\n        footnoteList.innerHTML = footnoteList.innerHTML + `<li id=\"footnote-${index}\">${p1}</li>`;\n        const returnValue = `<sup class=\"footnote\"><a href=\"#footnote-${index}\">[${index}]</a></sup>`;\n        index++;\n        return returnValue;\n    });\n\n    contentElement.innerHTML = htmlContent;\n    \n    footnoteWrapper.appendChild(footnoteList);\n    contentElement.appendChild(footnoteWrapper);\n}\n\nfunction setMasonryAnimationDelay() {\n    const bricks = document.querySelectorAll('.masonry-brick');\n    bricks.forEach((brick, index) => {\n        brick.style.animationDelay = `${index * 0.05}s`;\n    });\n}","var tns = (function (){\n    var win = window;\n\n    var raf = win.requestAnimationFrame\n      || win.webkitRequestAnimationFrame\n      || win.mozRequestAnimationFrame\n      || win.msRequestAnimationFrame\n      || function(cb) { return setTimeout(cb, 16); };\n\n    var win$1 = window;\n\n    var caf = win$1.cancelAnimationFrame\n      || win$1.mozCancelAnimationFrame\n      || function(id){ clearTimeout(id); };\n\n    function extend() {\n      var obj, name, copy,\n          target = arguments[0] || {},\n          i = 1,\n          length = arguments.length;\n\n      for (; i < length; i++) {\n        if ((obj = arguments[i]) !== null) {\n          for (name in obj) {\n            copy = obj[name];\n\n            if (target === copy) {\n              continue;\n            } else if (copy !== undefined) {\n              target[name] = copy;\n            }\n          }\n        }\n      }\n      return target;\n    }\n\n    function checkStorageValue (value) {\n      return ['true', 'false'].indexOf(value) >= 0 ? JSON.parse(value) : value;\n    }\n\n    function setLocalStorage(storage, key, value, access) {\n      if (access) {\n        try { storage.setItem(key, value); } catch (e) {}\n      }\n      return value;\n    }\n\n    function getSlideId() {\n      var id = window.tnsId;\n      window.tnsId = !id ? 1 : id + 1;\n\n      return 'tns' + window.tnsId;\n    }\n\n    function getBody () {\n      var doc = document,\n          body = doc.body;\n\n      if (!body) {\n        body = doc.createElement('body');\n        body.fake = true;\n      }\n\n      return body;\n    }\n\n    var docElement = document.documentElement;\n\n    function setFakeBody (body) {\n      var docOverflow = '';\n      if (body.fake) {\n        docOverflow = docElement.style.overflow;\n        //avoid crashing IE8, if background image is used\n        body.style.background = '';\n        //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n        body.style.overflow = docElement.style.overflow = 'hidden';\n        docElement.appendChild(body);\n      }\n\n      return docOverflow;\n    }\n\n    function resetFakeBody (body, docOverflow) {\n      if (body.fake) {\n        body.remove();\n        docElement.style.overflow = docOverflow;\n        // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n        // eslint-disable-next-line\n        docElement.offsetHeight;\n      }\n    }\n\n    // get css-calc\n\n    function calc() {\n      var doc = document,\n          body = getBody(),\n          docOverflow = setFakeBody(body),\n          div = doc.createElement('div'),\n          result = false;\n\n      body.appendChild(div);\n      try {\n        var str = '(10px * 10)',\n            vals = ['calc' + str, '-moz-calc' + str, '-webkit-calc' + str],\n            val;\n        for (var i = 0; i < 3; i++) {\n          val = vals[i];\n          div.style.width = val;\n          if (div.offsetWidth === 100) {\n            result = val.replace(str, '');\n            break;\n          }\n        }\n      } catch (e) {}\n\n      body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n\n      return result;\n    }\n\n    // get subpixel support value\n\n    function percentageLayout() {\n      // check subpixel layout supporting\n      var doc = document,\n          body = getBody(),\n          docOverflow = setFakeBody(body),\n          wrapper = doc.createElement('div'),\n          outer = doc.createElement('div'),\n          str = '',\n          count = 70,\n          perPage = 3,\n          supported = false;\n\n      wrapper.className = \"tns-t-subp2\";\n      outer.className = \"tns-t-ct\";\n\n      for (var i = 0; i < count; i++) {\n        str += '<div></div>';\n      }\n\n      outer.innerHTML = str;\n      wrapper.appendChild(outer);\n      body.appendChild(wrapper);\n\n      supported = Math.abs(wrapper.getBoundingClientRect().left - outer.children[count - perPage].getBoundingClientRect().left) < 2;\n\n      body.fake ? resetFakeBody(body, docOverflow) : wrapper.remove();\n\n      return supported;\n    }\n\n    function mediaquerySupport () {\n      if (window.matchMedia || window.msMatchMedia) {\n        return true;\n      }\n\n      var doc = document,\n          body = getBody(),\n          docOverflow = setFakeBody(body),\n          div = doc.createElement('div'),\n          style = doc.createElement('style'),\n          rule = '@media all and (min-width:1px){.tns-mq-test{position:absolute}}',\n          position;\n\n      style.type = 'text/css';\n      div.className = 'tns-mq-test';\n\n      body.appendChild(style);\n      body.appendChild(div);\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = rule;\n      } else {\n        style.appendChild(doc.createTextNode(rule));\n      }\n\n      position = window.getComputedStyle ? window.getComputedStyle(div).position : div.currentStyle['position'];\n\n      body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n\n      return position === \"absolute\";\n    }\n\n    // create and append style sheet\n    function createStyleSheet (media, nonce) {\n      // Create the <style> tag\n      var style = document.createElement(\"style\");\n      // style.setAttribute(\"type\", \"text/css\");\n\n      // Add a media (and/or media query) here if you'd like!\n      // style.setAttribute(\"media\", \"screen\")\n      // style.setAttribute(\"media\", \"only screen and (max-width : 1024px)\")\n      if (media) { style.setAttribute(\"media\", media); }\n\n      // Add nonce attribute for Content Security Policy\n      if (nonce) { style.setAttribute(\"nonce\", nonce); }\n\n      // WebKit hack :(\n      // style.appendChild(document.createTextNode(\"\"));\n\n      // Add the <style> element to the page\n      document.querySelector('head').appendChild(style);\n\n      return style.sheet ? style.sheet : style.styleSheet;\n    }\n\n    // cross browsers addRule method\n    function addCSSRule(sheet, selector, rules, index) {\n      // return raf(function() {\n        'insertRule' in sheet ?\n          sheet.insertRule(selector + '{' + rules + '}', index) :\n          sheet.addRule(selector, rules, index);\n      // });\n    }\n\n    // cross browsers addRule method\n    function removeCSSRule(sheet, index) {\n      // return raf(function() {\n        'deleteRule' in sheet ?\n          sheet.deleteRule(index) :\n          sheet.removeRule(index);\n      // });\n    }\n\n    function getCssRulesLength(sheet) {\n      var rule = ('insertRule' in sheet) ? sheet.cssRules : sheet.rules;\n      return rule.length;\n    }\n\n    function toDegree (y, x) {\n      return Math.atan2(y, x) * (180 / Math.PI);\n    }\n\n    function getTouchDirection(angle, range) {\n      var direction = false,\n          gap = Math.abs(90 - Math.abs(angle));\n\n      if (gap >= 90 - range) {\n        direction = 'horizontal';\n      } else if (gap <= range) {\n        direction = 'vertical';\n      }\n\n      return direction;\n    }\n\n    // https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\n    function forEach (arr, callback, scope) {\n      for (var i = 0, l = arr.length; i < l; i++) {\n        callback.call(scope, arr[i], i);\n      }\n    }\n\n    var classListSupport = 'classList' in document.createElement('_');\n\n    var hasClass = classListSupport ?\n        function (el, str) { return el.classList.contains(str); } :\n        function (el, str) { return el.className.indexOf(str) >= 0; };\n\n    var addClass = classListSupport ?\n        function (el, str) {\n          if (!hasClass(el,  str)) { el.classList.add(str); }\n        } :\n        function (el, str) {\n          if (!hasClass(el,  str)) { el.className += ' ' + str; }\n        };\n\n    var removeClass = classListSupport ?\n        function (el, str) {\n          if (hasClass(el,  str)) { el.classList.remove(str); }\n        } :\n        function (el, str) {\n          if (hasClass(el, str)) { el.className = el.className.replace(str, ''); }\n        };\n\n    function hasAttr(el, attr) {\n      return el.hasAttribute(attr);\n    }\n\n    function getAttr(el, attr) {\n      return el.getAttribute(attr);\n    }\n\n    function isNodeList(el) {\n      // Only NodeList has the \"item()\" function\n      return typeof el.item !== \"undefined\";\n    }\n\n    function setAttrs(els, attrs) {\n      els = (isNodeList(els) || els instanceof Array) ? els : [els];\n      if (Object.prototype.toString.call(attrs) !== '[object Object]') { return; }\n\n      for (var i = els.length; i--;) {\n        for(var key in attrs) {\n          els[i].setAttribute(key, attrs[key]);\n        }\n      }\n    }\n\n    function removeAttrs(els, attrs) {\n      els = (isNodeList(els) || els instanceof Array) ? els : [els];\n      attrs = (attrs instanceof Array) ? attrs : [attrs];\n\n      var attrLength = attrs.length;\n      for (var i = els.length; i--;) {\n        for (var j = attrLength; j--;) {\n          els[i].removeAttribute(attrs[j]);\n        }\n      }\n    }\n\n    function arrayFromNodeList (nl) {\n      var arr = [];\n      for (var i = 0, l = nl.length; i < l; i++) {\n        arr.push(nl[i]);\n      }\n      return arr;\n    }\n\n    function hideElement(el, forceHide) {\n      if (el.style.display !== 'none') { el.style.display = 'none'; }\n    }\n\n    function showElement(el, forceHide) {\n      if (el.style.display === 'none') { el.style.display = ''; }\n    }\n\n    function isVisible(el) {\n      return window.getComputedStyle(el).display !== 'none';\n    }\n\n    function whichProperty(props){\n      if (typeof props === 'string') {\n        var arr = [props],\n            Props = props.charAt(0).toUpperCase() + props.substr(1),\n            prefixes = ['Webkit', 'Moz', 'ms', 'O'];\n\n        prefixes.forEach(function(prefix) {\n          if (prefix !== 'ms' || props === 'transform') {\n            arr.push(prefix + Props);\n          }\n        });\n\n        props = arr;\n      }\n\n      var el = document.createElement('fakeelement'),\n          len = props.length;\n      for(var i = 0; i < props.length; i++){\n        var prop = props[i];\n        if( el.style[prop] !== undefined ){ return prop; }\n      }\n\n      return false; // explicit for ie9-\n    }\n\n    function has3DTransforms(tf){\n      if (!tf) { return false; }\n      if (!window.getComputedStyle) { return false; }\n\n      var doc = document,\n          body = getBody(),\n          docOverflow = setFakeBody(body),\n          el = doc.createElement('p'),\n          has3d,\n          cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';\n\n      cssTF += 'transform';\n\n      // Add it to the body to get the computed style\n      body.insertBefore(el, null);\n\n      el.style[tf] = 'translate3d(1px,1px,1px)';\n      has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n\n      body.fake ? resetFakeBody(body, docOverflow) : el.remove();\n\n      return (has3d !== undefined && has3d.length > 0 && has3d !== \"none\");\n    }\n\n    // get transitionend, animationend based on transitionDuration\n    // @propin: string\n    // @propOut: string, first-letter uppercase\n    // Usage: getEndProperty('WebkitTransitionDuration', 'Transition') => webkitTransitionEnd\n    function getEndProperty(propIn, propOut) {\n      var endProp = false;\n      if (/^Webkit/.test(propIn)) {\n        endProp = 'webkit' + propOut + 'End';\n      } else if (/^O/.test(propIn)) {\n        endProp = 'o' + propOut + 'End';\n      } else if (propIn) {\n        endProp = propOut.toLowerCase() + 'end';\n      }\n      return endProp;\n    }\n\n    // Test via a getter in the options object to see if the passive property is accessed\n    var supportsPassive = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n          supportsPassive = true;\n        }\n      });\n      window.addEventListener(\"test\", null, opts);\n    } catch (e) {}\n    var passiveOption = supportsPassive ? { passive: true } : false;\n\n    function addEvents(el, obj, preventScrolling) {\n      for (var prop in obj) {\n        var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 && !preventScrolling ? passiveOption : false;\n        el.addEventListener(prop, obj[prop], option);\n      }\n    }\n\n    function removeEvents(el, obj) {\n      for (var prop in obj) {\n        var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 ? passiveOption : false;\n        el.removeEventListener(prop, obj[prop], option);\n      }\n    }\n\n    function Events() {\n      return {\n        topics: {},\n        on: function (eventName, fn) {\n          this.topics[eventName] = this.topics[eventName] || [];\n          this.topics[eventName].push(fn);\n        },\n        off: function(eventName, fn) {\n          if (this.topics[eventName]) {\n            for (var i = 0; i < this.topics[eventName].length; i++) {\n              if (this.topics[eventName][i] === fn) {\n                this.topics[eventName].splice(i, 1);\n                break;\n              }\n            }\n          }\n        },\n        emit: function (eventName, data) {\n          data.type = eventName;\n          if (this.topics[eventName]) {\n            this.topics[eventName].forEach(function(fn) {\n              fn(data, eventName);\n            });\n          }\n        }\n      };\n    }\n\n    function jsTransform(element, attr, prefix, postfix, to, duration, callback) {\n      var tick = Math.min(duration, 10),\n          unit = (to.indexOf('%') >= 0) ? '%' : 'px',\n          to = to.replace(unit, ''),\n          from = Number(element.style[attr].replace(prefix, '').replace(postfix, '').replace(unit, '')),\n          positionTick = (to - from) / duration * tick,\n          running;\n\n      setTimeout(moveElement, tick);\n      function moveElement() {\n        duration -= tick;\n        from += positionTick;\n        element.style[attr] = prefix + from + unit + postfix;\n        if (duration > 0) {\n          setTimeout(moveElement, tick);\n        } else {\n          callback();\n        }\n      }\n    }\n\n    // Object.keys\n    if (!Object.keys) {\n      Object.keys = function(object) {\n        var keys = [];\n        for (var name in object) {\n          if (Object.prototype.hasOwnProperty.call(object, name)) {\n            keys.push(name);\n          }\n        }\n        return keys;\n      };\n    }\n\n    // ChildNode.remove\n    if(!(\"remove\" in Element.prototype)){\n      Element.prototype.remove = function(){\n        if(this.parentNode) {\n          this.parentNode.removeChild(this);\n        }\n      };\n    }\n\n    var tns = function(options) {\n      options = extend({\n        container: '.slider',\n        mode: 'carousel',\n        axis: 'horizontal',\n        items: 1,\n        gutter: 0,\n        edgePadding: 0,\n        fixedWidth: false,\n        autoWidth: false,\n        viewportMax: false,\n        slideBy: 1,\n        center: false,\n        controls: true,\n        controlsPosition: 'top',\n        controlsText: ['prev', 'next'],\n        controlsContainer: false,\n        prevButton: false,\n        nextButton: false,\n        nav: true,\n        navPosition: 'top',\n        navContainer: false,\n        navAsThumbnails: false,\n        arrowKeys: false,\n        speed: 300,\n        autoplay: false,\n        autoplayPosition: 'top',\n        autoplayTimeout: 5000,\n        autoplayDirection: 'forward',\n        autoplayText: ['start', 'stop'],\n        autoplayHoverPause: false,\n        autoplayButton: false,\n        autoplayButtonOutput: true,\n        autoplayResetOnVisibility: true,\n        animateIn: 'tns-fadeIn',\n        animateOut: 'tns-fadeOut',\n        animateNormal: 'tns-normal',\n        animateDelay: false,\n        loop: true,\n        rewind: false,\n        autoHeight: false,\n        responsive: false,\n        lazyload: false,\n        lazyloadSelector: '.tns-lazy-img',\n        touch: true,\n        mouseDrag: false,\n        swipeAngle: 15,\n        nested: false,\n        preventActionWhenRunning: false,\n        preventScrollOnTouch: false,\n        freezable: true,\n        onInit: false,\n        useLocalStorage: true,\n        nonce: false\n      }, options || {});\n\n      var doc = document,\n          win = window,\n          KEYS = {\n            ENTER: 13,\n            SPACE: 32,\n            LEFT: 37,\n            RIGHT: 39\n          },\n          tnsStorage = {},\n          localStorageAccess = options.useLocalStorage;\n\n      if (localStorageAccess) {\n        // check browser version and local storage access\n        var browserInfo = navigator.userAgent;\n        var uid = new Date;\n\n        try {\n          tnsStorage = win.localStorage;\n          if (tnsStorage) {\n            tnsStorage.setItem(uid, uid);\n            localStorageAccess = tnsStorage.getItem(uid) == uid;\n            tnsStorage.removeItem(uid);\n          } else {\n            localStorageAccess = false;\n          }\n          if (!localStorageAccess) { tnsStorage = {}; }\n        } catch(e) {\n          localStorageAccess = false;\n        }\n\n        if (localStorageAccess) {\n          // remove storage when browser version changes\n          if (tnsStorage['tnsApp'] && tnsStorage['tnsApp'] !== browserInfo) {\n            ['tC', 'tPL', 'tMQ', 'tTf', 't3D', 'tTDu', 'tTDe', 'tADu', 'tADe', 'tTE', 'tAE'].forEach(function(item) { tnsStorage.removeItem(item); });\n          }\n          // update browserInfo\n          localStorage['tnsApp'] = browserInfo;\n        }\n      }\n\n      var CALC = tnsStorage['tC'] ? checkStorageValue(tnsStorage['tC']) : setLocalStorage(tnsStorage, 'tC', calc(), localStorageAccess),\n          PERCENTAGELAYOUT = tnsStorage['tPL'] ? checkStorageValue(tnsStorage['tPL']) : setLocalStorage(tnsStorage, 'tPL', percentageLayout(), localStorageAccess),\n          CSSMQ = tnsStorage['tMQ'] ? checkStorageValue(tnsStorage['tMQ']) : setLocalStorage(tnsStorage, 'tMQ', mediaquerySupport(), localStorageAccess),\n          TRANSFORM = tnsStorage['tTf'] ? checkStorageValue(tnsStorage['tTf']) : setLocalStorage(tnsStorage, 'tTf', whichProperty('transform'), localStorageAccess),\n          HAS3DTRANSFORMS = tnsStorage['t3D'] ? checkStorageValue(tnsStorage['t3D']) : setLocalStorage(tnsStorage, 't3D', has3DTransforms(TRANSFORM), localStorageAccess),\n          TRANSITIONDURATION = tnsStorage['tTDu'] ? checkStorageValue(tnsStorage['tTDu']) : setLocalStorage(tnsStorage, 'tTDu', whichProperty('transitionDuration'), localStorageAccess),\n          TRANSITIONDELAY = tnsStorage['tTDe'] ? checkStorageValue(tnsStorage['tTDe']) : setLocalStorage(tnsStorage, 'tTDe', whichProperty('transitionDelay'), localStorageAccess),\n          ANIMATIONDURATION = tnsStorage['tADu'] ? checkStorageValue(tnsStorage['tADu']) : setLocalStorage(tnsStorage, 'tADu', whichProperty('animationDuration'), localStorageAccess),\n          ANIMATIONDELAY = tnsStorage['tADe'] ? checkStorageValue(tnsStorage['tADe']) : setLocalStorage(tnsStorage, 'tADe', whichProperty('animationDelay'), localStorageAccess),\n          TRANSITIONEND = tnsStorage['tTE'] ? checkStorageValue(tnsStorage['tTE']) : setLocalStorage(tnsStorage, 'tTE', getEndProperty(TRANSITIONDURATION, 'Transition'), localStorageAccess),\n          ANIMATIONEND = tnsStorage['tAE'] ? checkStorageValue(tnsStorage['tAE']) : setLocalStorage(tnsStorage, 'tAE', getEndProperty(ANIMATIONDURATION, 'Animation'), localStorageAccess);\n\n      // get element nodes from selectors\n      var supportConsoleWarn = win.console && typeof win.console.warn === \"function\",\n          tnsList = ['container', 'controlsContainer', 'prevButton', 'nextButton', 'navContainer', 'autoplayButton'],\n          optionsElements = {};\n\n      tnsList.forEach(function(item) {\n        if (typeof options[item] === 'string') {\n          var str = options[item],\n              el = doc.querySelector(str);\n          optionsElements[item] = str;\n\n          if (el && el.nodeName) {\n            options[item] = el;\n          } else {\n            if (supportConsoleWarn) { console.warn('Can\\'t find', options[item]); }\n            return;\n          }\n        }\n      });\n\n      // make sure at least 1 slide\n      if (options.container.children.length < 1) {\n        if (supportConsoleWarn) { console.warn('No slides found in', options.container); }\n        return;\n       }\n\n      // update options\n      var responsive = options.responsive,\n          nested = options.nested,\n          carousel = options.mode === 'carousel' ? true : false;\n\n      if (responsive) {\n        // apply responsive[0] to options and remove it\n        if (0 in responsive) {\n          options = extend(options, responsive[0]);\n          delete responsive[0];\n        }\n\n        var responsiveTem = {};\n        for (var key in responsive) {\n          var val = responsive[key];\n          // update responsive\n          // from: 300: 2\n          // to:\n          //   300: {\n          //     items: 2\n          //   }\n          val = typeof val === 'number' ? {items: val} : val;\n          responsiveTem[key] = val;\n        }\n        responsive = responsiveTem;\n        responsiveTem = null;\n      }\n\n      // update options\n      function updateOptions (obj) {\n        for (var key in obj) {\n          if (!carousel) {\n            if (key === 'slideBy') { obj[key] = 'page'; }\n            if (key === 'edgePadding') { obj[key] = false; }\n            if (key === 'autoHeight') { obj[key] = false; }\n          }\n\n          // update responsive options\n          if (key === 'responsive') { updateOptions(obj[key]); }\n        }\n      }\n      if (!carousel) { updateOptions(options); }\n\n\n      // === define and set variables ===\n      if (!carousel) {\n        options.axis = 'horizontal';\n        options.slideBy = 'page';\n        options.edgePadding = false;\n\n        var animateIn = options.animateIn,\n            animateOut = options.animateOut,\n            animateDelay = options.animateDelay,\n            animateNormal = options.animateNormal;\n      }\n\n      var horizontal = options.axis === 'horizontal' ? true : false,\n          outerWrapper = doc.createElement('div'),\n          innerWrapper = doc.createElement('div'),\n          middleWrapper,\n          container = options.container,\n          containerParent = container.parentNode,\n          containerHTML = container.outerHTML,\n          slideItems = container.children,\n          slideCount = slideItems.length,\n          breakpointZone,\n          windowWidth = getWindowWidth(),\n          isOn = false;\n      if (responsive) { setBreakpointZone(); }\n      if (carousel) { container.className += ' tns-vpfix'; }\n\n      // fixedWidth: viewport > rightBoundary > indexMax\n      var autoWidth = options.autoWidth,\n          fixedWidth = getOption('fixedWidth'),\n          edgePadding = getOption('edgePadding'),\n          gutter = getOption('gutter'),\n          viewport = getViewportWidth(),\n          center = getOption('center'),\n          items = !autoWidth ? Math.floor(getOption('items')) : 1,\n          slideBy = getOption('slideBy'),\n          viewportMax = options.viewportMax || options.fixedWidthViewportWidth,\n          arrowKeys = getOption('arrowKeys'),\n          speed = getOption('speed'),\n          rewind = options.rewind,\n          loop = rewind ? false : options.loop,\n          autoHeight = getOption('autoHeight'),\n          controls = getOption('controls'),\n          controlsText = getOption('controlsText'),\n          nav = getOption('nav'),\n          touch = getOption('touch'),\n          mouseDrag = getOption('mouseDrag'),\n          autoplay = getOption('autoplay'),\n          autoplayTimeout = getOption('autoplayTimeout'),\n          autoplayText = getOption('autoplayText'),\n          autoplayHoverPause = getOption('autoplayHoverPause'),\n          autoplayResetOnVisibility = getOption('autoplayResetOnVisibility'),\n          sheet = createStyleSheet(null, getOption('nonce')),\n          lazyload = options.lazyload,\n          lazyloadSelector = options.lazyloadSelector,\n          slidePositions, // collection of slide positions\n          slideItemsOut = [],\n          cloneCount = loop ? getCloneCountForLoop() : 0,\n          slideCountNew = !carousel ? slideCount + cloneCount : slideCount + cloneCount * 2,\n          hasRightDeadZone = (fixedWidth || autoWidth) && !loop ? true : false,\n          rightBoundary = fixedWidth ? getRightBoundary() : null,\n          updateIndexBeforeTransform = (!carousel || !loop) ? true : false,\n          // transform\n          transformAttr = horizontal ? 'left' : 'top',\n          transformPrefix = '',\n          transformPostfix = '',\n          // index\n          getIndexMax = (function () {\n            if (fixedWidth) {\n              return function() { return center && !loop ? slideCount - 1 : Math.ceil(- rightBoundary / (fixedWidth + gutter)); };\n            } else if (autoWidth) {\n              return function() {\n                for (var i = 0; i < slideCountNew; i++) {\n                  if (slidePositions[i] >= - rightBoundary) { return i; }\n                }\n              };\n            } else {\n              return function() {\n                if (center && carousel && !loop) {\n                  return slideCount - 1;\n                } else {\n                  return loop || carousel ? Math.max(0, slideCountNew - Math.ceil(items)) : slideCountNew - 1;\n                }\n              };\n            }\n          })(),\n          index = getStartIndex(getOption('startIndex')),\n          indexCached = index,\n          displayIndex = getCurrentSlide(),\n          indexMin = 0,\n          indexMax = !autoWidth ? getIndexMax() : null,\n          // resize\n          resizeTimer,\n          preventActionWhenRunning = options.preventActionWhenRunning,\n          swipeAngle = options.swipeAngle,\n          moveDirectionExpected = swipeAngle ? '?' : true,\n          running = false,\n          onInit = options.onInit,\n          events = new Events(),\n          // id, class\n          newContainerClasses = ' tns-slider tns-' + options.mode,\n          slideId = container.id || getSlideId(),\n          disable = getOption('disable'),\n          disabled = false,\n          freezable = options.freezable,\n          freeze = freezable && !autoWidth ? getFreeze() : false,\n          frozen = false,\n          controlsEvents = {\n            'click': onControlsClick,\n            'keydown': onControlsKeydown\n          },\n          navEvents = {\n            'click': onNavClick,\n            'keydown': onNavKeydown\n          },\n          hoverEvents = {\n            'mouseover': mouseoverPause,\n            'mouseout': mouseoutRestart\n          },\n          visibilityEvent = {'visibilitychange': onVisibilityChange},\n          docmentKeydownEvent = {'keydown': onDocumentKeydown},\n          touchEvents = {\n            'touchstart': onPanStart,\n            'touchmove': onPanMove,\n            'touchend': onPanEnd,\n            'touchcancel': onPanEnd\n          }, dragEvents = {\n            'mousedown': onPanStart,\n            'mousemove': onPanMove,\n            'mouseup': onPanEnd,\n            'mouseleave': onPanEnd\n          },\n          hasControls = hasOption('controls'),\n          hasNav = hasOption('nav'),\n          navAsThumbnails = autoWidth ? true : options.navAsThumbnails,\n          hasAutoplay = hasOption('autoplay'),\n          hasTouch = hasOption('touch'),\n          hasMouseDrag = hasOption('mouseDrag'),\n          slideActiveClass = 'tns-slide-active',\n          slideClonedClass = 'tns-slide-cloned',\n          imgCompleteClass = 'tns-complete',\n          imgEvents = {\n            'load': onImgLoaded,\n            'error': onImgFailed\n          },\n          imgsComplete,\n          liveregionCurrent,\n          preventScroll = options.preventScrollOnTouch === 'force' ? true : false;\n\n      // controls\n      if (hasControls) {\n        var controlsContainer = options.controlsContainer,\n            controlsContainerHTML = options.controlsContainer ? options.controlsContainer.outerHTML : '',\n            prevButton = options.prevButton,\n            nextButton = options.nextButton,\n            prevButtonHTML = options.prevButton ? options.prevButton.outerHTML : '',\n            nextButtonHTML = options.nextButton ? options.nextButton.outerHTML : '',\n            prevIsButton,\n            nextIsButton;\n      }\n\n      // nav\n      if (hasNav) {\n        var navContainer = options.navContainer,\n            navContainerHTML = options.navContainer ? options.navContainer.outerHTML : '',\n            navItems,\n            pages = autoWidth ? slideCount : getPages(),\n            pagesCached = 0,\n            navClicked = -1,\n            navCurrentIndex = getCurrentNavIndex(),\n            navCurrentIndexCached = navCurrentIndex,\n            navActiveClass = 'tns-nav-active',\n            navStr = 'Carousel Page ',\n            navStrCurrent = ' (Current Slide)';\n      }\n\n      // autoplay\n      if (hasAutoplay) {\n        var autoplayDirection = options.autoplayDirection === 'forward' ? 1 : -1,\n            autoplayButton = options.autoplayButton,\n            autoplayButtonHTML = options.autoplayButton ? options.autoplayButton.outerHTML : '',\n            autoplayHtmlStrings = ['<span class=\\'tns-visually-hidden\\'>', ' animation</span>'],\n            autoplayTimer,\n            animating,\n            autoplayHoverPaused,\n            autoplayUserPaused,\n            autoplayVisibilityPaused;\n      }\n\n      if (hasTouch || hasMouseDrag) {\n        var initPosition = {},\n            lastPosition = {},\n            translateInit,\n            disX,\n            disY,\n            panStart = false,\n            rafIndex,\n            getDist = horizontal ?\n              function(a, b) { return a.x - b.x; } :\n              function(a, b) { return a.y - b.y; };\n      }\n\n      // disable slider when slidecount <= items\n      if (!autoWidth) { resetVariblesWhenDisable(disable || freeze); }\n\n      if (TRANSFORM) {\n        transformAttr = TRANSFORM;\n        transformPrefix = 'translate';\n\n        if (HAS3DTRANSFORMS) {\n          transformPrefix += horizontal ? '3d(' : '3d(0px, ';\n          transformPostfix = horizontal ? ', 0px, 0px)' : ', 0px)';\n        } else {\n          transformPrefix += horizontal ? 'X(' : 'Y(';\n          transformPostfix = ')';\n        }\n\n      }\n\n      if (carousel) { container.className = container.className.replace('tns-vpfix', ''); }\n      initStructure();\n      initSheet();\n      initSliderTransform();\n\n      // === COMMON FUNCTIONS === //\n      function resetVariblesWhenDisable (condition) {\n        if (condition) {\n          controls = nav = touch = mouseDrag = arrowKeys = autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;\n        }\n      }\n\n      function getCurrentSlide () {\n        var tem = carousel ? index - cloneCount : index;\n        while (tem < 0) { tem += slideCount; }\n        return tem%slideCount + 1;\n      }\n\n      function getStartIndex (ind) {\n        ind = ind ? Math.max(0, Math.min(loop ? slideCount - 1 : slideCount - items, ind)) : 0;\n        return carousel ? ind + cloneCount : ind;\n      }\n\n      function getAbsIndex (i) {\n        if (i == null) { i = index; }\n\n        if (carousel) { i -= cloneCount; }\n        while (i < 0) { i += slideCount; }\n\n        return Math.floor(i%slideCount);\n      }\n\n      function getCurrentNavIndex () {\n        var absIndex = getAbsIndex(),\n            result;\n\n        result = navAsThumbnails ? absIndex :\n          fixedWidth || autoWidth ? Math.ceil((absIndex + 1) * pages / slideCount - 1) :\n              Math.floor(absIndex / items);\n\n        // set active nav to the last one when reaches the right edge\n        if (!loop && carousel && index === indexMax) { result = pages - 1; }\n\n        return result;\n      }\n\n      function getItemsMax () {\n        // fixedWidth or autoWidth while viewportMax is not available\n        if (autoWidth || (fixedWidth && !viewportMax)) {\n          return slideCount - 1;\n        // most cases\n        } else {\n          var str = fixedWidth ? 'fixedWidth' : 'items',\n              arr = [];\n\n          if (fixedWidth || options[str] < slideCount) { arr.push(options[str]); }\n\n          if (responsive) {\n            for (var bp in responsive) {\n              var tem = responsive[bp][str];\n              if (tem && (fixedWidth || tem < slideCount)) { arr.push(tem); }\n            }\n          }\n\n          if (!arr.length) { arr.push(0); }\n\n          return Math.ceil(fixedWidth ? viewportMax / Math.min.apply(null, arr) : Math.max.apply(null, arr));\n        }\n      }\n\n      function getCloneCountForLoop () {\n        var itemsMax = getItemsMax(),\n            result = carousel ? Math.ceil((itemsMax * 5 - slideCount)/2) : (itemsMax * 4 - slideCount);\n        result = Math.max(itemsMax, result);\n\n        return hasOption('edgePadding') ? result + 1 : result;\n      }\n\n      function getWindowWidth () {\n        return win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth;\n      }\n\n      function getInsertPosition (pos) {\n        return pos === 'top' ? 'afterbegin' : 'beforeend';\n      }\n\n      function getClientWidth (el) {\n        if (el == null) { return; }\n        var div = doc.createElement('div'), rect, width;\n        el.appendChild(div);\n        rect = div.getBoundingClientRect();\n        width = rect.right - rect.left;\n        div.remove();\n        if (width) {\n          return width;\n        } else if (el.parentNode.parentNode !== null) {\n          getClientWidth(el.parentNode);\n        } else {\n          return;\n        }\n      }\n\n      function getViewportWidth () {\n        var gap = edgePadding ? edgePadding * 2 - gutter : 0;\n        return getClientWidth(containerParent) - gap;\n      }\n\n      function hasOption (item) {\n        if (options[item]) {\n          return true;\n        } else {\n          if (responsive) {\n            for (var bp in responsive) {\n              if (responsive[bp][item]) { return true; }\n            }\n          }\n          return false;\n        }\n      }\n\n      // get option:\n      // fixed width: viewport, fixedWidth, gutter => items\n      // others: window width => all variables\n      // all: items => slideBy\n      function getOption (item, ww) {\n        if (ww == null) { ww = windowWidth; }\n\n        if (item === 'items' && fixedWidth) {\n          return Math.floor((viewport + gutter) / (fixedWidth + gutter)) || 1;\n\n        } else {\n          var result = options[item];\n\n          if (responsive) {\n            for (var bp in responsive) {\n              // bp: convert string to number\n              if (ww >= parseInt(bp)) {\n                if (item in responsive[bp]) { result = responsive[bp][item]; }\n              }\n            }\n          }\n\n          if (item === 'slideBy' && result === 'page') { result = getOption('items'); }\n          if (!carousel && (item === 'slideBy' || item === 'items')) { result = Math.floor(result); }\n\n          return result;\n        }\n      }\n\n      function getSlideMarginLeft (i) {\n        return CALC ?\n          CALC + '(' + i * 100 + '% / ' + slideCountNew + ')' :\n          i * 100 / slideCountNew + '%';\n      }\n\n      function getInnerWrapperStyles (edgePaddingTem, gutterTem, fixedWidthTem, speedTem, autoHeightBP) {\n        var str = '';\n\n        if (edgePaddingTem !== undefined) {\n          var gap = edgePaddingTem;\n          if (gutterTem) { gap -= gutterTem; }\n          str = horizontal ?\n            'margin: 0 ' + gap + 'px 0 ' + edgePaddingTem + 'px;' :\n            'margin: ' + edgePaddingTem + 'px 0 ' + gap + 'px 0;';\n        } else if (gutterTem && !fixedWidthTem) {\n          var gutterTemUnit = '-' + gutterTem + 'px',\n              dir = horizontal ? gutterTemUnit + ' 0 0' : '0 ' + gutterTemUnit + ' 0';\n          str = 'margin: 0 ' + dir + ';';\n        }\n\n        if (!carousel && autoHeightBP && TRANSITIONDURATION && speedTem) { str += getTransitionDurationStyle(speedTem); }\n        return str;\n      }\n\n      function getContainerWidth (fixedWidthTem, gutterTem, itemsTem) {\n        if (fixedWidthTem) {\n          return (fixedWidthTem + gutterTem) * slideCountNew + 'px';\n        } else {\n          return CALC ?\n            CALC + '(' + slideCountNew * 100 + '% / ' + itemsTem + ')' :\n            slideCountNew * 100 / itemsTem + '%';\n        }\n      }\n\n      function getSlideWidthStyle (fixedWidthTem, gutterTem, itemsTem) {\n        var width;\n\n        if (fixedWidthTem) {\n          width = (fixedWidthTem + gutterTem) + 'px';\n        } else {\n          if (!carousel) { itemsTem = Math.floor(itemsTem); }\n          var dividend = carousel ? slideCountNew : itemsTem;\n          width = CALC ?\n            CALC + '(100% / ' + dividend + ')' :\n            100 / dividend + '%';\n        }\n\n        width = 'width:' + width;\n\n        // inner slider: overwrite outer slider styles\n        return nested !== 'inner' ? width + ';' : width + ' !important;';\n      }\n\n      function getSlideGutterStyle (gutterTem) {\n        var str = '';\n\n        // gutter maybe interger || 0\n        // so can't use 'if (gutter)'\n        if (gutterTem !== false) {\n          var prop = horizontal ? 'padding-' : 'margin-',\n              dir = horizontal ? 'right' : 'bottom';\n          str = prop +  dir + ': ' + gutterTem + 'px;';\n        }\n\n        return str;\n      }\n\n      function getCSSPrefix (name, num) {\n        var prefix = name.substring(0, name.length - num).toLowerCase();\n        if (prefix) { prefix = '-' + prefix + '-'; }\n\n        return prefix;\n      }\n\n      function getTransitionDurationStyle (speed) {\n        return getCSSPrefix(TRANSITIONDURATION, 18) + 'transition-duration:' + speed / 1000 + 's;';\n      }\n\n      function getAnimationDurationStyle (speed) {\n        return getCSSPrefix(ANIMATIONDURATION, 17) + 'animation-duration:' + speed / 1000 + 's;';\n      }\n\n      function initStructure () {\n        var classOuter = 'tns-outer',\n            classInner = 'tns-inner',\n            hasGutter = hasOption('gutter');\n\n        outerWrapper.className = classOuter;\n        innerWrapper.className = classInner;\n        outerWrapper.id = slideId + '-ow';\n        innerWrapper.id = slideId + '-iw';\n\n        // set container properties\n        if (container.id === '') { container.id = slideId; }\n        newContainerClasses += PERCENTAGELAYOUT || autoWidth ? ' tns-subpixel' : ' tns-no-subpixel';\n        newContainerClasses += CALC ? ' tns-calc' : ' tns-no-calc';\n        if (autoWidth) { newContainerClasses += ' tns-autowidth'; }\n        newContainerClasses += ' tns-' + options.axis;\n        container.className += newContainerClasses;\n\n        // add constrain layer for carousel\n        if (carousel) {\n          middleWrapper = doc.createElement('div');\n          middleWrapper.id = slideId + '-mw';\n          middleWrapper.className = 'tns-ovh';\n\n          outerWrapper.appendChild(middleWrapper);\n          middleWrapper.appendChild(innerWrapper);\n        } else {\n          outerWrapper.appendChild(innerWrapper);\n        }\n\n        if (autoHeight) {\n          var wp = middleWrapper ? middleWrapper : innerWrapper;\n          wp.className += ' tns-ah';\n        }\n\n        containerParent.insertBefore(outerWrapper, container);\n        innerWrapper.appendChild(container);\n\n        // add id, class, aria attributes\n        // before clone slides\n        forEach(slideItems, function(item, i) {\n          addClass(item, 'tns-item');\n          if (!item.id) { item.id = slideId + '-item' + i; }\n          if (!carousel && animateNormal) { addClass(item, animateNormal); }\n          setAttrs(item, {\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n          });\n        });\n\n        // ## clone slides\n        // carousel: n + slides + n\n        // gallery:      slides + n\n        if (cloneCount) {\n          var fragmentBefore = doc.createDocumentFragment(),\n              fragmentAfter = doc.createDocumentFragment();\n\n          for (var j = cloneCount; j--;) {\n            var num = j%slideCount,\n                cloneFirst = slideItems[num].cloneNode(true);\n            addClass(cloneFirst, slideClonedClass);\n            removeAttrs(cloneFirst, 'id');\n            fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);\n\n            if (carousel) {\n              var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);\n              addClass(cloneLast, slideClonedClass);\n              removeAttrs(cloneLast, 'id');\n              fragmentBefore.appendChild(cloneLast);\n            }\n          }\n\n          container.insertBefore(fragmentBefore, container.firstChild);\n          container.appendChild(fragmentAfter);\n          slideItems = container.children;\n        }\n\n      }\n\n      function initSliderTransform () {\n        // ## images loaded/failed\n        if (hasOption('autoHeight') || autoWidth || !horizontal) {\n          var imgs = container.querySelectorAll('img');\n\n          // add img load event listener\n          forEach(imgs, function(img) {\n            var src = img.src;\n\n            if (!lazyload) {\n              // not data img\n              if (src && src.indexOf('data:image') < 0) {\n                img.src = '';\n                addEvents(img, imgEvents);\n                addClass(img, 'loading');\n\n                img.src = src;\n              // data img\n              } else {\n                imgLoaded(img);\n              }\n            }\n          });\n\n          // set imgsComplete\n          raf(function(){ imgsLoadedCheck(arrayFromNodeList(imgs), function() { imgsComplete = true; }); });\n\n          // reset imgs for auto height: check visible imgs only\n          if (hasOption('autoHeight')) { imgs = getImageArray(index, Math.min(index + items - 1, slideCountNew - 1)); }\n\n          lazyload ? initSliderTransformStyleCheck() : raf(function(){ imgsLoadedCheck(arrayFromNodeList(imgs), initSliderTransformStyleCheck); });\n\n        } else {\n          // set container transform property\n          if (carousel) { doContainerTransformSilent(); }\n\n          // update slider tools and events\n          initTools();\n          initEvents();\n        }\n      }\n\n      function initSliderTransformStyleCheck () {\n        if (autoWidth && slideCount > 1) {\n          // check styles application\n          var num = loop ? index : slideCount - 1;\n\n          (function stylesApplicationCheck() {\n            var left = slideItems[num].getBoundingClientRect().left;\n            var right = slideItems[num - 1].getBoundingClientRect().right;\n\n            (Math.abs(left - right) <= 1) ?\n              initSliderTransformCore() :\n              setTimeout(function(){ stylesApplicationCheck(); }, 16);\n          })();\n\n        } else {\n          initSliderTransformCore();\n        }\n      }\n\n\n      function initSliderTransformCore () {\n        // run Fn()s which are rely on image loading\n        if (!horizontal || autoWidth) {\n          setSlidePositions();\n\n          if (autoWidth) {\n            rightBoundary = getRightBoundary();\n            if (freezable) { freeze = getFreeze(); }\n            indexMax = getIndexMax(); // <= slidePositions, rightBoundary <=\n            resetVariblesWhenDisable(disable || freeze);\n          } else {\n            updateContentWrapperHeight();\n          }\n        }\n\n        // set container transform property\n        if (carousel) { doContainerTransformSilent(); }\n\n        // update slider tools and events\n        initTools();\n        initEvents();\n      }\n\n      function initSheet () {\n        // gallery:\n        // set animation classes and left value for gallery slider\n        if (!carousel) {\n          for (var i = index, l = index + Math.min(slideCount, items); i < l; i++) {\n            var item = slideItems[i];\n            item.style.left = (i - index) * 100 / items + '%';\n            addClass(item, animateIn);\n            removeClass(item, animateNormal);\n          }\n        }\n\n        // #### LAYOUT\n\n        // ## INLINE-BLOCK VS FLOAT\n\n        // ## PercentageLayout:\n        // slides: inline-block\n        // remove blank space between slides by set font-size: 0\n\n        // ## Non PercentageLayout:\n        // slides: float\n        //         margin-right: -100%\n        //         margin-left: ~\n\n        // Resource: https://docs.google.com/spreadsheets/d/147up245wwTXeQYve3BRSAD4oVcvQmuGsFteJOeA5xNQ/edit?usp=sharing\n        if (horizontal) {\n          if (PERCENTAGELAYOUT || autoWidth) {\n            addCSSRule(sheet, '#' + slideId + ' > .tns-item', 'font-size:' + win.getComputedStyle(slideItems[0]).fontSize + ';', getCssRulesLength(sheet));\n            addCSSRule(sheet, '#' + slideId, 'font-size:0;', getCssRulesLength(sheet));\n          } else if (carousel) {\n            forEach(slideItems, function (slide, i) {\n              slide.style.marginLeft = getSlideMarginLeft(i);\n            });\n          }\n        }\n\n\n        // ## BASIC STYLES\n        if (CSSMQ) {\n          // middle wrapper style\n          if (TRANSITIONDURATION) {\n            var str = middleWrapper && options.autoHeight ? getTransitionDurationStyle(options.speed) : '';\n            addCSSRule(sheet, '#' + slideId + '-mw', str, getCssRulesLength(sheet));\n          }\n\n          // inner wrapper styles\n          str = getInnerWrapperStyles(options.edgePadding, options.gutter, options.fixedWidth, options.speed, options.autoHeight);\n          addCSSRule(sheet, '#' + slideId + '-iw', str, getCssRulesLength(sheet));\n\n          // container styles\n          if (carousel) {\n            str = horizontal && !autoWidth ? 'width:' + getContainerWidth(options.fixedWidth, options.gutter, options.items) + ';' : '';\n            if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }\n            addCSSRule(sheet, '#' + slideId, str, getCssRulesLength(sheet));\n          }\n\n          // slide styles\n          str = horizontal && !autoWidth ? getSlideWidthStyle(options.fixedWidth, options.gutter, options.items) : '';\n          if (options.gutter) { str += getSlideGutterStyle(options.gutter); }\n          // set gallery items transition-duration\n          if (!carousel) {\n            if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }\n            if (ANIMATIONDURATION) { str += getAnimationDurationStyle(speed); }\n          }\n          if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }\n\n        // non CSS mediaqueries: IE8\n        // ## update inner wrapper, container, slides if needed\n        // set inline styles for inner wrapper & container\n        // insert stylesheet (one line) for slides only (since slides are many)\n        } else {\n          // middle wrapper styles\n          update_carousel_transition_duration();\n\n          // inner wrapper styles\n          innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, autoHeight);\n\n          // container styles\n          if (carousel && horizontal && !autoWidth) {\n            container.style.width = getContainerWidth(fixedWidth, gutter, items);\n          }\n\n          // slide styles\n          var str = horizontal && !autoWidth ? getSlideWidthStyle(fixedWidth, gutter, items) : '';\n          if (gutter) { str += getSlideGutterStyle(gutter); }\n\n          // append to the last line\n          if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }\n        }\n\n        // ## MEDIAQUERIES\n        if (responsive && CSSMQ) {\n          for (var bp in responsive) {\n            // bp: convert string to number\n            bp = parseInt(bp);\n\n            var opts = responsive[bp],\n                str = '',\n                middleWrapperStr = '',\n                innerWrapperStr = '',\n                containerStr = '',\n                slideStr = '',\n                itemsBP = !autoWidth ? getOption('items', bp) : null,\n                fixedWidthBP = getOption('fixedWidth', bp),\n                speedBP = getOption('speed', bp),\n                edgePaddingBP = getOption('edgePadding', bp),\n                autoHeightBP = getOption('autoHeight', bp),\n                gutterBP = getOption('gutter', bp);\n\n            // middle wrapper string\n            if (TRANSITIONDURATION && middleWrapper && getOption('autoHeight', bp) && 'speed' in opts) {\n              middleWrapperStr = '#' + slideId + '-mw{' + getTransitionDurationStyle(speedBP) + '}';\n            }\n\n            // inner wrapper string\n            if ('edgePadding' in opts || 'gutter' in opts) {\n              innerWrapperStr = '#' + slideId + '-iw{' + getInnerWrapperStyles(edgePaddingBP, gutterBP, fixedWidthBP, speedBP, autoHeightBP) + '}';\n            }\n\n            // container string\n            if (carousel && horizontal && !autoWidth && ('fixedWidth' in opts || 'items' in opts || (fixedWidth && 'gutter' in opts))) {\n              containerStr = 'width:' + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + ';';\n            }\n            if (TRANSITIONDURATION && 'speed' in opts) {\n              containerStr += getTransitionDurationStyle(speedBP);\n            }\n            if (containerStr) {\n              containerStr = '#' + slideId + '{' + containerStr + '}';\n            }\n\n            // slide string\n            if ('fixedWidth' in opts || (fixedWidth && 'gutter' in opts) || !carousel && 'items' in opts) {\n              slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);\n            }\n            if ('gutter' in opts) {\n              slideStr += getSlideGutterStyle(gutterBP);\n            }\n            // set gallery items transition-duration\n            if (!carousel && 'speed' in opts) {\n              if (TRANSITIONDURATION) { slideStr += getTransitionDurationStyle(speedBP); }\n              if (ANIMATIONDURATION) { slideStr += getAnimationDurationStyle(speedBP); }\n            }\n            if (slideStr) { slideStr = '#' + slideId + ' > .tns-item{' + slideStr + '}'; }\n\n            // add up\n            str = middleWrapperStr + innerWrapperStr + containerStr + slideStr;\n\n            if (str) {\n              sheet.insertRule('@media (min-width: ' + bp / 16 + 'em) {' + str + '}', sheet.cssRules.length);\n            }\n          }\n        }\n      }\n\n      function initTools () {\n        // == slides ==\n        updateSlideStatus();\n\n        // == live region ==\n        outerWrapper.insertAdjacentHTML('afterbegin', '<div class=\"tns-liveregion tns-visually-hidden\" aria-live=\"polite\" aria-atomic=\"true\">slide <span class=\"current\">' + getLiveRegionStr() + '</span>  of ' + slideCount + '</div>');\n        liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current');\n\n        // == autoplayInit ==\n        if (hasAutoplay) {\n          var txt = autoplay ? 'stop' : 'start';\n          if (autoplayButton) {\n            setAttrs(autoplayButton, {'data-action': txt});\n          } else if (options.autoplayButtonOutput) {\n            outerWrapper.insertAdjacentHTML(getInsertPosition(options.autoplayPosition), '<button type=\"button\" data-action=\"' + txt + '\">' + autoplayHtmlStrings[0] + txt + autoplayHtmlStrings[1] + autoplayText[0] + '</button>');\n            autoplayButton = outerWrapper.querySelector('[data-action]');\n          }\n\n          // add event\n          if (autoplayButton) {\n            addEvents(autoplayButton, {'click': toggleAutoplay});\n          }\n\n          if (autoplay) {\n            startAutoplay();\n            if (autoplayHoverPause) { addEvents(container, hoverEvents); }\n            if (autoplayResetOnVisibility) { addEvents(container, visibilityEvent); }\n          }\n        }\n\n        // == navInit ==\n        if (hasNav) {\n          var initIndex = !carousel ? 0 : cloneCount;\n          // customized nav\n          // will not hide the navs in case they're thumbnails\n          if (navContainer) {\n            setAttrs(navContainer, {'aria-label': 'Carousel Pagination'});\n            navItems = navContainer.children;\n            forEach(navItems, function(item, i) {\n              setAttrs(item, {\n                'data-nav': i,\n                'tabindex': '-1',\n                'aria-label': navStr + (i + 1),\n                'aria-controls': slideId,\n              });\n            });\n\n          // generated nav\n          } else {\n            var navHtml = '',\n                hiddenStr = navAsThumbnails ? '' : 'style=\"display:none\"';\n            for (var i = 0; i < slideCount; i++) {\n              // hide nav items by default\n              navHtml += '<button type=\"button\" data-nav=\"' + i +'\" tabindex=\"-1\" aria-controls=\"' + slideId + '\" ' + hiddenStr + ' aria-label=\"' + navStr + (i + 1) +'\"></button>';\n            }\n            navHtml = '<div class=\"tns-nav\" aria-label=\"Carousel Pagination\">' + navHtml + '</div>';\n            outerWrapper.insertAdjacentHTML(getInsertPosition(options.navPosition), navHtml);\n\n            navContainer = outerWrapper.querySelector('.tns-nav');\n            navItems = navContainer.children;\n          }\n\n          updateNavVisibility();\n\n          // add transition\n          if (TRANSITIONDURATION) {\n            var prefix = TRANSITIONDURATION.substring(0, TRANSITIONDURATION.length - 18).toLowerCase(),\n                str = 'transition: all ' + speed / 1000 + 's';\n\n            if (prefix) {\n              str = '-' + prefix + '-' + str;\n            }\n\n            addCSSRule(sheet, '[aria-controls^=' + slideId + '-item]', str, getCssRulesLength(sheet));\n          }\n\n          setAttrs(navItems[navCurrentIndex], {'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent});\n          removeAttrs(navItems[navCurrentIndex], 'tabindex');\n          addClass(navItems[navCurrentIndex], navActiveClass);\n\n          // add events\n          addEvents(navContainer, navEvents);\n        }\n\n\n\n        // == controlsInit ==\n        if (hasControls) {\n          if (!controlsContainer && (!prevButton || !nextButton)) {\n            outerWrapper.insertAdjacentHTML(getInsertPosition(options.controlsPosition), '<div class=\"tns-controls\" aria-label=\"Carousel Navigation\" tabindex=\"0\"><button type=\"button\" data-controls=\"prev\" tabindex=\"-1\" aria-controls=\"' + slideId +'\">' + controlsText[0] + '</button><button type=\"button\" data-controls=\"next\" tabindex=\"-1\" aria-controls=\"' + slideId +'\">' + controlsText[1] + '</button></div>');\n\n            controlsContainer = outerWrapper.querySelector('.tns-controls');\n          }\n\n          if (!prevButton || !nextButton) {\n            prevButton = controlsContainer.children[0];\n            nextButton = controlsContainer.children[1];\n          }\n\n          if (options.controlsContainer) {\n            setAttrs(controlsContainer, {\n              'aria-label': 'Carousel Navigation',\n              'tabindex': '0'\n            });\n          }\n\n          if (options.controlsContainer || (options.prevButton && options.nextButton)) {\n            setAttrs([prevButton, nextButton], {\n              'aria-controls': slideId,\n              'tabindex': '-1',\n            });\n          }\n\n          if (options.controlsContainer || (options.prevButton && options.nextButton)) {\n            setAttrs(prevButton, {'data-controls' : 'prev'});\n            setAttrs(nextButton, {'data-controls' : 'next'});\n          }\n\n          prevIsButton = isButton(prevButton);\n          nextIsButton = isButton(nextButton);\n\n          updateControlsStatus();\n\n          // add events\n          if (controlsContainer) {\n            addEvents(controlsContainer, controlsEvents);\n          } else {\n            addEvents(prevButton, controlsEvents);\n            addEvents(nextButton, controlsEvents);\n          }\n        }\n\n        // hide tools if needed\n        disableUI();\n      }\n\n      function initEvents () {\n        // add events\n        if (carousel && TRANSITIONEND) {\n          var eve = {};\n          eve[TRANSITIONEND] = onTransitionEnd;\n          addEvents(container, eve);\n        }\n\n        if (touch) { addEvents(container, touchEvents, options.preventScrollOnTouch); }\n        if (mouseDrag) { addEvents(container, dragEvents); }\n        if (arrowKeys) { addEvents(doc, docmentKeydownEvent); }\n\n        if (nested === 'inner') {\n          events.on('outerResized', function () {\n            resizeTasks();\n            events.emit('innerLoaded', info());\n          });\n        } else if (responsive || fixedWidth || autoWidth || autoHeight || !horizontal) {\n          addEvents(win, {'resize': onResize});\n        }\n\n        if (autoHeight) {\n          if (nested === 'outer') {\n            events.on('innerLoaded', doAutoHeight);\n          } else if (!disable) { doAutoHeight(); }\n        }\n\n        doLazyLoad();\n        if (disable) { disableSlider(); } else if (freeze) { freezeSlider(); }\n\n        events.on('indexChanged', additionalUpdates);\n        if (nested === 'inner') { events.emit('innerLoaded', info()); }\n        if (typeof onInit === 'function') { onInit(info()); }\n        isOn = true;\n      }\n\n      function destroy () {\n        // sheet\n        sheet.disabled = true;\n        if (sheet.ownerNode) { sheet.ownerNode.remove(); }\n\n        // remove win event listeners\n        removeEvents(win, {'resize': onResize});\n\n        // arrowKeys, controls, nav\n        if (arrowKeys) { removeEvents(doc, docmentKeydownEvent); }\n        if (controlsContainer) { removeEvents(controlsContainer, controlsEvents); }\n        if (navContainer) { removeEvents(navContainer, navEvents); }\n\n        // autoplay\n        removeEvents(container, hoverEvents);\n        removeEvents(container, visibilityEvent);\n        if (autoplayButton) { removeEvents(autoplayButton, {'click': toggleAutoplay}); }\n        if (autoplay) { clearInterval(autoplayTimer); }\n\n        // container\n        if (carousel && TRANSITIONEND) {\n          var eve = {};\n          eve[TRANSITIONEND] = onTransitionEnd;\n          removeEvents(container, eve);\n        }\n        if (touch) { removeEvents(container, touchEvents); }\n        if (mouseDrag) { removeEvents(container, dragEvents); }\n\n        // cache Object values in options && reset HTML\n        var htmlList = [containerHTML, controlsContainerHTML, prevButtonHTML, nextButtonHTML, navContainerHTML, autoplayButtonHTML];\n\n        tnsList.forEach(function(item, i) {\n          var el = item === 'container' ? outerWrapper : options[item];\n\n          if (typeof el === 'object' && el) {\n            var prevEl = el.previousElementSibling ? el.previousElementSibling : false,\n                parentEl = el.parentNode;\n            el.outerHTML = htmlList[i];\n            options[item] = prevEl ? prevEl.nextElementSibling : parentEl.firstElementChild;\n          }\n        });\n\n\n        // reset variables\n        tnsList = animateIn = animateOut = animateDelay = animateNormal = horizontal = outerWrapper = innerWrapper = container = containerParent = containerHTML = slideItems = slideCount = breakpointZone = windowWidth = autoWidth = fixedWidth = edgePadding = gutter = viewport = items = slideBy = viewportMax = arrowKeys = speed = rewind = loop = autoHeight = sheet = lazyload = slidePositions = slideItemsOut = cloneCount = slideCountNew = hasRightDeadZone = rightBoundary = updateIndexBeforeTransform = transformAttr = transformPrefix = transformPostfix = getIndexMax = index = indexCached = indexMin = indexMax = resizeTimer = swipeAngle = moveDirectionExpected = running = onInit = events = newContainerClasses = slideId = disable = disabled = freezable = freeze = frozen = controlsEvents = navEvents = hoverEvents = visibilityEvent = docmentKeydownEvent = touchEvents = dragEvents = hasControls = hasNav = navAsThumbnails = hasAutoplay = hasTouch = hasMouseDrag = slideActiveClass = imgCompleteClass = imgEvents = imgsComplete = controls = controlsText = controlsContainer = controlsContainerHTML = prevButton = nextButton = prevIsButton = nextIsButton = nav = navContainer = navContainerHTML = navItems = pages = pagesCached = navClicked = navCurrentIndex = navCurrentIndexCached = navActiveClass = navStr = navStrCurrent = autoplay = autoplayTimeout = autoplayDirection = autoplayText = autoplayHoverPause = autoplayButton = autoplayButtonHTML = autoplayResetOnVisibility = autoplayHtmlStrings = autoplayTimer = animating = autoplayHoverPaused = autoplayUserPaused = autoplayVisibilityPaused = initPosition = lastPosition = translateInit = disX = disY = panStart = rafIndex = getDist = touch = mouseDrag = null;\n        // check variables\n        // [animateIn, animateOut, animateDelay, animateNormal, horizontal, outerWrapper, innerWrapper, container, containerParent, containerHTML, slideItems, slideCount, breakpointZone, windowWidth, autoWidth, fixedWidth, edgePadding, gutter, viewport, items, slideBy, viewportMax, arrowKeys, speed, rewind, loop, autoHeight, sheet, lazyload, slidePositions, slideItemsOut, cloneCount, slideCountNew, hasRightDeadZone, rightBoundary, updateIndexBeforeTransform, transformAttr, transformPrefix, transformPostfix, getIndexMax, index, indexCached, indexMin, indexMax, resizeTimer, swipeAngle, moveDirectionExpected, running, onInit, events, newContainerClasses, slideId, disable, disabled, freezable, freeze, frozen, controlsEvents, navEvents, hoverEvents, visibilityEvent, docmentKeydownEvent, touchEvents, dragEvents, hasControls, hasNav, navAsThumbnails, hasAutoplay, hasTouch, hasMouseDrag, slideActiveClass, imgCompleteClass, imgEvents, imgsComplete, controls, controlsText, controlsContainer, controlsContainerHTML, prevButton, nextButton, prevIsButton, nextIsButton, nav, navContainer, navContainerHTML, navItems, pages, pagesCached, navClicked, navCurrentIndex, navCurrentIndexCached, navActiveClass, navStr, navStrCurrent, autoplay, autoplayTimeout, autoplayDirection, autoplayText, autoplayHoverPause, autoplayButton, autoplayButtonHTML, autoplayResetOnVisibility, autoplayHtmlStrings, autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused, initPosition, lastPosition, translateInit, disX, disY, panStart, rafIndex, getDist, touch, mouseDrag ].forEach(function(item) { if (item !== null) { console.log(item); } });\n\n        for (var a in this) {\n          if (a !== 'rebuild') { this[a] = null; }\n        }\n        isOn = false;\n      }\n\n    // === ON RESIZE ===\n      // responsive || fixedWidth || autoWidth || !horizontal\n      function onResize (e) {\n        raf(function(){ resizeTasks(getEvent(e)); });\n      }\n\n      function resizeTasks (e) {\n        if (!isOn) { return; }\n        if (nested === 'outer') { events.emit('outerResized', info(e)); }\n        windowWidth = getWindowWidth();\n        var bpChanged,\n            breakpointZoneTem = breakpointZone,\n            needContainerTransform = false;\n\n        if (responsive) {\n          setBreakpointZone();\n          bpChanged = breakpointZoneTem !== breakpointZone;\n          // if (hasRightDeadZone) { needContainerTransform = true; } // *?\n          if (bpChanged) { events.emit('newBreakpointStart', info(e)); }\n        }\n\n        var indChanged,\n            itemsChanged,\n            itemsTem = items,\n            disableTem = disable,\n            freezeTem = freeze,\n            arrowKeysTem = arrowKeys,\n            controlsTem = controls,\n            navTem = nav,\n            touchTem = touch,\n            mouseDragTem = mouseDrag,\n            autoplayTem = autoplay,\n            autoplayHoverPauseTem = autoplayHoverPause,\n            autoplayResetOnVisibilityTem = autoplayResetOnVisibility,\n            indexTem = index;\n\n        if (bpChanged) {\n          var fixedWidthTem = fixedWidth,\n              autoHeightTem = autoHeight,\n              controlsTextTem = controlsText,\n              centerTem = center,\n              autoplayTextTem = autoplayText;\n\n          if (!CSSMQ) {\n            var gutterTem = gutter,\n                edgePaddingTem = edgePadding;\n          }\n        }\n\n        // get option:\n        // fixed width: viewport, fixedWidth, gutter => items\n        // others: window width => all variables\n        // all: items => slideBy\n        arrowKeys = getOption('arrowKeys');\n        controls = getOption('controls');\n        nav = getOption('nav');\n        touch = getOption('touch');\n        center = getOption('center');\n        mouseDrag = getOption('mouseDrag');\n        autoplay = getOption('autoplay');\n        autoplayHoverPause = getOption('autoplayHoverPause');\n        autoplayResetOnVisibility = getOption('autoplayResetOnVisibility');\n\n        if (bpChanged) {\n          disable = getOption('disable');\n          fixedWidth = getOption('fixedWidth');\n          speed = getOption('speed');\n          autoHeight = getOption('autoHeight');\n          controlsText = getOption('controlsText');\n          autoplayText = getOption('autoplayText');\n          autoplayTimeout = getOption('autoplayTimeout');\n\n          if (!CSSMQ) {\n            edgePadding = getOption('edgePadding');\n            gutter = getOption('gutter');\n          }\n        }\n        // update options\n        resetVariblesWhenDisable(disable);\n\n        viewport = getViewportWidth(); // <= edgePadding, gutter\n        if ((!horizontal || autoWidth) && !disable) {\n          setSlidePositions();\n          if (!horizontal) {\n            updateContentWrapperHeight(); // <= setSlidePositions\n            needContainerTransform = true;\n          }\n        }\n        if (fixedWidth || autoWidth) {\n          rightBoundary = getRightBoundary(); // autoWidth: <= viewport, slidePositions, gutter\n                                              // fixedWidth: <= viewport, fixedWidth, gutter\n          indexMax = getIndexMax(); // autoWidth: <= rightBoundary, slidePositions\n                                    // fixedWidth: <= rightBoundary, fixedWidth, gutter\n        }\n\n        if (bpChanged || fixedWidth) {\n          items = getOption('items');\n          slideBy = getOption('slideBy');\n          itemsChanged = items !== itemsTem;\n\n          if (itemsChanged) {\n            if (!fixedWidth && !autoWidth) { indexMax = getIndexMax(); } // <= items\n            // check index before transform in case\n            // slider reach the right edge then items become bigger\n            updateIndex();\n          }\n        }\n\n        if (bpChanged) {\n          if (disable !== disableTem) {\n            if (disable) {\n              disableSlider();\n            } else {\n              enableSlider(); // <= slidePositions, rightBoundary, indexMax\n            }\n          }\n        }\n\n        if (freezable && (bpChanged || fixedWidth || autoWidth)) {\n          freeze = getFreeze(); // <= autoWidth: slidePositions, gutter, viewport, rightBoundary\n                                // <= fixedWidth: fixedWidth, gutter, rightBoundary\n                                // <= others: items\n\n          if (freeze !== freezeTem) {\n            if (freeze) {\n              doContainerTransform(getContainerTransformValue(getStartIndex(0)));\n              freezeSlider();\n            } else {\n              unfreezeSlider();\n              needContainerTransform = true;\n            }\n          }\n        }\n\n        resetVariblesWhenDisable(disable || freeze); // controls, nav, touch, mouseDrag, arrowKeys, autoplay, autoplayHoverPause, autoplayResetOnVisibility\n        if (!autoplay) { autoplayHoverPause = autoplayResetOnVisibility = false; }\n\n        if (arrowKeys !== arrowKeysTem) {\n          arrowKeys ?\n            addEvents(doc, docmentKeydownEvent) :\n            removeEvents(doc, docmentKeydownEvent);\n        }\n        if (controls !== controlsTem) {\n          if (controls) {\n            if (controlsContainer) {\n              showElement(controlsContainer);\n            } else {\n              if (prevButton) { showElement(prevButton); }\n              if (nextButton) { showElement(nextButton); }\n            }\n          } else {\n            if (controlsContainer) {\n              hideElement(controlsContainer);\n            } else {\n              if (prevButton) { hideElement(prevButton); }\n              if (nextButton) { hideElement(nextButton); }\n            }\n          }\n        }\n        if (nav !== navTem) {\n          if (nav) {\n            showElement(navContainer);\n            updateNavVisibility();\n          } else {\n            hideElement(navContainer);\n          }\n        }\n        if (touch !== touchTem) {\n          touch ?\n            addEvents(container, touchEvents, options.preventScrollOnTouch) :\n            removeEvents(container, touchEvents);\n        }\n        if (mouseDrag !== mouseDragTem) {\n          mouseDrag ?\n            addEvents(container, dragEvents) :\n            removeEvents(container, dragEvents);\n        }\n        if (autoplay !== autoplayTem) {\n          if (autoplay) {\n            if (autoplayButton) { showElement(autoplayButton); }\n            if (!animating && !autoplayUserPaused) { startAutoplay(); }\n          } else {\n            if (autoplayButton) { hideElement(autoplayButton); }\n            if (animating) { stopAutoplay(); }\n          }\n        }\n        if (autoplayHoverPause !== autoplayHoverPauseTem) {\n          autoplayHoverPause ?\n            addEvents(container, hoverEvents) :\n            removeEvents(container, hoverEvents);\n        }\n        if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) {\n          autoplayResetOnVisibility ?\n            addEvents(doc, visibilityEvent) :\n            removeEvents(doc, visibilityEvent);\n        }\n\n        if (bpChanged) {\n          if (fixedWidth !== fixedWidthTem || center !== centerTem) { needContainerTransform = true; }\n\n          if (autoHeight !== autoHeightTem) {\n            if (!autoHeight) { innerWrapper.style.height = ''; }\n          }\n\n          if (controls && controlsText !== controlsTextTem) {\n            prevButton.innerHTML = controlsText[0];\n            nextButton.innerHTML = controlsText[1];\n          }\n\n          if (autoplayButton && autoplayText !== autoplayTextTem) {\n            var i = autoplay ? 1 : 0,\n                html = autoplayButton.innerHTML,\n                len = html.length - autoplayTextTem[i].length;\n            if (html.substring(len) === autoplayTextTem[i]) {\n              autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];\n            }\n          }\n        } else {\n          if (center && (fixedWidth || autoWidth)) { needContainerTransform = true; }\n        }\n\n        if (itemsChanged || fixedWidth && !autoWidth) {\n          pages = getPages();\n          updateNavVisibility();\n        }\n\n        indChanged = index !== indexTem;\n        if (indChanged) {\n          events.emit('indexChanged', info());\n          needContainerTransform = true;\n        } else if (itemsChanged) {\n          if (!indChanged) { additionalUpdates(); }\n        } else if (fixedWidth || autoWidth) {\n          doLazyLoad();\n          updateSlideStatus();\n          updateLiveRegion();\n        }\n\n        if (itemsChanged && !carousel) { updateGallerySlidePositions(); }\n\n        if (!disable && !freeze) {\n          // non-mediaqueries: IE8\n          if (bpChanged && !CSSMQ) {\n            // middle wrapper styles\n\n            // inner wrapper styles\n            if (edgePadding !== edgePaddingTem || gutter !== gutterTem) {\n              innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, speed, autoHeight);\n            }\n\n            if (horizontal) {\n              // container styles\n              if (carousel) {\n                container.style.width = getContainerWidth(fixedWidth, gutter, items);\n              }\n\n              // slide styles\n              var str = getSlideWidthStyle(fixedWidth, gutter, items) +\n                        getSlideGutterStyle(gutter);\n\n              // remove the last line and\n              // add new styles\n              removeCSSRule(sheet, getCssRulesLength(sheet) - 1);\n              addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet));\n            }\n          }\n\n          // auto height\n          if (autoHeight) { doAutoHeight(); }\n\n          if (needContainerTransform) {\n            doContainerTransformSilent();\n            indexCached = index;\n          }\n        }\n\n        if (bpChanged) { events.emit('newBreakpointEnd', info(e)); }\n      }\n\n\n\n\n\n      // === INITIALIZATION FUNCTIONS === //\n      function getFreeze () {\n        if (!fixedWidth && !autoWidth) {\n          var a = center ? items - (items - 1) / 2 : items;\n          return  slideCount <= a;\n        }\n\n        var width = fixedWidth ? (fixedWidth + gutter) * slideCount : slidePositions[slideCount],\n            vp = edgePadding ? viewport + edgePadding * 2 : viewport + gutter;\n\n        if (center) {\n          vp -= fixedWidth ? (viewport - fixedWidth) / 2 : (viewport - (slidePositions[index + 1] - slidePositions[index] - gutter)) / 2;\n        }\n\n        return width <= vp;\n      }\n\n      function setBreakpointZone () {\n        breakpointZone = 0;\n        for (var bp in responsive) {\n          bp = parseInt(bp); // convert string to number\n          if (windowWidth >= bp) { breakpointZone = bp; }\n        }\n      }\n\n      // (slideBy, indexMin, indexMax) => index\n      var updateIndex = (function () {\n        return loop ?\n          carousel ?\n            // loop + carousel\n            function () {\n              var leftEdge = indexMin,\n                  rightEdge = indexMax;\n\n              leftEdge += slideBy;\n              rightEdge -= slideBy;\n\n              // adjust edges when has edge paddings\n              // or fixed-width slider with extra space on the right side\n              if (edgePadding) {\n                leftEdge += 1;\n                rightEdge -= 1;\n              } else if (fixedWidth) {\n                if ((viewport + gutter)%(fixedWidth + gutter)) { rightEdge -= 1; }\n              }\n\n              if (cloneCount) {\n                if (index > rightEdge) {\n                  index -= slideCount;\n                } else if (index < leftEdge) {\n                  index += slideCount;\n                }\n              }\n            } :\n            // loop + gallery\n            function() {\n              if (index > indexMax) {\n                while (index >= indexMin + slideCount) { index -= slideCount; }\n              } else if (index < indexMin) {\n                while (index <= indexMax - slideCount) { index += slideCount; }\n              }\n            } :\n          // non-loop\n          function() {\n            index = Math.max(indexMin, Math.min(indexMax, index));\n          };\n      })();\n\n      function disableUI () {\n        if (!autoplay && autoplayButton) { hideElement(autoplayButton); }\n        if (!nav && navContainer) { hideElement(navContainer); }\n        if (!controls) {\n          if (controlsContainer) {\n            hideElement(controlsContainer);\n          } else {\n            if (prevButton) { hideElement(prevButton); }\n            if (nextButton) { hideElement(nextButton); }\n          }\n        }\n      }\n\n      function enableUI () {\n        if (autoplay && autoplayButton) { showElement(autoplayButton); }\n        if (nav && navContainer) { showElement(navContainer); }\n        if (controls) {\n          if (controlsContainer) {\n            showElement(controlsContainer);\n          } else {\n            if (prevButton) { showElement(prevButton); }\n            if (nextButton) { showElement(nextButton); }\n          }\n        }\n      }\n\n      function freezeSlider () {\n        if (frozen) { return; }\n\n        // remove edge padding from inner wrapper\n        if (edgePadding) { innerWrapper.style.margin = '0px'; }\n\n        // add class tns-transparent to cloned slides\n        if (cloneCount) {\n          var str = 'tns-transparent';\n          for (var i = cloneCount; i--;) {\n            if (carousel) { addClass(slideItems[i], str); }\n            addClass(slideItems[slideCountNew - i - 1], str);\n          }\n        }\n\n        // update tools\n        disableUI();\n\n        frozen = true;\n      }\n\n      function unfreezeSlider () {\n        if (!frozen) { return; }\n\n        // restore edge padding for inner wrapper\n        // for mordern browsers\n        if (edgePadding && CSSMQ) { innerWrapper.style.margin = ''; }\n\n        // remove class tns-transparent to cloned slides\n        if (cloneCount) {\n          var str = 'tns-transparent';\n          for (var i = cloneCount; i--;) {\n            if (carousel) { removeClass(slideItems[i], str); }\n            removeClass(slideItems[slideCountNew - i - 1], str);\n          }\n        }\n\n        // update tools\n        enableUI();\n\n        frozen = false;\n      }\n\n      function disableSlider () {\n        if (disabled) { return; }\n\n        sheet.disabled = true;\n        container.className = container.className.replace(newContainerClasses.substring(1), '');\n        removeAttrs(container, ['style']);\n        if (loop) {\n          for (var j = cloneCount; j--;) {\n            if (carousel) { hideElement(slideItems[j]); }\n            hideElement(slideItems[slideCountNew - j - 1]);\n          }\n        }\n\n        // vertical slider\n        if (!horizontal || !carousel) { removeAttrs(innerWrapper, ['style']); }\n\n        // gallery\n        if (!carousel) {\n          for (var i = index, l = index + slideCount; i < l; i++) {\n            var item = slideItems[i];\n            removeAttrs(item, ['style']);\n            removeClass(item, animateIn);\n            removeClass(item, animateNormal);\n          }\n        }\n\n        // update tools\n        disableUI();\n\n        disabled = true;\n      }\n\n      function enableSlider () {\n        if (!disabled) { return; }\n\n        sheet.disabled = false;\n        container.className += newContainerClasses;\n        doContainerTransformSilent();\n\n        if (loop) {\n          for (var j = cloneCount; j--;) {\n            if (carousel) { showElement(slideItems[j]); }\n            showElement(slideItems[slideCountNew - j - 1]);\n          }\n        }\n\n        // gallery\n        if (!carousel) {\n          for (var i = index, l = index + slideCount; i < l; i++) {\n            var item = slideItems[i],\n                classN = i < index + items ? animateIn : animateNormal;\n            item.style.left = (i - index) * 100 / items + '%';\n            addClass(item, classN);\n          }\n        }\n\n        // update tools\n        enableUI();\n\n        disabled = false;\n      }\n\n      function updateLiveRegion () {\n        var str = getLiveRegionStr();\n        if (liveregionCurrent.innerHTML !== str) { liveregionCurrent.innerHTML = str; }\n      }\n\n      function getLiveRegionStr () {\n        var arr = getVisibleSlideRange(),\n            start = arr[0] + 1,\n            end = arr[1] + 1;\n        return start === end ? start + '' : start + ' to ' + end;\n      }\n\n      function getVisibleSlideRange (val) {\n        if (val == null) { val = getContainerTransformValue(); }\n        var start = index, end, rangestart, rangeend;\n\n        // get range start, range end for autoWidth and fixedWidth\n        if (center || edgePadding) {\n          if (autoWidth || fixedWidth) {\n            rangestart = - (parseFloat(val) + edgePadding);\n            rangeend = rangestart + viewport + edgePadding * 2;\n          }\n        } else {\n          if (autoWidth) {\n            rangestart = slidePositions[index];\n            rangeend = rangestart + viewport;\n          }\n        }\n\n        // get start, end\n        // - check auto width\n        if (autoWidth) {\n          slidePositions.forEach(function(point, i) {\n            if (i < slideCountNew) {\n              if ((center || edgePadding) && point <= rangestart + 0.5) { start = i; }\n              if (rangeend - point >= 0.5) { end = i; }\n            }\n          });\n\n        // - check percentage width, fixed width\n        } else {\n\n          if (fixedWidth) {\n            var cell = fixedWidth + gutter;\n            if (center || edgePadding) {\n              start = Math.floor(rangestart/cell);\n              end = Math.ceil(rangeend/cell - 1);\n            } else {\n              end = start + Math.ceil(viewport/cell) - 1;\n            }\n\n          } else {\n            if (center || edgePadding) {\n              var a = items - 1;\n              if (center) {\n                start -= a / 2;\n                end = index + a / 2;\n              } else {\n                end = index + a;\n              }\n\n              if (edgePadding) {\n                var b = edgePadding * items / viewport;\n                start -= b;\n                end += b;\n              }\n\n              start = Math.floor(start);\n              end = Math.ceil(end);\n            } else {\n              end = start + items - 1;\n            }\n          }\n\n          start = Math.max(start, 0);\n          end = Math.min(end, slideCountNew - 1);\n        }\n\n        return [start, end];\n      }\n\n      function doLazyLoad () {\n        if (lazyload && !disable) {\n          var arg = getVisibleSlideRange();\n          arg.push(lazyloadSelector);\n\n          getImageArray.apply(null, arg).forEach(function (img) {\n            if (!hasClass(img, imgCompleteClass)) {\n              // stop propagation transitionend event to container\n              var eve = {};\n              eve[TRANSITIONEND] = function (e) { e.stopPropagation(); };\n              addEvents(img, eve);\n\n              addEvents(img, imgEvents);\n\n              // update src\n              img.src = getAttr(img, 'data-src');\n\n              // update srcset\n              var srcset = getAttr(img, 'data-srcset');\n              if (srcset) { img.srcset = srcset; }\n\n              addClass(img, 'loading');\n            }\n          });\n        }\n      }\n\n      function onImgLoaded (e) {\n        imgLoaded(getTarget(e));\n      }\n\n      function onImgFailed (e) {\n        imgFailed(getTarget(e));\n      }\n\n      function imgLoaded (img) {\n        addClass(img, 'loaded');\n        imgCompleted(img);\n      }\n\n      function imgFailed (img) {\n        addClass(img, 'failed');\n        imgCompleted(img);\n      }\n\n      function imgCompleted (img) {\n        addClass(img, imgCompleteClass);\n        removeClass(img, 'loading');\n        removeEvents(img, imgEvents);\n      }\n\n      function getImageArray (start, end, imgSelector) {\n        var imgs = [];\n        if (!imgSelector) { imgSelector = 'img'; }\n\n        while (start <= end) {\n          forEach(slideItems[start].querySelectorAll(imgSelector), function (img) { imgs.push(img); });\n          start++;\n        }\n\n        return imgs;\n      }\n\n      // check if all visible images are loaded\n      // and update container height if it's done\n      function doAutoHeight () {\n        var imgs = getImageArray.apply(null, getVisibleSlideRange());\n        raf(function(){ imgsLoadedCheck(imgs, updateInnerWrapperHeight); });\n      }\n\n      function imgsLoadedCheck (imgs, cb) {\n        // execute callback function if all images are complete\n        if (imgsComplete) { return cb(); }\n\n        // check image classes\n        imgs.forEach(function (img, index) {\n          if (!lazyload && img.complete) { imgCompleted(img); } // Check image.complete\n          if (hasClass(img, imgCompleteClass)) { imgs.splice(index, 1); }\n        });\n\n        // execute callback function if selected images are all complete\n        if (!imgs.length) { return cb(); }\n\n        // otherwise execute this functiona again\n        raf(function(){ imgsLoadedCheck(imgs, cb); });\n      }\n\n      function additionalUpdates () {\n        doLazyLoad();\n        updateSlideStatus();\n        updateLiveRegion();\n        updateControlsStatus();\n        updateNavStatus();\n      }\n\n\n      function update_carousel_transition_duration () {\n        if (carousel && autoHeight) {\n          middleWrapper.style[TRANSITIONDURATION] = speed / 1000 + 's';\n        }\n      }\n\n      function getMaxSlideHeight (slideStart, slideRange) {\n        var heights = [];\n        for (var i = slideStart, l = Math.min(slideStart + slideRange, slideCountNew); i < l; i++) {\n          heights.push(slideItems[i].offsetHeight);\n        }\n\n        return Math.max.apply(null, heights);\n      }\n\n      // update inner wrapper height\n      // 1. get the max-height of the visible slides\n      // 2. set transitionDuration to speed\n      // 3. update inner wrapper height to max-height\n      // 4. set transitionDuration to 0s after transition done\n      function updateInnerWrapperHeight () {\n        var maxHeight = autoHeight ? getMaxSlideHeight(index, items) : getMaxSlideHeight(cloneCount, slideCount),\n            wp = middleWrapper ? middleWrapper : innerWrapper;\n\n        if (wp.style.height !== maxHeight) { wp.style.height = maxHeight + 'px'; }\n      }\n\n      // get the distance from the top edge of the first slide to each slide\n      // (init) => slidePositions\n      function setSlidePositions () {\n        slidePositions = [0];\n        var attr = horizontal ? 'left' : 'top',\n            attr2 = horizontal ? 'right' : 'bottom',\n            base = slideItems[0].getBoundingClientRect()[attr];\n\n        forEach(slideItems, function(item, i) {\n          // skip the first slide\n          if (i) { slidePositions.push(item.getBoundingClientRect()[attr] - base); }\n          // add the end edge\n          if (i === slideCountNew - 1) { slidePositions.push(item.getBoundingClientRect()[attr2] - base); }\n        });\n      }\n\n      // update slide\n      function updateSlideStatus () {\n        var range = getVisibleSlideRange(),\n            start = range[0],\n            end = range[1];\n\n        forEach(slideItems, function(item, i) {\n          // show slides\n          if (i >= start && i <= end) {\n            if (hasAttr(item, 'aria-hidden')) {\n              removeAttrs(item, ['aria-hidden', 'tabindex']);\n              addClass(item, slideActiveClass);\n            }\n          // hide slides\n          } else {\n            if (!hasAttr(item, 'aria-hidden')) {\n              setAttrs(item, {\n                'aria-hidden': 'true',\n                'tabindex': '-1'\n              });\n              removeClass(item, slideActiveClass);\n            }\n          }\n        });\n      }\n\n      // gallery: update slide position\n      function updateGallerySlidePositions () {\n        var l = index + Math.min(slideCount, items);\n        for (var i = slideCountNew; i--;) {\n          var item = slideItems[i];\n\n          if (i >= index && i < l) {\n            // add transitions to visible slides when adjusting their positions\n            addClass(item, 'tns-moving');\n\n            item.style.left = (i - index) * 100 / items + '%';\n            addClass(item, animateIn);\n            removeClass(item, animateNormal);\n          } else if (item.style.left) {\n            item.style.left = '';\n            addClass(item, animateNormal);\n            removeClass(item, animateIn);\n          }\n\n          // remove outlet animation\n          removeClass(item, animateOut);\n        }\n\n        // removing '.tns-moving'\n        setTimeout(function() {\n          forEach(slideItems, function(el) {\n            removeClass(el, 'tns-moving');\n          });\n        }, 300);\n      }\n\n      // set tabindex on Nav\n      function updateNavStatus () {\n        // get current nav\n        if (nav) {\n          navCurrentIndex = navClicked >= 0 ? navClicked : getCurrentNavIndex();\n          navClicked = -1;\n\n          if (navCurrentIndex !== navCurrentIndexCached) {\n            var navPrev = navItems[navCurrentIndexCached],\n                navCurrent = navItems[navCurrentIndex];\n\n            setAttrs(navPrev, {\n              'tabindex': '-1',\n              'aria-label': navStr + (navCurrentIndexCached + 1)\n            });\n            removeClass(navPrev, navActiveClass);\n\n            setAttrs(navCurrent, {'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent});\n            removeAttrs(navCurrent, 'tabindex');\n            addClass(navCurrent, navActiveClass);\n\n            navCurrentIndexCached = navCurrentIndex;\n          }\n        }\n      }\n\n      function getLowerCaseNodeName (el) {\n        return el.nodeName.toLowerCase();\n      }\n\n      function isButton (el) {\n        return getLowerCaseNodeName(el) === 'button';\n      }\n\n      function isAriaDisabled (el) {\n        return el.getAttribute('aria-disabled') === 'true';\n      }\n\n      function disEnableElement (isButton, el, val) {\n        if (isButton) {\n          el.disabled = val;\n        } else {\n          el.setAttribute('aria-disabled', val.toString());\n        }\n      }\n\n      // set 'disabled' to true on controls when reach the edges\n      function updateControlsStatus () {\n        if (!controls || rewind || loop) { return; }\n\n        var prevDisabled = (prevIsButton) ? prevButton.disabled : isAriaDisabled(prevButton),\n            nextDisabled = (nextIsButton) ? nextButton.disabled : isAriaDisabled(nextButton),\n            disablePrev = (index <= indexMin) ? true : false,\n            disableNext = (!rewind && index >= indexMax) ? true : false;\n\n        if (disablePrev && !prevDisabled) {\n          disEnableElement(prevIsButton, prevButton, true);\n        }\n        if (!disablePrev && prevDisabled) {\n          disEnableElement(prevIsButton, prevButton, false);\n        }\n        if (disableNext && !nextDisabled) {\n          disEnableElement(nextIsButton, nextButton, true);\n        }\n        if (!disableNext && nextDisabled) {\n          disEnableElement(nextIsButton, nextButton, false);\n        }\n      }\n\n      // set duration\n      function resetDuration (el, str) {\n        if (TRANSITIONDURATION) { el.style[TRANSITIONDURATION] = str; }\n      }\n\n      function getSliderWidth () {\n        return fixedWidth ? (fixedWidth + gutter) * slideCountNew : slidePositions[slideCountNew];\n      }\n\n      function getCenterGap (num) {\n        if (num == null) { num = index; }\n\n        var gap = edgePadding ? gutter : 0;\n        return autoWidth ? ((viewport - gap) - (slidePositions[num + 1] - slidePositions[num] - gutter))/2 :\n          fixedWidth ? (viewport - fixedWidth) / 2 :\n            (items - 1) / 2;\n      }\n\n      function getRightBoundary () {\n        var gap = edgePadding ? gutter : 0,\n            result = (viewport + gap) - getSliderWidth();\n\n        if (center && !loop) {\n          result = fixedWidth ? - (fixedWidth + gutter) * (slideCountNew - 1) - getCenterGap() :\n            getCenterGap(slideCountNew - 1) - slidePositions[slideCountNew - 1];\n        }\n        if (result > 0) { result = 0; }\n\n        return result;\n      }\n\n      function getContainerTransformValue (num) {\n        if (num == null) { num = index; }\n\n        var val;\n        if (horizontal && !autoWidth) {\n          if (fixedWidth) {\n            val = - (fixedWidth + gutter) * num;\n            if (center) { val += getCenterGap(); }\n          } else {\n            var denominator = TRANSFORM ? slideCountNew : items;\n            if (center) { num -= getCenterGap(); }\n            val = - num * 100 / denominator;\n          }\n        } else {\n          val = - slidePositions[num];\n          if (center && autoWidth) {\n            val += getCenterGap();\n          }\n        }\n\n        if (hasRightDeadZone) { val = Math.max(val, rightBoundary); }\n\n        val += (horizontal && !autoWidth && !fixedWidth) ? '%' : 'px';\n\n        return val;\n      }\n\n      function doContainerTransformSilent (val) {\n        resetDuration(container, '0s');\n        doContainerTransform(val);\n      }\n\n      function doContainerTransform (val) {\n        if (val == null) { val = getContainerTransformValue(); }\n        container.style[transformAttr] = transformPrefix + val + transformPostfix;\n      }\n\n      function animateSlide (number, classOut, classIn, isOut) {\n        var l = number + items;\n        if (!loop) { l = Math.min(l, slideCountNew); }\n\n        for (var i = number; i < l; i++) {\n            var item = slideItems[i];\n\n          // set item positions\n          if (!isOut) { item.style.left = (i - index) * 100 / items + '%'; }\n\n          if (animateDelay && TRANSITIONDELAY) {\n            item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = animateDelay * (i - number) / 1000 + 's';\n          }\n          removeClass(item, classOut);\n          addClass(item, classIn);\n\n          if (isOut) { slideItemsOut.push(item); }\n        }\n      }\n\n      // make transfer after click/drag:\n      // 1. change 'transform' property for mordern browsers\n      // 2. change 'left' property for legacy browsers\n      var transformCore = (function () {\n        return carousel ?\n          function () {\n            resetDuration(container, '');\n            if (TRANSITIONDURATION || !speed) {\n              // for morden browsers with non-zero duration or\n              // zero duration for all browsers\n              doContainerTransform();\n              // run fallback function manually\n              // when duration is 0 / container is hidden\n              if (!speed || !isVisible(container)) { onTransitionEnd(); }\n\n            } else {\n              // for old browser with non-zero duration\n              jsTransform(container, transformAttr, transformPrefix, transformPostfix, getContainerTransformValue(), speed, onTransitionEnd);\n            }\n\n            if (!horizontal) { updateContentWrapperHeight(); }\n          } :\n          function () {\n            slideItemsOut = [];\n\n            var eve = {};\n            eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;\n            removeEvents(slideItems[indexCached], eve);\n            addEvents(slideItems[index], eve);\n\n            animateSlide(indexCached, animateIn, animateOut, true);\n            animateSlide(index, animateNormal, animateIn);\n\n            // run fallback function manually\n            // when transition or animation not supported / duration is 0\n            if (!TRANSITIONEND || !ANIMATIONEND || !speed || !isVisible(container)) { onTransitionEnd(); }\n          };\n      })();\n\n      function render (e, sliderMoved) {\n        if (updateIndexBeforeTransform) { updateIndex(); }\n\n        // render when slider was moved (touch or drag) even though index may not change\n        if (index !== indexCached || sliderMoved) {\n          // events\n          events.emit('indexChanged', info());\n          events.emit('transitionStart', info());\n          if (autoHeight) { doAutoHeight(); }\n\n          // pause autoplay when click or keydown from user\n          if (animating && e && ['click', 'keydown'].indexOf(e.type) >= 0) { stopAutoplay(); }\n\n          running = true;\n          transformCore();\n        }\n      }\n\n      /*\n       * Transfer prefixed properties to the same format\n       * CSS: -Webkit-Transform => webkittransform\n       * JS: WebkitTransform => webkittransform\n       * @param {string} str - property\n       *\n       */\n      function strTrans (str) {\n        return str.toLowerCase().replace(/-/g, '');\n      }\n\n      // AFTER TRANSFORM\n      // Things need to be done after a transfer:\n      // 1. check index\n      // 2. add classes to visible slide\n      // 3. disable controls buttons when reach the first/last slide in non-loop slider\n      // 4. update nav status\n      // 5. lazyload images\n      // 6. update container height\n      function onTransitionEnd (event) {\n        // check running on gallery mode\n        // make sure trantionend/animationend events run only once\n        if (carousel || running) {\n          events.emit('transitionEnd', info(event));\n\n          if (!carousel && slideItemsOut.length > 0) {\n            for (var i = 0; i < slideItemsOut.length; i++) {\n              var item = slideItemsOut[i];\n              // set item positions\n              item.style.left = '';\n\n              if (ANIMATIONDELAY && TRANSITIONDELAY) {\n                item.style[ANIMATIONDELAY] = '';\n                item.style[TRANSITIONDELAY] = '';\n              }\n              removeClass(item, animateOut);\n              addClass(item, animateNormal);\n            }\n          }\n\n          /* update slides, nav, controls after checking ...\n           * => legacy browsers who don't support 'event'\n           *    have to check event first, otherwise event.target will cause an error\n           * => or 'gallery' mode:\n           *   + event target is slide item\n           * => or 'carousel' mode:\n           *   + event target is container,\n           *   + event.property is the same with transform attribute\n           */\n          if (!event ||\n              !carousel && event.target.parentNode === container ||\n              event.target === container && strTrans(event.propertyName) === strTrans(transformAttr)) {\n\n            if (!updateIndexBeforeTransform) {\n              var indexTem = index;\n              updateIndex();\n              if (index !== indexTem) {\n                events.emit('indexChanged', info());\n\n                doContainerTransformSilent();\n              }\n            }\n\n            if (nested === 'inner') { events.emit('innerLoaded', info()); }\n            running = false;\n            indexCached = index;\n          }\n        }\n\n      }\n\n      // # ACTIONS\n      function goTo (targetIndex, e) {\n        if (freeze) { return; }\n\n        // prev slideBy\n        if (targetIndex === 'prev') {\n          onControlsClick(e, -1);\n\n        // next slideBy\n        } else if (targetIndex === 'next') {\n          onControlsClick(e, 1);\n\n        // go to exact slide\n        } else {\n          if (running) {\n            if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n          }\n\n          var absIndex = getAbsIndex(),\n              indexGap = 0;\n\n          if (targetIndex === 'first') {\n            indexGap = - absIndex;\n          } else if (targetIndex === 'last') {\n            indexGap = carousel ? slideCount - items - absIndex : slideCount - 1 - absIndex;\n          } else {\n            if (typeof targetIndex !== 'number') { targetIndex = parseInt(targetIndex); }\n\n            if (!isNaN(targetIndex)) {\n              // from directly called goTo function\n              if (!e) { targetIndex = Math.max(0, Math.min(slideCount - 1, targetIndex)); }\n\n              indexGap = targetIndex - absIndex;\n            }\n          }\n\n          // gallery: make sure new page won't overlap with current page\n          if (!carousel && indexGap && Math.abs(indexGap) < items) {\n            var factor = indexGap > 0 ? 1 : -1;\n            indexGap += (index + indexGap - slideCount) >= indexMin ? slideCount * factor : slideCount * 2 * factor * -1;\n          }\n\n          index += indexGap;\n\n          // make sure index is in range\n          if (carousel && loop) {\n            if (index < indexMin) { index += slideCount; }\n            if (index > indexMax) { index -= slideCount; }\n          }\n\n          // if index is changed, start rendering\n          if (getAbsIndex(index) !== getAbsIndex(indexCached)) {\n            render(e);\n          }\n\n        }\n      }\n\n      // on controls click\n      function onControlsClick (e, dir) {\n        if (running) {\n          if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n        }\n        var passEventObject;\n\n        if (!dir) {\n          e = getEvent(e);\n          var target = getTarget(e);\n\n          while (target !== controlsContainer && [prevButton, nextButton].indexOf(target) < 0) { target = target.parentNode; }\n\n          var targetIn = [prevButton, nextButton].indexOf(target);\n          if (targetIn >= 0) {\n            passEventObject = true;\n            dir = targetIn === 0 ? -1 : 1;\n          }\n        }\n\n        if (rewind) {\n          if (index === indexMin && dir === -1) {\n            goTo('last', e);\n            return;\n          } else if (index === indexMax && dir === 1) {\n            goTo('first', e);\n            return;\n          }\n        }\n\n        if (dir) {\n          index += slideBy * dir;\n          if (autoWidth) { index = Math.floor(index); }\n          // pass e when click control buttons or keydown\n          render((passEventObject || (e && e.type === 'keydown')) ? e : null);\n        }\n      }\n\n      // on nav click\n      function onNavClick (e) {\n        if (running) {\n          if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n        }\n\n        e = getEvent(e);\n        var target = getTarget(e), navIndex;\n\n        // find the clicked nav item\n        while (target !== navContainer && !hasAttr(target, 'data-nav')) { target = target.parentNode; }\n        if (hasAttr(target, 'data-nav')) {\n          var navIndex = navClicked = Number(getAttr(target, 'data-nav')),\n              targetIndexBase = fixedWidth || autoWidth ? navIndex * slideCount / pages : navIndex * items,\n              targetIndex = navAsThumbnails ? navIndex : Math.min(Math.ceil(targetIndexBase), slideCount - 1);\n          goTo(targetIndex, e);\n\n          if (navCurrentIndex === navIndex) {\n            if (animating) { stopAutoplay(); }\n            navClicked = -1; // reset navClicked\n          }\n        }\n      }\n\n      // autoplay functions\n      function setAutoplayTimer () {\n        autoplayTimer = setInterval(function () {\n          onControlsClick(null, autoplayDirection);\n        }, autoplayTimeout);\n\n        animating = true;\n      }\n\n      function stopAutoplayTimer () {\n        clearInterval(autoplayTimer);\n        animating = false;\n      }\n\n      function updateAutoplayButton (action, txt) {\n        setAttrs(autoplayButton, {'data-action': action});\n        autoplayButton.innerHTML = autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;\n      }\n\n      function startAutoplay () {\n        setAutoplayTimer();\n        if (autoplayButton) { updateAutoplayButton('stop', autoplayText[1]); }\n      }\n\n      function stopAutoplay () {\n        stopAutoplayTimer();\n        if (autoplayButton) { updateAutoplayButton('start', autoplayText[0]); }\n      }\n\n      // programaitcally play/pause the slider\n      function play () {\n        if (autoplay && !animating) {\n          startAutoplay();\n          autoplayUserPaused = false;\n        }\n      }\n      function pause () {\n        if (animating) {\n          stopAutoplay();\n          autoplayUserPaused = true;\n        }\n      }\n\n      function toggleAutoplay () {\n        if (animating) {\n          stopAutoplay();\n          autoplayUserPaused = true;\n        } else {\n          startAutoplay();\n          autoplayUserPaused = false;\n        }\n      }\n\n      function onVisibilityChange () {\n        if (doc.hidden) {\n          if (animating) {\n            stopAutoplayTimer();\n            autoplayVisibilityPaused = true;\n          }\n        } else if (autoplayVisibilityPaused) {\n          setAutoplayTimer();\n          autoplayVisibilityPaused = false;\n        }\n      }\n\n      function mouseoverPause () {\n        if (animating) {\n          stopAutoplayTimer();\n          autoplayHoverPaused = true;\n        }\n      }\n\n      function mouseoutRestart () {\n        if (autoplayHoverPaused) {\n          setAutoplayTimer();\n          autoplayHoverPaused = false;\n        }\n      }\n\n      // keydown events on document\n      function onDocumentKeydown (e) {\n        e = getEvent(e);\n        var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n        if (keyIndex >= 0) {\n          onControlsClick(e, keyIndex === 0 ? -1 : 1);\n        }\n      }\n\n      // on key control\n      function onControlsKeydown (e) {\n        e = getEvent(e);\n        var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n        if (keyIndex >= 0) {\n          if (keyIndex === 0) {\n            if (!prevButton.disabled) { onControlsClick(e, -1); }\n          } else if (!nextButton.disabled) {\n            onControlsClick(e, 1);\n          }\n        }\n      }\n\n      // set focus\n      function setFocus (el) {\n        el.focus();\n      }\n\n      // on key nav\n      function onNavKeydown (e) {\n        e = getEvent(e);\n        var curElement = doc.activeElement;\n        if (!hasAttr(curElement, 'data-nav')) { return; }\n\n        // var code = e.keyCode,\n        var keyIndex = [KEYS.LEFT, KEYS.RIGHT, KEYS.ENTER, KEYS.SPACE].indexOf(e.keyCode),\n            navIndex = Number(getAttr(curElement, 'data-nav'));\n\n        if (keyIndex >= 0) {\n          if (keyIndex === 0) {\n            if (navIndex > 0) { setFocus(navItems[navIndex - 1]); }\n          } else if (keyIndex === 1) {\n            if (navIndex < pages - 1) { setFocus(navItems[navIndex + 1]); }\n          } else {\n            navClicked = navIndex;\n            goTo(navIndex, e);\n          }\n        }\n      }\n\n      function getEvent (e) {\n        e = e || win.event;\n        return isTouchEvent(e) ? e.changedTouches[0] : e;\n      }\n      function getTarget (e) {\n        return e.target || win.event.srcElement;\n      }\n\n      function isTouchEvent (e) {\n        return e.type.indexOf('touch') >= 0;\n      }\n\n      function preventDefaultBehavior (e) {\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n      }\n\n      function getMoveDirectionExpected () {\n        return getTouchDirection(toDegree(lastPosition.y - initPosition.y, lastPosition.x - initPosition.x), swipeAngle) === options.axis;\n      }\n\n      function onPanStart (e) {\n        if (running) {\n          if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n        }\n\n        if (autoplay && animating) { stopAutoplayTimer(); }\n\n        panStart = true;\n        if (rafIndex) {\n          caf(rafIndex);\n          rafIndex = null;\n        }\n\n        var $ = getEvent(e);\n        events.emit(isTouchEvent(e) ? 'touchStart' : 'dragStart', info(e));\n\n        if (!isTouchEvent(e) && ['img', 'a'].indexOf(getLowerCaseNodeName(getTarget(e))) >= 0) {\n          preventDefaultBehavior(e);\n        }\n\n        lastPosition.x = initPosition.x = $.clientX;\n        lastPosition.y = initPosition.y = $.clientY;\n        if (carousel) {\n          translateInit = parseFloat(container.style[transformAttr].replace(transformPrefix, ''));\n          resetDuration(container, '0s');\n        }\n      }\n\n      function onPanMove (e) {\n        if (panStart) {\n          var $ = getEvent(e);\n          lastPosition.x = $.clientX;\n          lastPosition.y = $.clientY;\n\n          if (carousel) {\n            if (!rafIndex) { rafIndex = raf(function(){ panUpdate(e); }); }\n          } else {\n            if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }\n            if (moveDirectionExpected) { preventScroll = true; }\n          }\n\n          if ((typeof e.cancelable !== 'boolean' || e.cancelable) && preventScroll) {\n            e.preventDefault();\n          }\n        }\n      }\n\n      function panUpdate (e) {\n        if (!moveDirectionExpected) {\n          panStart = false;\n          return;\n        }\n        caf(rafIndex);\n        if (panStart) { rafIndex = raf(function(){ panUpdate(e); }); }\n\n        if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }\n        if (moveDirectionExpected) {\n          if (!preventScroll && isTouchEvent(e)) { preventScroll = true; }\n\n          try {\n            if (e.type) { events.emit(isTouchEvent(e) ? 'touchMove' : 'dragMove', info(e)); }\n          } catch(err) {}\n\n          var x = translateInit,\n              dist = getDist(lastPosition, initPosition);\n          if (!horizontal || fixedWidth || autoWidth) {\n            x += dist;\n            x += 'px';\n          } else {\n            var percentageX = TRANSFORM ? dist * items * 100 / ((viewport + gutter) * slideCountNew): dist * 100 / (viewport + gutter);\n            x += percentageX;\n            x += '%';\n          }\n\n          container.style[transformAttr] = transformPrefix + x + transformPostfix;\n        }\n      }\n\n      function onPanEnd (e) {\n        if (panStart) {\n          if (rafIndex) {\n            caf(rafIndex);\n            rafIndex = null;\n          }\n          if (carousel) { resetDuration(container, ''); }\n          panStart = false;\n\n          var $ = getEvent(e);\n          lastPosition.x = $.clientX;\n          lastPosition.y = $.clientY;\n          var dist = getDist(lastPosition, initPosition);\n\n          if (Math.abs(dist)) {\n            // drag vs click\n            if (!isTouchEvent(e)) {\n              // prevent \"click\"\n              var target = getTarget(e);\n              addEvents(target, {'click': function preventClick (e) {\n                preventDefaultBehavior(e);\n                removeEvents(target, {'click': preventClick});\n              }});\n            }\n\n            if (carousel) {\n              rafIndex = raf(function() {\n                if (horizontal && !autoWidth) {\n                  var indexMoved = - dist * items / (viewport + gutter);\n                  indexMoved = dist > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);\n                  index += indexMoved;\n                } else {\n                  var moved = - (translateInit + dist);\n                  if (moved <= 0) {\n                    index = indexMin;\n                  } else if (moved >= slidePositions[slideCountNew - 1]) {\n                    index = indexMax;\n                  } else {\n                    var i = 0;\n                    while (i < slideCountNew && moved >= slidePositions[i]) {\n                      index = i;\n                      if (moved > slidePositions[i] && dist < 0) { index += 1; }\n                      i++;\n                    }\n                  }\n                }\n\n                render(e, dist);\n                events.emit(isTouchEvent(e) ? 'touchEnd' : 'dragEnd', info(e));\n              });\n            } else {\n              if (moveDirectionExpected) {\n                onControlsClick(e, dist > 0 ? -1 : 1);\n              }\n            }\n          }\n        }\n\n        // reset\n        if (options.preventScrollOnTouch === 'auto') { preventScroll = false; }\n        if (swipeAngle) { moveDirectionExpected = '?'; }\n        if (autoplay && !animating) { setAutoplayTimer(); }\n      }\n\n      // === RESIZE FUNCTIONS === //\n      // (slidePositions, index, items) => vertical_conentWrapper.height\n      function updateContentWrapperHeight () {\n        var wp = middleWrapper ? middleWrapper : innerWrapper;\n        wp.style.height = slidePositions[index + items] - slidePositions[index] + 'px';\n      }\n\n      function getPages () {\n        var rough = fixedWidth ? (fixedWidth + gutter) * slideCount / viewport : slideCount / items;\n        return Math.min(Math.ceil(rough), slideCount);\n      }\n\n      /*\n       * 1. update visible nav items list\n       * 2. add \"hidden\" attributes to previous visible nav items\n       * 3. remove \"hidden\" attrubutes to new visible nav items\n       */\n      function updateNavVisibility () {\n        if (!nav || navAsThumbnails) { return; }\n\n        if (pages !== pagesCached) {\n          var min = pagesCached,\n              max = pages,\n              fn = showElement;\n\n          if (pagesCached > pages) {\n            min = pages;\n            max = pagesCached;\n            fn = hideElement;\n          }\n\n          while (min < max) {\n            fn(navItems[min]);\n            min++;\n          }\n\n          // cache pages\n          pagesCached = pages;\n        }\n      }\n\n      function info (e) {\n        return {\n          container: container,\n          slideItems: slideItems,\n          navContainer: navContainer,\n          navItems: navItems,\n          controlsContainer: controlsContainer,\n          hasControls: hasControls,\n          prevButton: prevButton,\n          nextButton: nextButton,\n          items: items,\n          slideBy: slideBy,\n          cloneCount: cloneCount,\n          slideCount: slideCount,\n          slideCountNew: slideCountNew,\n          index: index,\n          indexCached: indexCached,\n          displayIndex: getCurrentSlide(),\n          navCurrentIndex: navCurrentIndex,\n          navCurrentIndexCached: navCurrentIndexCached,\n          pages: pages,\n          pagesCached: pagesCached,\n          sheet: sheet,\n          isOn: isOn,\n          event: e || {},\n        };\n      }\n\n      return {\n        version: '2.9.3',\n        getInfo: info,\n        events: events,\n        goTo: goTo,\n        play: play,\n        pause: pause,\n        isOn: isOn,\n        updateSliderHeight: updateInnerWrapperHeight,\n        refresh: initSliderTransform,\n        destroy: destroy,\n        rebuild: function() {\n          return tns(extend(options, optionsElements));\n        }\n      };\n    };\n\n    return tns;\n})();\n"]}